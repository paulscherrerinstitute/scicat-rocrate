/* CVS $Id: $ */
package org.schema; 
import org.apache.jena.rdf.model.*;
import org.apache.jena.ontology.*;
 
/**
 * Vocabulary definitions from https://schema.org/version/latest/schemaorg-current-http.ttl 
 * @author Auto-generated by schemagen on 09 Apr 2025 10:54 
 */
public class SchemaVocab {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static final OntModel M_MODEL = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://schema.org/";
    
    /** <p>The namespace of the vocabulary as a string</p>
     * @return namespace as String
     * @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = M_MODEL.createResource( NS );
    
    public static final ObjectProperty differentFrom = M_MODEL.createObjectProperty( "http://www.w3.org/2002/07/owl#differentFrom" );
    
    public static final ObjectProperty disjointWith = M_MODEL.createObjectProperty( "http://www.w3.org/2002/07/owl#disjointWith" );
    
    public static final ObjectProperty sameAs = M_MODEL.createObjectProperty( "http://www.w3.org/2002/07/owl#sameAs" );
    
    public static final OntProperty amends = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#amends" );
    
    public static final OntProperty changes = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#changes" );
    
    public static final OntProperty commences = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#commences" );
    
    public static final OntProperty consolidates = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#consolidates" );
    
    public static final OntProperty corrects = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#corrects" );
    
    public static final OntProperty countersigned_by = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#countersigned_by" );
    
    public static final OntProperty date_applicability = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#date_applicability" );
    
    public static final OntProperty date_document = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#date_document" );
    
    public static final OntProperty ensures_implementation_of = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#ensures_implementation_of" );
    
    public static final OntProperty implements_ = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#implements" );
    
    public static final OntProperty in_force = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#in_force" );
    
    public static final OntProperty jurisdiction = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#jurisdiction" );
    
    public static final OntProperty legal_value = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#legal_value" );
    
    public static final OntProperty passed_by = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#passed_by" );
    
    public static final OntProperty repeals = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#repeals" );
    
    public static final OntProperty responsibility_of = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#responsibility_of" );
    
    public static final OntProperty transposes = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#transposes" );
    
    public static final OntProperty type_document = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#type_document" );
    
    public static final OntProperty version_date = M_MODEL.createOntProperty( "http://data.europa.eu/eli/ontology#version_date" );
    
    public static final OntProperty description = M_MODEL.createOntProperty( "http://purl.org/dc/terms/description" );
    
    public static final OntProperty identifier = M_MODEL.createOntProperty( "http://purl.org/dc/terms/identifier" );
    
    public static final OntProperty spatial = M_MODEL.createOntProperty( "http://purl.org/dc/terms/spatial" );
    
    public static final OntProperty temporal = M_MODEL.createOntProperty( "http://purl.org/dc/terms/temporal" );
    
    public static final OntProperty title = M_MODEL.createOntProperty( "http://purl.org/dc/terms/title" );
    
    public static final OntProperty isbn = M_MODEL.createOntProperty( "http://purl.org/ontology/bibo/isbn" );
    
    public static final OntProperty issn = M_MODEL.createOntProperty( "http://purl.org/ontology/bibo/issn" );
    
    public static final OntProperty issue = M_MODEL.createOntProperty( "http://purl.org/ontology/bibo/issue" );
    
    public static final OntProperty pageEnd = M_MODEL.createOntProperty( "http://purl.org/ontology/bibo/pageEnd" );
    
    public static final OntProperty pageStart = M_MODEL.createOntProperty( "http://purl.org/ontology/bibo/pageStart" );
    
    public static final OntProperty pages = M_MODEL.createOntProperty( "http://purl.org/ontology/bibo/pages" );
    
    public static final OntProperty volume = M_MODEL.createOntProperty( "http://purl.org/ontology/bibo/volume" );
    
    public static final OntProperty label = M_MODEL.createOntProperty( "http://purl.org/ontology/mo/label" );
    
    /** <p>The subject matter of the content.</p> */
    public static final OntProperty about = M_MODEL.createOntProperty( "http://schema.org/about" );
    
    /** <p>Indicates whether the book is an abridged edition.</p> */
    public static final OntProperty abridged = M_MODEL.createOntProperty( "http://schema.org/abridged" );
    
    /** <p>An abstract is a short description that summarizes a [[CreativeWork]].</p> */
    public static final OntProperty abstract_ = M_MODEL.createOntProperty( "http://schema.org/abstract" );
    
    /** <p>The time needed to accelerate the vehicle from a given start velocity to a 
     *  given target velocity.
     *  
     *  Typical unit code(s): SEC for seconds
     *  
     *  * Note: There are unfortunately no standard unit codes for seconds/0..100 
     *  km/h or seconds/0..60 mph. Simply use "SEC" for seconds and indicate the velocities 
     *  in the [[name]] of the [[QuantitativeValue]], or use [[valueReference]] with 
     *  a [[QuantitativeValue]] of 0..60 mph or 0..100 km/h to specify the reference 
     *  speeds.</p>
     */
    public static final OntProperty accelerationTime = M_MODEL.createOntProperty( "http://schema.org/accelerationTime" );
    
    /** <p>The answer(s) that has been accepted as best, typically on a Question/Answer 
     *  site. Sites vary in their selection mechanisms, e.g. drawing on community 
     *  opinion and/or the view of the Question author.</p>
     */
    public static final OntProperty acceptedAnswer = M_MODEL.createOntProperty( "http://schema.org/acceptedAnswer" );
    
    /** <p>The offer(s) -- e.g., product, quantity and price combinations -- included 
     *  in the order.</p>
     */
    public static final OntProperty acceptedOffer = M_MODEL.createOntProperty( "http://schema.org/acceptedOffer" );
    
    /** <p>The payment method(s) that are accepted in general by an organization, or 
     *  for some specific demand or offer.</p>
     */
    public static final OntProperty acceptedPaymentMethod = M_MODEL.createOntProperty( "http://schema.org/acceptedPaymentMethod" );
    
    /** <p>Indicates whether a FoodEstablishment accepts reservations. Values can be 
     *  Boolean, an URL at which reservations can be made or (for backwards compatibility) 
     *  the strings ```Yes``` or ```No```.</p>
     */
    public static final OntProperty acceptsReservations = M_MODEL.createOntProperty( "http://schema.org/acceptsReservations" );
    
    /** <p>Password, PIN, or access code needed for delivery (e.g. from a locker).</p> */
    public static final OntProperty accessCode = M_MODEL.createOntProperty( "http://schema.org/accessCode" );
    
    /** <p>The human sensory perceptual system or cognitive faculty through which a person 
     *  may process or perceive information. Values should be drawn from the [approved 
     *  vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessMode-vocabulary).</p>
     */
    public static final OntProperty accessMode = M_MODEL.createOntProperty( "http://schema.org/accessMode" );
    
    /** <p>A list of single or combined accessModes that are sufficient to understand 
     *  all the intellectual content of a resource. Values should be drawn from the 
     *  [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessModeSufficient-vocabulary).</p>
     */
    public static final OntProperty accessModeSufficient = M_MODEL.createOntProperty( "http://schema.org/accessModeSufficient" );
    
    /** <p>Indicates that the resource is compatible with the referenced accessibility 
     *  API. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityAPI-vocabulary).</p>
     */
    public static final OntProperty accessibilityAPI = M_MODEL.createOntProperty( "http://schema.org/accessibilityAPI" );
    
    /** <p>Identifies input methods that are sufficient to fully control the described 
     *  resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityControl-vocabulary).</p>
     */
    public static final OntProperty accessibilityControl = M_MODEL.createOntProperty( "http://schema.org/accessibilityControl" );
    
    /** <p>Content features of the resource, such as accessible media, alternatives and 
     *  supported enhancements for accessibility. Values should be drawn from the 
     *  [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityFeature-vocabulary).</p>
     */
    public static final OntProperty accessibilityFeature = M_MODEL.createOntProperty( "http://schema.org/accessibilityFeature" );
    
    /** <p>A characteristic of the described resource that is physiologically dangerous 
     *  to some users. Related to WCAG 2.0 guideline 2.3. Values should be drawn from 
     *  the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityHazard-vocabulary).</p>
     */
    public static final OntProperty accessibilityHazard = M_MODEL.createOntProperty( "http://schema.org/accessibilityHazard" );
    
    /** <p>A human-readable summary of specific accessibility features or deficiencies, 
     *  consistent with the other accessibility metadata but expressing subtleties 
     *  such as "short descriptions are present but long descriptions will be needed 
     *  for non-visual users" or "short descriptions are present and no long descriptions 
     *  are needed".</p>
     */
    public static final OntProperty accessibilitySummary = M_MODEL.createOntProperty( "http://schema.org/accessibilitySummary" );
    
    /** <p>Category of an [[Accommodation]], following real estate conventions, e.g. 
     *  RESO (see [PropertySubType](https://ddwiki.reso.org/display/DDW17/PropertySubType+Field), 
     *  and [PropertyType](https://ddwiki.reso.org/display/DDW17/PropertyType+Field) 
     *  fields for suggested values).</p>
     */
    public static final OntProperty accommodationCategory = M_MODEL.createOntProperty( "http://schema.org/accommodationCategory" );
    
    /** <p>A floorplan of some [[Accommodation]].</p> */
    public static final OntProperty accommodationFloorPlan = M_MODEL.createOntProperty( "http://schema.org/accommodationFloorPlan" );
    
    /** <p>The identifier for the account the payment will be applied to.</p> */
    public static final OntProperty accountId = M_MODEL.createOntProperty( "http://schema.org/accountId" );
    
    /** <p>A minimum amount that has to be paid in every month.</p> */
    public static final OntProperty accountMinimumInflow = M_MODEL.createOntProperty( "http://schema.org/accountMinimumInflow" );
    
    /** <p>An overdraft is an extension of credit from a lending institution when an 
     *  account reaches zero. An overdraft allows the individual to continue withdrawing 
     *  money even if the account has no funds in it. Basically the bank allows people 
     *  to borrow a set amount of money.</p>
     */
    public static final OntProperty accountOverdraftLimit = M_MODEL.createOntProperty( "http://schema.org/accountOverdraftLimit" );
    
    /** <p>Specifies the Person that is legally accountable for the CreativeWork.</p> */
    public static final OntProperty accountablePerson = M_MODEL.createOntProperty( "http://schema.org/accountablePerson" );
    
    /** <p>Indicates a page documenting how licenses can be purchased or otherwise acquired, 
     *  for the current item.</p>
     */
    public static final OntProperty acquireLicensePage = M_MODEL.createOntProperty( "http://schema.org/acquireLicensePage" );
    
    /** <p>The organization or person from which the product was acquired.</p> */
    public static final OntProperty acquiredFrom = M_MODEL.createOntProperty( "http://schema.org/acquiredFrom" );
    
    /** <p>The ACRISS Car Classification Code is a code used by many car rental companies, 
     *  for classifying vehicles. ACRISS stands for Association of Car Rental Industry 
     *  Systems and Standards.</p>
     */
    public static final OntProperty acrissCode = M_MODEL.createOntProperty( "http://schema.org/acrissCode" );
    
    /** <p>A set of requirements that must be fulfilled in order to perform an Action. 
     *  If more than one value is specified, fulfilling one set of requirements will 
     *  allow the Action to be performed.</p>
     */
    public static final OntProperty actionAccessibilityRequirement = M_MODEL.createOntProperty( "http://schema.org/actionAccessibilityRequirement" );
    
    /** <p>An application that can complete the request.</p> */
    public static final OntProperty actionApplication = M_MODEL.createOntProperty( "http://schema.org/actionApplication" );
    
    /** <p>A sub property of object. The options subject to this action.</p> */
    public static final OntProperty actionOption = M_MODEL.createOntProperty( "http://schema.org/actionOption" );
    
    /** <p>The high level platform(s) where the Action can be performed for the given 
     *  URL. To specify a specific application or operating system instance, use actionApplication.</p>
     */
    public static final OntProperty actionPlatform = M_MODEL.createOntProperty( "http://schema.org/actionPlatform" );
    
    /** <p>Description of the process by which the action was performed.</p> */
    public static final OntProperty actionProcess = M_MODEL.createOntProperty( "http://schema.org/actionProcess" );
    
    /** <p>Indicates the current disposition of the Action.</p> */
    public static final OntProperty actionStatus = M_MODEL.createOntProperty( "http://schema.org/actionStatus" );
    
    /** <p>For a [[NewsMediaOrganization]] or other news-related [[Organization]], a 
     *  statement about public engagement activities (for news media, the newsroom’s), 
     *  including involving the public - digitally or otherwise -- in coverage decisions, 
     *  reporting and activities after publication.</p>
     */
    public static final OntProperty actionableFeedbackPolicy = M_MODEL.createOntProperty( "http://schema.org/actionableFeedbackPolicy" );
    
    /** <p>An active ingredient, typically chemical compounds and/or biologic substances.</p> */
    public static final OntProperty activeIngredient = M_MODEL.createOntProperty( "http://schema.org/activeIngredient" );
    
    /** <p>Length of time to engage in the activity.</p> */
    public static final OntProperty activityDuration = M_MODEL.createOntProperty( "http://schema.org/activityDuration" );
    
    /** <p>How often one should engage in the activity.</p> */
    public static final OntProperty activityFrequency = M_MODEL.createOntProperty( "http://schema.org/activityFrequency" );
    
    /** <p>An actor (individual or a group), e.g. in TV, radio, movie, video games etc., 
     *  or in an event. Actors can be associated with individual items or with a series, 
     *  episode, clip.</p>
     */
    public static final OntProperty actor = M_MODEL.createOntProperty( "http://schema.org/actor" );
    
    /** <p>An actor, e.g. in TV, radio, movie, video games etc. Actors can be associated 
     *  with individual items or with a series, episode, clip.</p>
     */
    public static final OntProperty actors = M_MODEL.createOntProperty( "http://schema.org/actors" );
    
    /** <p>An additional offer that can only be obtained in combination with the first 
     *  base offer (e.g. supplements and extensions that are available for a surcharge).</p>
     */
    public static final OntProperty addOn = M_MODEL.createOntProperty( "http://schema.org/addOn" );
    
    /** <p>An additional name for a Person, can be used for a middle name.</p> */
    public static final OntProperty additionalName = M_MODEL.createOntProperty( "http://schema.org/additionalName" );
    
    /** <p>If responding yes, the number of guests who will attend in addition to the 
     *  invitee.</p>
     */
    public static final OntProperty additionalNumberOfGuests = M_MODEL.createOntProperty( "http://schema.org/additionalNumberOfGuests" );
    
    /** <p>A property-value pair representing an additional characteristic of the entity, 
     *  e.g. a product feature or another characteristic for which there is no matching 
     *  property in schema.org.
     *  
     *  Note: Publishers should be aware that applications designed to use specific 
     *  schema.org properties (e.g. http://schema.org/width, http://schema.org/color, 
     *  http://schema.org/gtin13, ...) will typically expect such data to be provided 
     *  using those properties, rather than using the generic property/value mechanism.</p>
     */
    public static final OntProperty additionalProperty = M_MODEL.createOntProperty( "http://schema.org/additionalProperty" );
    
    /** <p>An additional type for the item, typically used for adding more specific types 
     *  from external vocabularies in microdata syntax. This is a relationship between 
     *  something and a class that the thing is in. Typically the value is a URI-identified 
     *  RDF class, and in this case corresponds to the use of rdf:type in RDF. Text 
     *  values can be used sparingly, for cases where useful information can be added 
     *  without their being an appropriate schema to reference. In the case of text 
     *  values, the class label should follow the schema.org &lt;a href="http://schema.org/docs/styleguide.html"&gt;style 
     *  guide&lt;/a&gt;.</p>
     */
    public static final OntProperty additionalType = M_MODEL.createOntProperty( "http://schema.org/additionalType" );
    
    /** <p>Any additional component of the exercise prescription that may need to be 
     *  articulated to the patient. This may include the order of exercises, the number 
     *  of repetitions of movement, quantitative distance, progressions over time, 
     *  etc.</p>
     */
    public static final OntProperty additionalVariable = M_MODEL.createOntProperty( "http://schema.org/additionalVariable" );
    
    /** <p>Physical address of the item.</p> */
    public static final OntProperty address = M_MODEL.createOntProperty( "http://schema.org/address" );
    
    /** <p>The country. Recommended to be in 2-letter [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1) 
     *  format, for example "US". For backward compatibility, a 3-letter [ISO 3166-1 
     *  alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country code such 
     *  as "SGP" or a full country name such as "Singapore" can also be used.</p>
     */
    public static final OntProperty addressCountry = M_MODEL.createOntProperty( "http://schema.org/addressCountry" );
    
    /** <p>The locality in which the street address is, and which is in the region. For 
     *  example, Mountain View.</p>
     */
    public static final OntProperty addressLocality = M_MODEL.createOntProperty( "http://schema.org/addressLocality" );
    
    /** <p>The region in which the locality is, and which is in the country. For example, 
     *  California or another appropriate first-level [Administrative division](https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country).</p>
     */
    public static final OntProperty addressRegion = M_MODEL.createOntProperty( "http://schema.org/addressRegion" );
    
    /** <p>A route by which this drug may be administered, e.g. 'oral'.</p> */
    public static final OntProperty administrationRoute = M_MODEL.createOntProperty( "http://schema.org/administrationRoute" );
    
    /** <p>The amount of time that is required between accepting the offer and the actual 
     *  usage of the resource or service.</p>
     */
    public static final OntProperty advanceBookingRequirement = M_MODEL.createOntProperty( "http://schema.org/advanceBookingRequirement" );
    
    /** <p>A possible complication and/or side effect of this therapy. If it is known 
     *  that an adverse outcome is serious (resulting in death, disability, or permanent 
     *  damage; requiring hospitalization; or otherwise life-threatening or requiring 
     *  immediate medical attention), tag it as a seriousAdverseOutcome instead.</p>
     */
    public static final OntProperty adverseOutcome = M_MODEL.createOntProperty( "http://schema.org/adverseOutcome" );
    
    /** <p>Drugs that affect the test's results.</p> */
    public static final OntProperty affectedBy = M_MODEL.createOntProperty( "http://schema.org/affectedBy" );
    
    /** <p>An organization that this person is affiliated with. For example, a school/university, 
     *  a club, or a team.</p>
     */
    public static final OntProperty affiliation = M_MODEL.createOntProperty( "http://schema.org/affiliation" );
    
    /** <p>A media object representing the circumstances after performing this direction.</p> */
    public static final OntProperty afterMedia = M_MODEL.createOntProperty( "http://schema.org/afterMedia" );
    
    /** <p>The direct performer or driver of the action (animate or inanimate). E.g. 
     *  *John* wrote a book.</p>
     */
    public static final OntProperty agent = M_MODEL.createOntProperty( "http://schema.org/agent" );
    
    /** <p>The number of completed interactions for this entity, in a particular role 
     *  (the 'agent'), in a particular action (indicated in the statistic), and in 
     *  a particular context (i.e. interactionService).</p>
     */
    public static final OntProperty agentInteractionStatistic = M_MODEL.createOntProperty( "http://schema.org/agentInteractionStatistic" );
    
    /** <p>Indicates a prototype of the elements in the list that is used to hold aggregate 
     *  information (ratings, offers, etc.).</p>
     */
    public static final OntProperty aggregateElement = M_MODEL.createOntProperty( "http://schema.org/aggregateElement" );
    
    /** <p>The overall rating, based on a collection of reviews or ratings, of the item.</p> */
    public static final OntProperty aggregateRating = M_MODEL.createOntProperty( "http://schema.org/aggregateRating" );
    
    /** <p>The kind of aircraft (e.g., "Boeing 747").</p> */
    public static final OntProperty aircraft = M_MODEL.createOntProperty( "http://schema.org/aircraft" );
    
    /** <p>A music album.</p> */
    public static final OntProperty album = M_MODEL.createOntProperty( "http://schema.org/album" );
    
    /** <p>Classification of the album by its type of content: soundtrack, live album, 
     *  studio album, etc.</p>
     */
    public static final OntProperty albumProductionType = M_MODEL.createOntProperty( "http://schema.org/albumProductionType" );
    
    /** <p>A release of this album.</p> */
    public static final OntProperty albumRelease = M_MODEL.createOntProperty( "http://schema.org/albumRelease" );
    
    /** <p>The kind of release which this album is: single, EP or album.</p> */
    public static final OntProperty albumReleaseType = M_MODEL.createOntProperty( "http://schema.org/albumReleaseType" );
    
    /** <p>A collection of music albums.</p> */
    public static final OntProperty albums = M_MODEL.createOntProperty( "http://schema.org/albums" );
    
    /** <p>Any precaution, guidance, contraindication, etc. related to consumption of 
     *  alcohol while taking this drug.</p>
     */
    public static final OntProperty alcoholWarning = M_MODEL.createOntProperty( "http://schema.org/alcoholWarning" );
    
    /** <p>The algorithm or rules to follow to compute the score.</p> */
    public static final OntProperty algorithm = M_MODEL.createOntProperty( "http://schema.org/algorithm" );
    
    /** <p>A category of alignment between the learning resource and the framework node. 
     *  Recommended values include: 'requires', 'textComplexity', 'readingLevel', 
     *  and 'educationalSubject'.</p>
     */
    public static final OntProperty alignmentType = M_MODEL.createOntProperty( "http://schema.org/alignmentType" );
    
    /** <p>An alias for the item.</p> */
    public static final OntProperty alternateName = M_MODEL.createOntProperty( "http://schema.org/alternateName" );
    
    /** <p>A secondary title of the CreativeWork.</p> */
    public static final OntProperty alternativeHeadline = M_MODEL.createOntProperty( "http://schema.org/alternativeHeadline" );
    
    /** <p>Another gene which is a variation of this one.</p> */
    public static final OntProperty alternativeOf = M_MODEL.createOntProperty( "http://schema.org/alternativeOf" );
    
    /** <p>Alumni of an organization.</p> */
    public static final OntProperty alumni = M_MODEL.createOntProperty( "http://schema.org/alumni" );
    
    /** <p>An organization that the person is an alumni of.</p> */
    public static final OntProperty alumniOf = M_MODEL.createOntProperty( "http://schema.org/alumniOf" );
    
    /** <p>An amenity feature (e.g. a characteristic or service) of the Accommodation. 
     *  This generic property does not make a statement about whether the feature 
     *  is included in an offer for the main accommodation or available at extra costs.</p>
     */
    public static final OntProperty amenityFeature = M_MODEL.createOntProperty( "http://schema.org/amenityFeature" );
    
    /** <p>The amount of money.</p> */
    public static final OntProperty amount = M_MODEL.createOntProperty( "http://schema.org/amount" );
    
    /** <p>The quantity of the goods included in the offer.</p> */
    public static final OntProperty amountOfThisGood = M_MODEL.createOntProperty( "http://schema.org/amountOfThisGood" );
    
    /** <p>Indicates a specific [[CivicStructure]] or [[LocalBusiness]] associated with 
     *  the SpecialAnnouncement. For example, a specific testing facility or business 
     *  with special opening hours. For a larger geographic region like a quarantine 
     *  of an entire region, use [[spatialCoverage]].</p>
     */
    public static final OntProperty announcementLocation = M_MODEL.createOntProperty( "http://schema.org/announcementLocation" );
    
    /** <p>The annual rate that is charged for borrowing (or made by investing), expressed 
     *  as a single percentage number that represents the actual yearly cost of funds 
     *  over the term of a loan. This includes any fees or additional costs associated 
     *  with the transaction.</p>
     */
    public static final OntProperty annualPercentageRate = M_MODEL.createOntProperty( "http://schema.org/annualPercentageRate" );
    
    /** <p>The number of answers this question has received.</p> */
    public static final OntProperty answerCount = M_MODEL.createOntProperty( "http://schema.org/answerCount" );
    
    /** <p>A step-by-step or full explanation about Answer. Can outline how this Answer 
     *  was achieved or contain more broad clarification or statement about it.</p>
     */
    public static final OntProperty answerExplanation = M_MODEL.createOntProperty( "http://schema.org/answerExplanation" );
    
    /** <p>The muscle whose action counteracts the specified muscle.</p> */
    public static final OntProperty antagonist = M_MODEL.createOntProperty( "http://schema.org/antagonist" );
    
    /** <p>Indicates an occurrence of a [[Claim]] in some [[CreativeWork]].</p> */
    public static final OntProperty appearance = M_MODEL.createOntProperty( "http://schema.org/appearance" );
    
    /** <p>A country where a particular merchant return policy applies to, for example 
     *  the two-letter ISO 3166-1 alpha-2 country code.</p>
     */
    public static final OntProperty applicableCountry = M_MODEL.createOntProperty( "http://schema.org/applicableCountry" );
    
    /** <p>The location in which the status applies.</p> */
    public static final OntProperty applicableLocation = M_MODEL.createOntProperty( "http://schema.org/applicableLocation" );
    
    /** <p>The location(s) applicants can apply from. This is usually used for telecommuting 
     *  jobs where the applicant does not need to be in a physical office. Note: This 
     *  should not be used for citizenship or work visa requirements.</p>
     */
    public static final OntProperty applicantLocationRequirements = M_MODEL.createOntProperty( "http://schema.org/applicantLocationRequirements" );
    
    /** <p>An application that can complete the request.</p> */
    public static final OntProperty application = M_MODEL.createOntProperty( "http://schema.org/application" );
    
    /** <p>Type of software application, e.g. 'Game, Multimedia'.</p> */
    public static final OntProperty applicationCategory = M_MODEL.createOntProperty( "http://schema.org/applicationCategory" );
    
    /** <p>Contact details for further information relevant to this job posting.</p> */
    public static final OntProperty applicationContact = M_MODEL.createOntProperty( "http://schema.org/applicationContact" );
    
    /** <p>The date on which the program stops collecting applications for the next enrollment 
     *  cycle. Flexible application deadlines (for example, a program with rolling 
     *  admissions) can be described in a textual string, rather than as a DateTime.</p>
     */
    public static final OntProperty applicationDeadline = M_MODEL.createOntProperty( "http://schema.org/applicationDeadline" );
    
    /** <p>The date at which the program begins collecting applications for the next 
     *  enrollment cycle.</p>
     */
    public static final OntProperty applicationStartDate = M_MODEL.createOntProperty( "http://schema.org/applicationStartDate" );
    
    /** <p>Subcategory of the application, e.g. 'Arcade Game'.</p> */
    public static final OntProperty applicationSubCategory = M_MODEL.createOntProperty( "http://schema.org/applicationSubCategory" );
    
    /** <p>The name of the application suite to which the application belongs (e.g. Excel 
     *  belongs to Office).</p>
     */
    public static final OntProperty applicationSuite = M_MODEL.createOntProperty( "http://schema.org/applicationSuite" );
    
    /** <p>The delivery method(s) to which the delivery charge or payment charge specification 
     *  applies.</p>
     */
    public static final OntProperty appliesToDeliveryMethod = M_MODEL.createOntProperty( "http://schema.org/appliesToDeliveryMethod" );
    
    /** <p>The payment method(s) to which the payment charge specification applies.</p> */
    public static final OntProperty appliesToPaymentMethod = M_MODEL.createOntProperty( "http://schema.org/appliesToPaymentMethod" );
    
    /** <p>Collection, [fonds](https://en.wikipedia.org/wiki/Fonds), or item held, kept 
     *  or maintained by an [[ArchiveOrganization]].</p>
     */
    public static final OntProperty archiveHeld = M_MODEL.createOntProperty( "http://schema.org/archiveHeld" );
    
    /** <p>Indicates a page or other link involved in archival of a [[CreativeWork]]. 
     *  In the case of [[MediaReview]], the items in a [[MediaReviewItem]] may often 
     *  become inaccessible, but be archived by archival, journalistic, activist, 
     *  or law enforcement organizations. In such cases, the referenced page may not 
     *  directly publish the content.</p>
     */
    public static final OntProperty archivedAt = M_MODEL.createOntProperty( "http://schema.org/archivedAt" );
    
    /** <p>The area within which users can expect to reach the broadcast service.</p> */
    public static final OntProperty area = M_MODEL.createOntProperty( "http://schema.org/area" );
    
    /** <p>The geographic area where a service or offered item is provided.</p> */
    public static final OntProperty areaServed = M_MODEL.createOntProperty( "http://schema.org/areaServed" );
    
    /** <p>The airport where the flight terminates.</p> */
    public static final OntProperty arrivalAirport = M_MODEL.createOntProperty( "http://schema.org/arrivalAirport" );
    
    /** <p>The terminal or port from which the boat arrives.</p> */
    public static final OntProperty arrivalBoatTerminal = M_MODEL.createOntProperty( "http://schema.org/arrivalBoatTerminal" );
    
    /** <p>The stop or station from which the bus arrives.</p> */
    public static final OntProperty arrivalBusStop = M_MODEL.createOntProperty( "http://schema.org/arrivalBusStop" );
    
    /** <p>Identifier of the flight's arrival gate.</p> */
    public static final OntProperty arrivalGate = M_MODEL.createOntProperty( "http://schema.org/arrivalGate" );
    
    /** <p>The platform where the train arrives.</p> */
    public static final OntProperty arrivalPlatform = M_MODEL.createOntProperty( "http://schema.org/arrivalPlatform" );
    
    /** <p>The station where the train trip ends.</p> */
    public static final OntProperty arrivalStation = M_MODEL.createOntProperty( "http://schema.org/arrivalStation" );
    
    /** <p>Identifier of the flight's arrival terminal.</p> */
    public static final OntProperty arrivalTerminal = M_MODEL.createOntProperty( "http://schema.org/arrivalTerminal" );
    
    /** <p>The expected arrival time.</p> */
    public static final OntProperty arrivalTime = M_MODEL.createOntProperty( "http://schema.org/arrivalTime" );
    
    /** <p>The number of copies when multiple copies of a piece of artwork are produced 
     *  - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total 
     *  number of copies (in this example "20").</p>
     */
    public static final OntProperty artEdition = M_MODEL.createOntProperty( "http://schema.org/artEdition" );
    
    /** <p>The material used. (E.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, 
     *  Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, 
     *  etc.)</p>
     */
    public static final OntProperty artMedium = M_MODEL.createOntProperty( "http://schema.org/artMedium" );
    
    /** <p>The branches that comprise the arterial structure.</p> */
    public static final OntProperty arterialBranch = M_MODEL.createOntProperty( "http://schema.org/arterialBranch" );
    
    /** <p>e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, 
     *  etc.</p>
     */
    public static final OntProperty artform = M_MODEL.createOntProperty( "http://schema.org/artform" );
    
    /** <p>The actual body of the article.</p> */
    public static final OntProperty articleBody = M_MODEL.createOntProperty( "http://schema.org/articleBody" );
    
    /** <p>Articles may belong to one or more 'sections' in a magazine or newspaper, 
     *  such as Sports, Lifestyle, etc.</p>
     */
    public static final OntProperty articleSection = M_MODEL.createOntProperty( "http://schema.org/articleSection" );
    
    /** <p>The primary artist for a work in a medium other than pencils or digital line 
     *  art--for example, if the primary artwork is done in watercolors or digital 
     *  paints.</p>
     */
    public static final OntProperty artist = M_MODEL.createOntProperty( "http://schema.org/artist" );
    
    /** <p>The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, 
     *  etc.</p>
     */
    public static final OntProperty artworkSurface = M_MODEL.createOntProperty( "http://schema.org/artworkSurface" );
    
    /** <p>An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric 
     *  unique identifier assigned by Amazon.com and its partners for product identification 
     *  within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s 
     *  article). Note also that this is a definition for how to include ASINs in 
     *  Schema.org data, and not a definition of ASINs in general - see documentation 
     *  from Amazon for authoritative details. ASINs are most commonly encoded as 
     *  text strings, but the [asin] property supports URL/URI as potential values 
     *  too.</p>
     */
    public static final OntProperty asin = M_MODEL.createOntProperty( "http://schema.org/asin" );
    
    /** <p>An aspect of medical practice that is considered on the page, such as 'diagnosis', 
     *  'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.</p>
     */
    public static final OntProperty aspect = M_MODEL.createOntProperty( "http://schema.org/aspect" );
    
    /** <p>Library file name, e.g., mscorlib.dll, system.web.dll.</p> */
    public static final OntProperty assembly = M_MODEL.createOntProperty( "http://schema.org/assembly" );
    
    /** <p>Associated product/technology version. E.g., .NET Framework 4.5.</p> */
    public static final OntProperty assemblyVersion = M_MODEL.createOntProperty( "http://schema.org/assemblyVersion" );
    
    /** <p>The item being described is intended to assess the competency or learning 
     *  outcome defined by the referenced term.</p>
     */
    public static final OntProperty assesses = M_MODEL.createOntProperty( "http://schema.org/assesses" );
    
    /** <p>The anatomy of the underlying organ system or structures associated with this 
     *  entity.</p>
     */
    public static final OntProperty associatedAnatomy = M_MODEL.createOntProperty( "http://schema.org/associatedAnatomy" );
    
    /** <p>A NewsArticle associated with the Media Object.</p> */
    public static final OntProperty associatedArticle = M_MODEL.createOntProperty( "http://schema.org/associatedArticle" );
    
    /** <p>An associated [[ClaimReview]], related by specific common content, topic or 
     *  claim. The expectation is that this property would be most typically used 
     *  in cases where a single activity is conducting both claim reviews and media 
     *  reviews, in which case [[relatedMediaReview]] would commonly be used on a 
     *  [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].</p>
     */
    public static final OntProperty associatedClaimReview = M_MODEL.createOntProperty( "http://schema.org/associatedClaimReview" );
    
    /** <p>Disease associated to this BioChemEntity. Such disease can be a MedicalCondition 
     *  or a URL. If you want to add an evidence supporting the association, please 
     *  use PropertyValue.</p>
     */
    public static final OntProperty associatedDisease = M_MODEL.createOntProperty( "http://schema.org/associatedDisease" );
    
    /** <p>A media object that encodes this CreativeWork. This property is a synonym 
     *  for encoding.</p>
     */
    public static final OntProperty associatedMedia = M_MODEL.createOntProperty( "http://schema.org/associatedMedia" );
    
    /** <p>An associated [[MediaReview]], related by specific common content, topic or 
     *  claim. The expectation is that this property would be most typically used 
     *  in cases where a single activity is conducting both claim reviews and media 
     *  reviews, in which case [[relatedMediaReview]] would commonly be used on a 
     *  [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].</p>
     */
    public static final OntProperty associatedMediaReview = M_MODEL.createOntProperty( "http://schema.org/associatedMediaReview" );
    
    /** <p>If applicable, a description of the pathophysiology associated with the anatomical 
     *  system, including potential abnormal changes in the mechanical, physical, 
     *  and biochemical functions of the system.</p>
     */
    public static final OntProperty associatedPathophysiology = M_MODEL.createOntProperty( "http://schema.org/associatedPathophysiology" );
    
    /** <p>An associated [[Review]].</p> */
    public static final OntProperty associatedReview = M_MODEL.createOntProperty( "http://schema.org/associatedReview" );
    
    /** <p>A person that acts as performing member of a sports team; a player as opposed 
     *  to a coach.</p>
     */
    public static final OntProperty athlete = M_MODEL.createOntProperty( "http://schema.org/athlete" );
    
    /** <p>A person or organization attending the event.</p> */
    public static final OntProperty attendee = M_MODEL.createOntProperty( "http://schema.org/attendee" );
    
    /** <p>A person attending the event.</p> */
    public static final OntProperty attendees = M_MODEL.createOntProperty( "http://schema.org/attendees" );
    
    /** <p>An intended audience, i.e. a group for whom something was created.</p> */
    public static final OntProperty audience = M_MODEL.createOntProperty( "http://schema.org/audience" );
    
    /** <p>The target group associated with a given audience (e.g. veterans, car owners, 
     *  musicians, etc.).</p>
     */
    public static final OntProperty audienceType = M_MODEL.createOntProperty( "http://schema.org/audienceType" );
    
    /** <p>An embedded audio object.</p> */
    public static final OntProperty audio = M_MODEL.createOntProperty( "http://schema.org/audio" );
    
    /** <p>Date when a certification was last audited. See also [gs1:certificationAuditDate](https://www.gs1.org/voc/certificationAuditDate).</p> */
    public static final OntProperty auditDate = M_MODEL.createOntProperty( "http://schema.org/auditDate" );
    
    /** <p>The Organization responsible for authenticating the user's subscription. For 
     *  example, many media apps require a cable/satellite provider to authenticate 
     *  your subscription before playing media.</p>
     */
    public static final OntProperty authenticator = M_MODEL.createOntProperty( "http://schema.org/authenticator" );
    
    /** <p>The author of this content or rating. Please note that author is special in 
     *  that HTML 5 provides a special mechanism for indicating authorship via the 
     *  rel tag. That is equivalent to this and may be used interchangeably.</p>
     */
    public static final OntProperty author = M_MODEL.createOntProperty( "http://schema.org/author" );
    
    /** <p>The availability of this item&amp;#x2014;for example In stock, Out of stock, 
     *  Pre-order, etc.</p>
     */
    public static final OntProperty availability = M_MODEL.createOntProperty( "http://schema.org/availability" );
    
    /** <p>The end of the availability of the product or service included in the offer.</p> */
    public static final OntProperty availabilityEnds = M_MODEL.createOntProperty( "http://schema.org/availabilityEnds" );
    
    /** <p>The beginning of the availability of the product or service included in the 
     *  offer.</p>
     */
    public static final OntProperty availabilityStarts = M_MODEL.createOntProperty( "http://schema.org/availabilityStarts" );
    
    /** <p>The place(s) from which the offer can be obtained (e.g. store locations).</p> */
    public static final OntProperty availableAtOrFrom = M_MODEL.createOntProperty( "http://schema.org/availableAtOrFrom" );
    
    /** <p>A means of accessing the service (e.g. a phone bank, a web site, a location, 
     *  etc.).</p>
     */
    public static final OntProperty availableChannel = M_MODEL.createOntProperty( "http://schema.org/availableChannel" );
    
    /** <p>The delivery method(s) available for this offer.</p> */
    public static final OntProperty availableDeliveryMethod = M_MODEL.createOntProperty( "http://schema.org/availableDeliveryMethod" );
    
    /** <p>When the item is available for pickup from the store, locker, etc.</p> */
    public static final OntProperty availableFrom = M_MODEL.createOntProperty( "http://schema.org/availableFrom" );
    
    /** <p>The location in which the strength is available.</p> */
    public static final OntProperty availableIn = M_MODEL.createOntProperty( "http://schema.org/availableIn" );
    
    /** <p>A language someone may use with or at the item, service or place. Please use 
     *  one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). 
     *  See also [[inLanguage]].</p>
     */
    public static final OntProperty availableLanguage = M_MODEL.createOntProperty( "http://schema.org/availableLanguage" );
    
    /** <p>Device required to run the application. Used in cases where a specific make/model 
     *  is required to run the application.</p>
     */
    public static final OntProperty availableOnDevice = M_MODEL.createOntProperty( "http://schema.org/availableOnDevice" );
    
    /** <p>A medical service available from this provider.</p> */
    public static final OntProperty availableService = M_MODEL.createOntProperty( "http://schema.org/availableService" );
    
    /** <p>An available dosage strength for the drug.</p> */
    public static final OntProperty availableStrength = M_MODEL.createOntProperty( "http://schema.org/availableStrength" );
    
    /** <p>A diagnostic test or procedure offered by this lab.</p> */
    public static final OntProperty availableTest = M_MODEL.createOntProperty( "http://schema.org/availableTest" );
    
    /** <p>After this date, the item will no longer be available for pickup.</p> */
    public static final OntProperty availableThrough = M_MODEL.createOntProperty( "http://schema.org/availableThrough" );
    
    /** <p>An award won by or for this item.</p> */
    public static final OntProperty award = M_MODEL.createOntProperty( "http://schema.org/award" );
    
    /** <p>Awards won by or for this item.</p> */
    public static final OntProperty awards = M_MODEL.createOntProperty( "http://schema.org/awards" );
    
    /** <p>The away team in a sports event.</p> */
    public static final OntProperty awayTeam = M_MODEL.createOntProperty( "http://schema.org/awayTeam" );
    
    /** <p>For an [[Article]], typically a [[NewsArticle]], the backstory property provides 
     *  a textual summary giving a brief explanation of why and how an article was 
     *  created. In a journalistic setting this could include information about reporting 
     *  process, methods, interviews, data sources, etc.</p>
     */
    public static final OntProperty backstory = M_MODEL.createOntProperty( "http://schema.org/backstory" );
    
    /** <p>The type of a bank account.</p> */
    public static final OntProperty bankAccountType = M_MODEL.createOntProperty( "http://schema.org/bankAccountType" );
    
    /** <p>The base salary of the job or of an employee in an EmployeeRole.</p> */
    public static final OntProperty baseSalary = M_MODEL.createOntProperty( "http://schema.org/baseSalary" );
    
    /** <p>A sub property of recipient. The recipient blind copied on a message.</p> */
    public static final OntProperty bccRecipient = M_MODEL.createOntProperty( "http://schema.org/bccRecipient" );
    
    /** <p>The type of bed or beds included in the accommodation. For the single case 
     *  of just one bed of a certain type, you use bed directly with a text. If you 
     *  want to indicate the quantity of a certain kind of bed, use an instance of 
     *  BedDetails. For more detailed information, use the amenityFeature property.</p>
     */
    public static final OntProperty bed = M_MODEL.createOntProperty( "http://schema.org/bed" );
    
    /** <p>A media object representing the circumstances before performing this direction.</p> */
    public static final OntProperty beforeMedia = M_MODEL.createOntProperty( "http://schema.org/beforeMedia" );
    
    /** <p>A bank or bank’s branch, financial institution or international financial 
     *  institution operating the beneficiary’s bank account or releasing funds for 
     *  the beneficiary.</p>
     */
    public static final OntProperty beneficiaryBank = M_MODEL.createOntProperty( "http://schema.org/beneficiaryBank" );
    
    /** <p>Description of benefits associated with the job.</p> */
    public static final OntProperty benefits = M_MODEL.createOntProperty( "http://schema.org/benefits" );
    
    /** <p>The URL that goes directly to the summary of benefits and coverage for the 
     *  specific standard plan or plan variation.</p>
     */
    public static final OntProperty benefitsSummaryUrl = M_MODEL.createOntProperty( "http://schema.org/benefitsSummaryUrl" );
    
    /** <p>The highest value allowed in this rating system.</p> */
    public static final OntProperty bestRating = M_MODEL.createOntProperty( "http://schema.org/bestRating" );
    
    /** <p>The billing address for the order.</p> */
    public static final OntProperty billingAddress = M_MODEL.createOntProperty( "http://schema.org/billingAddress" );
    
    /** <p>Specifies for how long this price (or price component) will be billed. Can 
     *  be used, for example, to model the contractual duration of a subscription 
     *  or payment plan. Type can be either a Duration or a Number (in which case 
     *  the unit of measurement, for example month, is specified by the unitCode property).</p>
     */
    public static final OntProperty billingDuration = M_MODEL.createOntProperty( "http://schema.org/billingDuration" );
    
    /** <p>This property specifies the minimal quantity and rounding increment that will 
     *  be the basis for the billing. The unit of measurement is specified by the 
     *  unitCode property.</p>
     */
    public static final OntProperty billingIncrement = M_MODEL.createOntProperty( "http://schema.org/billingIncrement" );
    
    /** <p>The time interval used to compute the invoice.</p> */
    public static final OntProperty billingPeriod = M_MODEL.createOntProperty( "http://schema.org/billingPeriod" );
    
    /** <p>Specifies after how much time this price (or price component) becomes valid 
     *  and billing starts. Can be used, for example, to model a price increase after 
     *  the first year of a subscription. The unit of measurement is specified by 
     *  the unitCode property.</p>
     */
    public static final OntProperty billingStart = M_MODEL.createOntProperty( "http://schema.org/billingStart" );
    
    /** <p>A BioChemEntity that is known to interact with this item.</p> */
    public static final OntProperty bioChemInteraction = M_MODEL.createOntProperty( "http://schema.org/bioChemInteraction" );
    
    /** <p>A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.</p> */
    public static final OntProperty bioChemSimilarity = M_MODEL.createOntProperty( "http://schema.org/bioChemSimilarity" );
    
    /** <p>A role played by the BioChemEntity within a biological context.</p> */
    public static final OntProperty biologicalRole = M_MODEL.createOntProperty( "http://schema.org/biologicalRole" );
    
    /** <p>The biomechanical properties of the bone.</p> */
    public static final OntProperty biomechnicalClass = M_MODEL.createOntProperty( "http://schema.org/biomechnicalClass" );
    
    /** <p>Date of birth.</p> */
    public static final OntProperty birthDate = M_MODEL.createOntProperty( "http://schema.org/birthDate" );
    
    /** <p>The place where the person was born.</p> */
    public static final OntProperty birthPlace = M_MODEL.createOntProperty( "http://schema.org/birthPlace" );
    
    /** <p>The bitrate of the media object.</p> */
    public static final OntProperty bitrate = M_MODEL.createOntProperty( "http://schema.org/bitrate" );
    
    /** <p>A posting that is part of this blog.</p> */
    public static final OntProperty blogPost = M_MODEL.createOntProperty( "http://schema.org/blogPost" );
    
    /** <p>Indicates a post that is part of a [[Blog]]. Note that historically, what 
     *  we term a "Blog" was once known as a "weblog", and that what we term a "BlogPosting" 
     *  is now often colloquially referred to as a "blog".</p>
     */
    public static final OntProperty blogPosts = M_MODEL.createOntProperty( "http://schema.org/blogPosts" );
    
    /** <p>The blood vessel that carries blood from the heart to the muscle.</p> */
    public static final OntProperty bloodSupply = M_MODEL.createOntProperty( "http://schema.org/bloodSupply" );
    
    /** <p>The airline-specific indicator of boarding order / preference.</p> */
    public static final OntProperty boardingGroup = M_MODEL.createOntProperty( "http://schema.org/boardingGroup" );
    
    /** <p>The type of boarding policy used by the airline (e.g. zone-based or group-based).</p> */
    public static final OntProperty boardingPolicy = M_MODEL.createOntProperty( "http://schema.org/boardingPolicy" );
    
    /** <p>Location in the body of the anatomical structure.</p> */
    public static final OntProperty bodyLocation = M_MODEL.createOntProperty( "http://schema.org/bodyLocation" );
    
    /** <p>Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, 
     *  etc.).</p>
     */
    public static final OntProperty bodyType = M_MODEL.createOntProperty( "http://schema.org/bodyType" );
    
    /** <p>The edition of the book.</p> */
    public static final OntProperty bookEdition = M_MODEL.createOntProperty( "http://schema.org/bookEdition" );
    
    /** <p>The format of the book.</p> */
    public static final OntProperty bookFormat = M_MODEL.createOntProperty( "http://schema.org/bookFormat" );
    
    /** <p>'bookingAgent' is an out-dated term indicating a 'broker' that serves as a 
     *  booking agent.</p>
     */
    public static final OntProperty bookingAgent = M_MODEL.createOntProperty( "http://schema.org/bookingAgent" );
    
    /** <p>The date and time the reservation was booked.</p> */
    public static final OntProperty bookingTime = M_MODEL.createOntProperty( "http://schema.org/bookingTime" );
    
    /** <p>A sub property of participant. The person that borrows the object being lent.</p> */
    public static final OntProperty borrower = M_MODEL.createOntProperty( "http://schema.org/borrower" );
    
    /** <p>A box is the area enclosed by the rectangle formed by two points. The first 
     *  point is the lower corner, the second point is the upper corner. A box is 
     *  expressed as two points separated by a space character.</p>
     */
    public static final OntProperty box = M_MODEL.createOntProperty( "http://schema.org/box" );
    
    /** <p>The branches that delineate from the nerve bundle. Not to be confused with 
     *  [[branchOf]].</p>
     */
    public static final OntProperty branch = M_MODEL.createOntProperty( "http://schema.org/branch" );
    
    /** <p>A short textual code (also called "store code") that uniquely identifies a 
     *  place of business. The code is typically assigned by the parentOrganization 
     *  and used in structured URLs.
     *  
     *  For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 
     *  the code "3047" is a branchCode for a particular branch.</p>
     */
    public static final OntProperty branchCode = M_MODEL.createOntProperty( "http://schema.org/branchCode" );
    
    /** <p>The larger organization that this local business is a branch of, if any. Not 
     *  to be confused with (anatomical) [[branch]].</p>
     */
    public static final OntProperty branchOf = M_MODEL.createOntProperty( "http://schema.org/branchOf" );
    
    /** <p>The brand(s) associated with a product or service, or the brand(s) maintained 
     *  by an organization or business person.</p>
     */
    public static final OntProperty brand = M_MODEL.createOntProperty( "http://schema.org/brand" );
    
    /** <p>A set of links that can help a user understand and navigate a website hierarchy.</p> */
    public static final OntProperty breadcrumb = M_MODEL.createOntProperty( "http://schema.org/breadcrumb" );
    
    /** <p>Any precaution, guidance, contraindication, etc. related to this drug's use 
     *  by breastfeeding mothers.</p>
     */
    public static final OntProperty breastfeedingWarning = M_MODEL.createOntProperty( "http://schema.org/breastfeedingWarning" );
    
    /** <p>The media network(s) whose content is broadcast on this station.</p> */
    public static final OntProperty broadcastAffiliateOf = M_MODEL.createOntProperty( "http://schema.org/broadcastAffiliateOf" );
    
    /** <p>The unique address by which the BroadcastService can be identified in a provider 
     *  lineup. In US, this is typically a number.</p>
     */
    public static final OntProperty broadcastChannelId = M_MODEL.createOntProperty( "http://schema.org/broadcastChannelId" );
    
    /** <p>The name displayed in the channel guide. For many US affiliates, it is the 
     *  network name.</p>
     */
    public static final OntProperty broadcastDisplayName = M_MODEL.createOntProperty( "http://schema.org/broadcastDisplayName" );
    
    /** <p>The frequency used for over-the-air broadcasts. Numeric values or simple ranges, 
     *  e.g. 87-99. In addition a shortcut idiom is supported for frequencies of AM 
     *  and FM radio channels, e.g. "87 FM".</p>
     */
    public static final OntProperty broadcastFrequency = M_MODEL.createOntProperty( "http://schema.org/broadcastFrequency" );
    
    /** <p>The frequency in MHz for a particular broadcast.</p> */
    public static final OntProperty broadcastFrequencyValue = M_MODEL.createOntProperty( "http://schema.org/broadcastFrequencyValue" );
    
    /** <p>The event being broadcast such as a sporting event or awards ceremony.</p> */
    public static final OntProperty broadcastOfEvent = M_MODEL.createOntProperty( "http://schema.org/broadcastOfEvent" );
    
    /** <p>The type of service required to have access to the channel (e.g. Standard 
     *  or Premium).</p>
     */
    public static final OntProperty broadcastServiceTier = M_MODEL.createOntProperty( "http://schema.org/broadcastServiceTier" );
    
    /** <p>The modulation (e.g. FM, AM, etc) used by a particular broadcast service.</p> */
    public static final OntProperty broadcastSignalModulation = M_MODEL.createOntProperty( "http://schema.org/broadcastSignalModulation" );
    
    /** <p>The subchannel used for the broadcast.</p> */
    public static final OntProperty broadcastSubChannel = M_MODEL.createOntProperty( "http://schema.org/broadcastSubChannel" );
    
    /** <p>The timezone in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601) for 
     *  which the service bases its broadcasts.</p>
     */
    public static final OntProperty broadcastTimezone = M_MODEL.createOntProperty( "http://schema.org/broadcastTimezone" );
    
    /** <p>The organization owning or operating the broadcast service.</p> */
    public static final OntProperty broadcaster = M_MODEL.createOntProperty( "http://schema.org/broadcaster" );
    
    /** <p>An entity that arranges for an exchange between a buyer and a seller. In most 
     *  cases a broker never acquires or releases ownership of a product or service 
     *  involved in an exchange. If it is not clear whether an entity is a broker, 
     *  seller, or buyer, the latter two terms are preferred.</p>
     */
    public static final OntProperty broker = M_MODEL.createOntProperty( "http://schema.org/broker" );
    
    /** <p>Specifies browser requirements in human-readable text. For example, 'requires 
     *  HTML5 support'.</p>
     */
    public static final OntProperty browserRequirements = M_MODEL.createOntProperty( "http://schema.org/browserRequirements" );
    
    /** <p>The name of the bus (e.g. Bolt Express).</p> */
    public static final OntProperty busName = M_MODEL.createOntProperty( "http://schema.org/busName" );
    
    /** <p>The unique identifier for the bus.</p> */
    public static final OntProperty busNumber = M_MODEL.createOntProperty( "http://schema.org/busNumber" );
    
    /** <p>Days of the week when the merchant typically operates, indicated via opening 
     *  hours markup.</p>
     */
    public static final OntProperty businessDays = M_MODEL.createOntProperty( "http://schema.org/businessDays" );
    
    /** <p>The business function (e.g. sell, lease, repair, dispose) of the offer or 
     *  component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.</p>
     */
    public static final OntProperty businessFunction = M_MODEL.createOntProperty( "http://schema.org/businessFunction" );
    
    /** <p>A sub property of participant. The participant/person/organization that bought 
     *  the object.</p>
     */
    public static final OntProperty buyer = M_MODEL.createOntProperty( "http://schema.org/buyer" );
    
    /** <p>The artist that performed this album or recording.</p> */
    public static final OntProperty byArtist = M_MODEL.createOntProperty( "http://schema.org/byArtist" );
    
    /** <p>Defines the day(s) of the week on which a recurring [[Event]] takes place. 
     *  May be specified using either [[DayOfWeek]], or alternatively [[Text]] conforming 
     *  to iCal's syntax for byDay recurrence rules.</p>
     */
    public static final OntProperty byDay = M_MODEL.createOntProperty( "http://schema.org/byDay" );
    
    /** <p>Defines the month(s) of the year on which a recurring [[Event]] takes place. 
     *  Specified as an [[Integer]] between 1-12. January is 1.</p>
     */
    public static final OntProperty byMonth = M_MODEL.createOntProperty( "http://schema.org/byMonth" );
    
    /** <p>Defines the day(s) of the month on which a recurring [[Event]] takes place. 
     *  Specified as an [[Integer]] between 1-31.</p>
     */
    public static final OntProperty byMonthDay = M_MODEL.createOntProperty( "http://schema.org/byMonthDay" );
    
    /** <p>Defines the week(s) of the month on which a recurring Event takes place. Specified 
     *  as an Integer between 1-5. For clarity, byMonthWeek is best used in conjunction 
     *  with byDay to indicate concepts like the first and third Mondays of a month.</p>
     */
    public static final OntProperty byMonthWeek = M_MODEL.createOntProperty( "http://schema.org/byMonthWeek" );
    
    /** <p>A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting 
     *  and radio communications to identify people, radio and TV stations, or vehicles.</p>
     */
    public static final OntProperty callSign = M_MODEL.createOntProperty( "http://schema.org/callSign" );
    
    /** <p>The number of calories.</p> */
    public static final OntProperty calories = M_MODEL.createOntProperty( "http://schema.org/calories" );
    
    /** <p>A sub property of object. The candidate subject of this action.</p> */
    public static final OntProperty candidate = M_MODEL.createOntProperty( "http://schema.org/candidate" );
    
    /** <p>The caption for this object. For downloadable machine formats (closed caption, 
     *  subtitles etc.) use MediaObject and indicate the [[encodingFormat]].</p>
     */
    public static final OntProperty caption = M_MODEL.createOntProperty( "http://schema.org/caption" );
    
    /** <p>The number of grams of carbohydrates.</p> */
    public static final OntProperty carbohydrateContent = M_MODEL.createOntProperty( "http://schema.org/carbohydrateContent" );
    
    /** <p>The available volume for cargo or luggage. For automobiles, this is usually 
     *  the trunk volume.
     *  
     *  Typical unit code(s): LTR for liters, FTQ for cubic foot/feet
     *  
     *  Note: You can use [[minValue]] and [[maxValue]] to indicate ranges.</p>
     */
    public static final OntProperty cargoVolume = M_MODEL.createOntProperty( "http://schema.org/cargoVolume" );
    
    /** <p>'carrier' is an out-dated term indicating the 'provider' for parcel delivery 
     *  and flights.</p>
     */
    public static final OntProperty carrier = M_MODEL.createOntProperty( "http://schema.org/carrier" );
    
    /** <p>Specifies specific carrier(s) requirements for the application (e.g. an application 
     *  may only work on a specific carrier network).</p>
     */
    public static final OntProperty carrierRequirements = M_MODEL.createOntProperty( "http://schema.org/carrierRequirements" );
    
    /** <p>A cardholder benefit that pays the cardholder a small percentage of their 
     *  net expenditures.</p>
     */
    public static final OntProperty cashBack = M_MODEL.createOntProperty( "http://schema.org/cashBack" );
    
    /** <p>A data catalog which contains this dataset.</p> */
    public static final OntProperty catalog = M_MODEL.createOntProperty( "http://schema.org/catalog" );
    
    /** <p>The catalog number for the release.</p> */
    public static final OntProperty catalogNumber = M_MODEL.createOntProperty( "http://schema.org/catalogNumber" );
    
    /** <p>A category for the item. Greater signs or slashes can be used to informally 
     *  indicate a category hierarchy.</p>
     */
    public static final OntProperty category = M_MODEL.createOntProperty( "http://schema.org/category" );
    
    /** <p>The condition, complication, symptom, sign, etc. caused.</p> */
    public static final OntProperty causeOf = M_MODEL.createOntProperty( "http://schema.org/causeOf" );
    
    /** <p>A sub property of recipient. The recipient copied on a message.</p> */
    public static final OntProperty ccRecipient = M_MODEL.createOntProperty( "http://schema.org/ccRecipient" );
    
    /** <p>Identifier of a certification instance (as registered with an independent 
     *  certification body). Typically this identifier can be used to consult and 
     *  verify the certification instance. See also [gs1:certificationIdentification](https://www.gs1.org/voc/certificationIdentification).</p>
     */
    public static final OntProperty certificationIdentification = M_MODEL.createOntProperty( "http://schema.org/certificationIdentification" );
    
    /** <p>Rating of a certification instance (as defined by an independent certification 
     *  body). Typically this rating can be used to rate the level to which the requirements 
     *  of the certification instance are fulfilled. See also [gs1:certificationValue](https://www.gs1.org/voc/certificationValue).</p>
     */
    public static final OntProperty certificationRating = M_MODEL.createOntProperty( "http://schema.org/certificationRating" );
    
    /** <p>Indicates the current status of a certification: active or inactive. See also 
     *  [gs1:certificationStatus](https://www.gs1.org/voc/certificationStatus).</p>
     */
    public static final OntProperty certificationStatus = M_MODEL.createOntProperty( "http://schema.org/certificationStatus" );
    
    /** <p>Fictional person connected with a creative work.</p> */
    public static final OntProperty character = M_MODEL.createOntProperty( "http://schema.org/character" );
    
    /** <p>A piece of data that represents a particular aspect of a fictional character 
     *  (skill, power, character points, advantage, disadvantage).</p>
     */
    public static final OntProperty characterAttribute = M_MODEL.createOntProperty( "http://schema.org/characterAttribute" );
    
    /** <p>The name of a character played in some acting or performing role, i.e. in 
     *  a PerformanceRole.</p>
     */
    public static final OntProperty characterName = M_MODEL.createOntProperty( "http://schema.org/characterName" );
    
    /** <p>Cheat codes to the game.</p> */
    public static final OntProperty cheatCode = M_MODEL.createOntProperty( "http://schema.org/cheatCode" );
    
    /** <p>The earliest someone may check into a lodging establishment.</p> */
    public static final OntProperty checkinTime = M_MODEL.createOntProperty( "http://schema.org/checkinTime" );
    
    /** <p>A URL template (RFC 6570) for a checkout page for an offer. This approach 
     *  allows merchants to specify a URL for online checkout of the offered product, 
     *  by interpolating parameters such as the logged in user ID, product ID, quantity, 
     *  discount code etc. Parameter naming and standardization are not specified 
     *  here.</p>
     */
    public static final OntProperty checkoutPageURLTemplate = M_MODEL.createOntProperty( "http://schema.org/checkoutPageURLTemplate" );
    
    /** <p>The latest someone may check out of a lodging establishment.</p> */
    public static final OntProperty checkoutTime = M_MODEL.createOntProperty( "http://schema.org/checkoutTime" );
    
    /** <p>The chemical composition describes the identity and relative ratio of the 
     *  chemical elements that make up the substance.</p>
     */
    public static final OntProperty chemicalComposition = M_MODEL.createOntProperty( "http://schema.org/chemicalComposition" );
    
    /** <p>A role played by the BioChemEntity within a chemical context.</p> */
    public static final OntProperty chemicalRole = M_MODEL.createOntProperty( "http://schema.org/chemicalRole" );
    
    /** <p>Maximal age of the child.</p> */
    public static final OntProperty childMaxAge = M_MODEL.createOntProperty( "http://schema.org/childMaxAge" );
    
    /** <p>Minimal age of the child.</p> */
    public static final OntProperty childMinAge = M_MODEL.createOntProperty( "http://schema.org/childMinAge" );
    
    /** <p>Closest child taxa of the taxon in question.</p> */
    public static final OntProperty childTaxon = M_MODEL.createOntProperty( "http://schema.org/childTaxon" );
    
    /** <p>A child of the person.</p> */
    public static final OntProperty children = M_MODEL.createOntProperty( "http://schema.org/children" );
    
    /** <p>The number of milligrams of cholesterol.</p> */
    public static final OntProperty cholesterolContent = M_MODEL.createOntProperty( "http://schema.org/cholesterolContent" );
    
    /** <p>A circle is the circular region of a specified radius centered at a specified 
     *  latitude and longitude. A circle is expressed as a pair followed by a radius 
     *  in meters.</p>
     */
    public static final OntProperty circle = M_MODEL.createOntProperty( "http://schema.org/circle" );
    
    /** <p>A citation or reference to another creative work, such as another publication, 
     *  web page, scholarly article, etc.</p>
     */
    public static final OntProperty citation = M_MODEL.createOntProperty( "http://schema.org/citation" );
    
    /** <p>For a [[Claim]] interpreted from [[MediaObject]] content, the [[interpretedAsClaim]] 
     *  property can be used to indicate a claim contained, implied or refined from 
     *  the content of a [[MediaObject]].</p>
     */
    public static final OntProperty claimInterpreter = M_MODEL.createOntProperty( "http://schema.org/claimInterpreter" );
    
    /** <p>A short summary of the specific claims reviewed in a ClaimReview.</p> */
    public static final OntProperty claimReviewed = M_MODEL.createOntProperty( "http://schema.org/claimReviewed" );
    
    /** <p>Description of the absorption and elimination of drugs, including their concentration 
     *  (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).</p>
     */
    public static final OntProperty clincalPharmacology = M_MODEL.createOntProperty( "http://schema.org/clincalPharmacology" );
    
    /** <p>Description of the absorption and elimination of drugs, including their concentration 
     *  (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).</p>
     */
    public static final OntProperty clinicalPharmacology = M_MODEL.createOntProperty( "http://schema.org/clinicalPharmacology" );
    
    /** <p>Position of the clip within an ordered group of clips.</p> */
    public static final OntProperty clipNumber = M_MODEL.createOntProperty( "http://schema.org/clipNumber" );
    
    /** <p>The closing hour of the place or service on the given day(s) of the week.</p> */
    public static final OntProperty closes = M_MODEL.createOntProperty( "http://schema.org/closes" );
    
    /** <p>A person that acts in a coaching role for a sports team.</p> */
    public static final OntProperty coach = M_MODEL.createOntProperty( "http://schema.org/coach" );
    
    /** <p>A medical code for the entity, taken from a controlled vocabulary or ontology 
     *  such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.</p>
     */
    public static final OntProperty code = M_MODEL.createOntProperty( "http://schema.org/code" );
    
    /** <p>Link to the repository where the un-compiled, human readable code and related 
     *  code is located (SVN, GitHub, CodePlex).</p>
     */
    public static final OntProperty codeRepository = M_MODEL.createOntProperty( "http://schema.org/codeRepository" );
    
    /** <p>What type of code sample: full (compile ready) solution, code snippet, inline 
     *  code, scripts, template.</p>
     */
    public static final OntProperty codeSampleType = M_MODEL.createOntProperty( "http://schema.org/codeSampleType" );
    
    /** <p>A short textual code that uniquely identifies the value.</p> */
    public static final OntProperty codeValue = M_MODEL.createOntProperty( "http://schema.org/codeValue" );
    
    /** <p>The coding system, e.g. 'ICD-10'.</p> */
    public static final OntProperty codingSystem = M_MODEL.createOntProperty( "http://schema.org/codingSystem" );
    
    /** <p>A colleague of the person.</p> */
    public static final OntProperty colleague = M_MODEL.createOntProperty( "http://schema.org/colleague" );
    
    /** <p>A colleague of the person.</p> */
    public static final OntProperty colleagues = M_MODEL.createOntProperty( "http://schema.org/colleagues" );
    
    /** <p>A sub property of object. The collection target of the action.</p> */
    public static final OntProperty collection = M_MODEL.createOntProperty( "http://schema.org/collection" );
    
    /** <p>The number of items in the [[Collection]].</p> */
    public static final OntProperty collectionSize = M_MODEL.createOntProperty( "http://schema.org/collectionSize" );
    
    /** <p>The color of the product.</p> */
    public static final OntProperty color = M_MODEL.createOntProperty( "http://schema.org/color" );
    
    /** <p>A color swatch image, visualizing the color of a [[Product]]. Should match 
     *  the textual description specified in the [[color]] property. This can be a 
     *  URL or a fully described ImageObject.</p>
     */
    public static final OntProperty colorSwatch = M_MODEL.createOntProperty( "http://schema.org/colorSwatch" );
    
    /** <p>The individual who adds color to inked drawings.</p> */
    public static final OntProperty colorist = M_MODEL.createOntProperty( "http://schema.org/colorist" );
    
    /** <p>Comments, typically from users.</p> */
    public static final OntProperty comment = M_MODEL.createOntProperty( "http://schema.org/comment" );
    
    /** <p>The number of comments this CreativeWork (e.g. Article, Question or Answer) 
     *  has received. This is most applicable to works published in Web sites with 
     *  commenting system; additional comments may exist elsewhere.</p>
     */
    public static final OntProperty commentCount = M_MODEL.createOntProperty( "http://schema.org/commentCount" );
    
    /** <p>The text of the UserComment.</p> */
    public static final OntProperty commentText = M_MODEL.createOntProperty( "http://schema.org/commentText" );
    
    /** <p>The time at which the UserComment was made.</p> */
    public static final OntProperty commentTime = M_MODEL.createOntProperty( "http://schema.org/commentTime" );
    
    /** <p>Knowledge, skill, ability or personal attribute that must be demonstrated 
     *  by a person or other entity in order to do something such as earn an Educational 
     *  Occupational Credential or understand a LearningResource.</p>
     */
    public static final OntProperty competencyRequired = M_MODEL.createOntProperty( "http://schema.org/competencyRequired" );
    
    /** <p>A competitor in a sports event.</p> */
    public static final OntProperty competitor = M_MODEL.createOntProperty( "http://schema.org/competitor" );
    
    /** <p>The person or organization who wrote a composition, or who is the composer 
     *  of a work performed at some event.</p>
     */
    public static final OntProperty composer = M_MODEL.createOntProperty( "http://schema.org/composer" );
    
    /** <p>Specifying something physically contained by something else. Typically used 
     *  here for the underlying anatomical structures, such as organs, that comprise 
     *  the anatomical system.</p>
     */
    public static final OntProperty comprisedOf = M_MODEL.createOntProperty( "http://schema.org/comprisedOf" );
    
    /** <p>Conditions that affect the availability of, or method(s) of access to, an 
     *  item. Typically used for real world items such as an [[ArchiveComponent]] 
     *  held by an [[ArchiveOrganization]]. This property is not suitable for use 
     *  as a general Web access control mechanism. It is expressed only in natural 
     *  language.
     *  
     *  For example "Available by appointment from the Reading Room" or "Accessible 
     *  only from logged-in accounts ".</p>
     */
    public static final OntProperty conditionsOfAccess = M_MODEL.createOntProperty( "http://schema.org/conditionsOfAccess" );
    
    /** <p>A number that confirms the given order or payment has been received.</p> */
    public static final OntProperty confirmationNumber = M_MODEL.createOntProperty( "http://schema.org/confirmationNumber" );
    
    /** <p>Other anatomical structures to which this structure is connected.</p> */
    public static final OntProperty connectedTo = M_MODEL.createOntProperty( "http://schema.org/connectedTo" );
    
    /** <p>Indicates a property used as a constraint. For example, in the definition 
     *  of a [[StatisticalVariable]]. The value is a property, either from within 
     *  Schema.org or from other compatible (e.g. RDF) systems such as DataCommons.org 
     *  or Wikidata.org.</p>
     */
    public static final OntProperty constraintProperty = M_MODEL.createOntProperty( "http://schema.org/constraintProperty" );
    
    /** <p>An option available on this contact point (e.g. a toll-free number or support 
     *  for hearing-impaired callers).</p>
     */
    public static final OntProperty contactOption = M_MODEL.createOntProperty( "http://schema.org/contactOption" );
    
    /** <p>A contact point for a person or organization.</p> */
    public static final OntProperty contactPoint = M_MODEL.createOntProperty( "http://schema.org/contactPoint" );
    
    /** <p>A contact point for a person or organization.</p> */
    public static final OntProperty contactPoints = M_MODEL.createOntProperty( "http://schema.org/contactPoints" );
    
    /** <p>A person or organization can have different contact points, for different 
     *  purposes. For example, a sales contact point, a PR contact point and so on. 
     *  This property is used to specify the kind of contact point.</p>
     */
    public static final OntProperty contactType = M_MODEL.createOntProperty( "http://schema.org/contactType" );
    
    /** <p>A secure method for consumers to purchase products or services via debit, 
     *  credit or smartcards by using RFID or NFC technology.</p>
     */
    public static final OntProperty contactlessPayment = M_MODEL.createOntProperty( "http://schema.org/contactlessPayment" );
    
    /** <p>The basic containment relation between a place and one that contains it.</p> */
    public static final OntProperty containedIn = M_MODEL.createOntProperty( "http://schema.org/containedIn" );
    
    /** <p>The basic containment relation between a place and one that contains it.</p> */
    public static final OntProperty containedInPlace = M_MODEL.createOntProperty( "http://schema.org/containedInPlace" );
    
    /** <p>The basic containment relation between a place and another that it contains.</p> */
    public static final OntProperty containsPlace = M_MODEL.createOntProperty( "http://schema.org/containsPlace" );
    
    /** <p>A season that is part of the media series.</p> */
    public static final OntProperty containsSeason = M_MODEL.createOntProperty( "http://schema.org/containsSeason" );
    
    /** <p>The location depicted or described in the content. For example, the location 
     *  in a photograph or painting.</p>
     */
    public static final OntProperty contentLocation = M_MODEL.createOntProperty( "http://schema.org/contentLocation" );
    
    /** <p>Official rating of a piece of content&amp;#x2014;for example, 'MPAA PG-13'.</p> */
    public static final OntProperty contentRating = M_MODEL.createOntProperty( "http://schema.org/contentRating" );
    
    /** <p>The specific time described by a creative work, for works (e.g. articles, 
     *  video objects etc.) that emphasise a particular moment within an Event.</p>
     */
    public static final OntProperty contentReferenceTime = M_MODEL.createOntProperty( "http://schema.org/contentReferenceTime" );
    
    /** <p>File size in (mega/kilo)bytes.</p> */
    public static final OntProperty contentSize = M_MODEL.createOntProperty( "http://schema.org/contentSize" );
    
    /** <p>The supported content type(s) for an EntryPoint response.</p> */
    public static final OntProperty contentType = M_MODEL.createOntProperty( "http://schema.org/contentType" );
    
    /** <p>Actual bytes of the media object, for example the image file or video file.</p> */
    public static final OntProperty contentUrl = M_MODEL.createOntProperty( "http://schema.org/contentUrl" );
    
    /** <p>A contraindication for this therapy.</p> */
    public static final OntProperty contraindication = M_MODEL.createOntProperty( "http://schema.org/contraindication" );
    
    /** <p>A secondary contributor to the CreativeWork or Event.</p> */
    public static final OntProperty contributor = M_MODEL.createOntProperty( "http://schema.org/contributor" );
    
    /** <p>The time it takes to actually cook the dish, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).</p> */
    public static final OntProperty cookTime = M_MODEL.createOntProperty( "http://schema.org/cookTime" );
    
    /** <p>The method of cooking, such as Frying, Steaming, ...</p> */
    public static final OntProperty cookingMethod = M_MODEL.createOntProperty( "http://schema.org/cookingMethod" );
    
    /** <p>The party holding the legal copyright to the CreativeWork.</p> */
    public static final OntProperty copyrightHolder = M_MODEL.createOntProperty( "http://schema.org/copyrightHolder" );
    
    /** <p>Text of a notice appropriate for describing the copyright aspects of this 
     *  Creative Work, ideally indicating the owner of the copyright for the Work.</p>
     */
    public static final OntProperty copyrightNotice = M_MODEL.createOntProperty( "http://schema.org/copyrightNotice" );
    
    /** <p>The year during which the claimed copyright for the CreativeWork was first 
     *  asserted.</p>
     */
    public static final OntProperty copyrightYear = M_MODEL.createOntProperty( "http://schema.org/copyrightYear" );
    
    /** <p>Indicates a correction to a [[CreativeWork]], either via a [[CorrectionComment]], 
     *  textually or in another document.</p>
     */
    public static final OntProperty correction = M_MODEL.createOntProperty( "http://schema.org/correction" );
    
    /** <p>For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing 
     *  (in news media, the newsroom’s) disclosure and correction policy for errors.</p>
     */
    public static final OntProperty correctionsPolicy = M_MODEL.createOntProperty( "http://schema.org/correctionsPolicy" );
    
    /** <p>The category of cost, such as wholesale, retail, reimbursement cap, etc.</p> */
    public static final OntProperty costCategory = M_MODEL.createOntProperty( "http://schema.org/costCategory" );
    
    /** <p>The currency (in 3-letter) of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217.</p> */
    public static final OntProperty costCurrency = M_MODEL.createOntProperty( "http://schema.org/costCurrency" );
    
    /** <p>Additional details to capture the origin of the cost data. For example, 'Medicare 
     *  Part B'.</p>
     */
    public static final OntProperty costOrigin = M_MODEL.createOntProperty( "http://schema.org/costOrigin" );
    
    /** <p>The cost per unit of the drug.</p> */
    public static final OntProperty costPerUnit = M_MODEL.createOntProperty( "http://schema.org/costPerUnit" );
    
    /** <p>Countries for which the application is not supported. You can also provide 
     *  the two-letter ISO 3166-1 alpha-2 country code.</p>
     */
    public static final OntProperty countriesNotSupported = M_MODEL.createOntProperty( "http://schema.org/countriesNotSupported" );
    
    /** <p>Countries for which the application is supported. You can also provide the 
     *  two-letter ISO 3166-1 alpha-2 country code.</p>
     */
    public static final OntProperty countriesSupported = M_MODEL.createOntProperty( "http://schema.org/countriesSupported" );
    
    /** <p>The place where the product was assembled.</p> */
    public static final OntProperty countryOfAssembly = M_MODEL.createOntProperty( "http://schema.org/countryOfAssembly" );
    
    /** <p>The place where the item (typically [[Product]]) was last processed and tested 
     *  before importation.</p>
     */
    public static final OntProperty countryOfLastProcessing = M_MODEL.createOntProperty( "http://schema.org/countryOfLastProcessing" );
    
    /** <p>The country of origin of something, including products as well as creative 
     *  works such as movie and TV content. In the case of TV and movie, this would 
     *  be the country of the principle offices of the production company or individual 
     *  responsible for the movie. For other kinds of [[CreativeWork]] it is difficult 
     *  to provide fully general guidance, and properties such as [[contentLocation]] 
     *  and [[locationCreated]] may be more applicable. In the case of products, the 
     *  country of origin of the product. The exact interpretation of this may vary 
     *  by context and product type, and cannot be fully enumerated here.</p>
     */
    public static final OntProperty countryOfOrigin = M_MODEL.createOntProperty( "http://schema.org/countryOfOrigin" );
    
    /** <p>A sub property of location. The course where this action was taken.</p> */
    public static final OntProperty course = M_MODEL.createOntProperty( "http://schema.org/course" );
    
    /** <p>The identifier for the [[Course]] used by the course [[provider]] (e.g. CS101 
     *  or 6.001).</p>
     */
    public static final OntProperty courseCode = M_MODEL.createOntProperty( "http://schema.org/courseCode" );
    
    /** <p>The medium or means of delivery of the course instance or the mode of study, 
     *  either as a text label (e.g. "online", "onsite" or "blended"; "synchronous" 
     *  or "asynchronous"; "full-time" or "part-time") or as a URL reference to a 
     *  term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous).</p>
     */
    public static final OntProperty courseMode = M_MODEL.createOntProperty( "http://schema.org/courseMode" );
    
    /** <p>Requirements for taking the Course. May be completion of another [[Course]] 
     *  or a textual description like "permission of instructor". Requirements may 
     *  be a pre-requisite competency, referenced using [[AlignmentObject]].</p>
     */
    public static final OntProperty coursePrerequisites = M_MODEL.createOntProperty( "http://schema.org/coursePrerequisites" );
    
    /** <p>Represents the length and pace of a course, expressed as a [[Schedule]].</p> */
    public static final OntProperty courseSchedule = M_MODEL.createOntProperty( "http://schema.org/courseSchedule" );
    
    /** <p>The amount of work expected of students taking the course, often provided 
     *  as a figure per week or per month, and may be broken down by type. For example, 
     *  "2 hours of lectures, 1 hour of lab work and 3 hours of independent study 
     *  per week".</p>
     */
    public static final OntProperty courseWorkload = M_MODEL.createOntProperty( "http://schema.org/courseWorkload" );
    
    /** <p>The time when the live blog will stop covering the Event. Note that coverage 
     *  may continue after the Event concludes.</p>
     */
    public static final OntProperty coverageEndTime = M_MODEL.createOntProperty( "http://schema.org/coverageEndTime" );
    
    /** <p>The time when the live blog will begin covering the Event. Note that coverage 
     *  may begin before the Event's start time. The LiveBlogPosting may also be created 
     *  before coverage begins.</p>
     */
    public static final OntProperty coverageStartTime = M_MODEL.createOntProperty( "http://schema.org/coverageStartTime" );
    
    /** <p>The status of a creative work in terms of its stage in a lifecycle. Example 
     *  terms include Incomplete, Draft, Published, Obsolete. Some organizations define 
     *  a set of terms for the stages of their publication lifecycle.</p>
     */
    public static final OntProperty creativeWorkStatus = M_MODEL.createOntProperty( "http://schema.org/creativeWorkStatus" );
    
    /** <p>The creator/author of this CreativeWork. This is the same as the Author property 
     *  for CreativeWork.</p>
     */
    public static final OntProperty creator = M_MODEL.createOntProperty( "http://schema.org/creator" );
    
    /** <p>The category or type of credential being described, for example "degree”, 
     *  “certificate”, “badge”, or more specific term.</p>
     */
    public static final OntProperty credentialCategory = M_MODEL.createOntProperty( "http://schema.org/credentialCategory" );
    
    /** <p>Text that can be used to credit person(s) and/or organization(s) associated 
     *  with a published Creative Work.</p>
     */
    public static final OntProperty creditText = M_MODEL.createOntProperty( "http://schema.org/creditText" );
    
    /** <p>The group the release is credited to if different than the byArtist. For example, 
     *  Red and Blue is credited to "Stefani Germanotta Band", but by Lady Gaga.</p>
     */
    public static final OntProperty creditedTo = M_MODEL.createOntProperty( "http://schema.org/creditedTo" );
    
    /** <p>A CSS selector, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. 
     *  In the latter case, multiple matches within a page can constitute a single 
     *  conceptual "Web page element".</p>
     */
    public static final OntProperty cssSelector = M_MODEL.createOntProperty( "http://schema.org/cssSelector" );
    
    /** <p>The currency accepted.
     *  
     *  Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), 
     *  e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) 
     *  for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading 
     *  Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) 
     *  and other currency types, e.g. "Ithaca HOUR".</p>
     */
    public static final OntProperty currenciesAccepted = M_MODEL.createOntProperty( "http://schema.org/currenciesAccepted" );
    
    /** <p>The currency in which the monetary amount is expressed.
     *  
     *  Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), 
     *  e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) 
     *  for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading 
     *  Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) 
     *  and other currency types, e.g. "Ithaca HOUR".</p>
     */
    public static final OntProperty currency = M_MODEL.createOntProperty( "http://schema.org/currency" );
    
    /** <p>The current price of a currency.</p> */
    public static final OntProperty currentExchangeRate = M_MODEL.createOntProperty( "http://schema.org/currentExchangeRate" );
    
    /** <p>Party placing the order or paying the invoice.</p> */
    public static final OntProperty customer = M_MODEL.createOntProperty( "http://schema.org/customer" );
    
    /** <p>The type of return fees if the product is returned due to customer remorse.</p> */
    public static final OntProperty customerRemorseReturnFees = M_MODEL.createOntProperty( "http://schema.org/customerRemorseReturnFees" );
    
    /** <p>The method (from an enumeration) by which the customer obtains a return shipping 
     *  label for a product returned due to customer remorse.</p>
     */
    public static final OntProperty customerRemorseReturnLabelSource = M_MODEL.createOntProperty( "http://schema.org/customerRemorseReturnLabelSource" );
    
    /** <p>The amount of shipping costs if a product is returned due to customer remorse. 
     *  Applicable when property [[customerRemorseReturnFees]] equals [[ReturnShippingFees]].</p>
     */
    public static final OntProperty customerRemorseReturnShippingFeesAmount = M_MODEL.createOntProperty( "http://schema.org/customerRemorseReturnShippingFeesAmount" );
    
    /** <p>Order cutoff time allows merchants to describe the time after which they will 
     *  no longer process orders received on that day. For orders processed after 
     *  cutoff time, one day gets added to the delivery time estimate. This property 
     *  is expected to be most typically used via the [[ShippingRateSettings]] publication 
     *  pattern. The time is indicated using the ISO-8601 Time format, e.g. "23:30:00-05:00" 
     *  would represent 6:30 pm Eastern Standard Time (EST) which is 5 hours behind 
     *  Coordinated Universal Time (UTC).</p>
     */
    public static final OntProperty cutoffTime = M_MODEL.createOntProperty( "http://schema.org/cutoffTime" );
    
    /** <p>collectiondate - Date for which patient counts are reported.</p> */
    public static final OntProperty cvdCollectionDate = M_MODEL.createOntProperty( "http://schema.org/cvdCollectionDate" );
    
    /** <p>Name of the County of the NHSN facility that this data record applies to. 
     *  Use [[cvdFacilityId]] to identify the facility. To provide other details, 
     *  [[healthcareReportingData]] can be used on a [[Hospital]] entry.</p>
     */
    public static final OntProperty cvdFacilityCounty = M_MODEL.createOntProperty( "http://schema.org/cvdFacilityCounty" );
    
    /** <p>Identifier of the NHSN facility that this data record applies to. Use [[cvdFacilityCounty]] 
     *  to indicate the county. To provide other details, [[healthcareReportingData]] 
     *  can be used on a [[Hospital]] entry.</p>
     */
    public static final OntProperty cvdFacilityId = M_MODEL.createOntProperty( "http://schema.org/cvdFacilityId" );
    
    /** <p>numbeds - HOSPITAL INPATIENT BEDS: Inpatient beds, including all staffed, 
     *  licensed, and overflow (surge) beds used for inpatients.</p>
     */
    public static final OntProperty cvdNumBeds = M_MODEL.createOntProperty( "http://schema.org/cvdNumBeds" );
    
    /** <p>numbedsocc - HOSPITAL INPATIENT BED OCCUPANCY: Total number of staffed inpatient 
     *  beds that are occupied.</p>
     */
    public static final OntProperty cvdNumBedsOcc = M_MODEL.createOntProperty( "http://schema.org/cvdNumBedsOcc" );
    
    /** <p>numc19died - DEATHS: Patients with suspected or confirmed COVID-19 who died 
     *  in the hospital, ED, or any overflow location.</p>
     */
    public static final OntProperty cvdNumC19Died = M_MODEL.createOntProperty( "http://schema.org/cvdNumC19Died" );
    
    /** <p>numc19hopats - HOSPITAL ONSET: Patients hospitalized in an NHSN inpatient 
     *  care location with onset of suspected or confirmed COVID-19 14 or more days 
     *  after hospitalization.</p>
     */
    public static final OntProperty cvdNumC19HOPats = M_MODEL.createOntProperty( "http://schema.org/cvdNumC19HOPats" );
    
    /** <p>numc19hosppats - HOSPITALIZED: Patients currently hospitalized in an inpatient 
     *  care location who have suspected or confirmed COVID-19.</p>
     */
    public static final OntProperty cvdNumC19HospPats = M_MODEL.createOntProperty( "http://schema.org/cvdNumC19HospPats" );
    
    /** <p>numc19mechventpats - HOSPITALIZED and VENTILATED: Patients hospitalized in 
     *  an NHSN inpatient care location who have suspected or confirmed COVID-19 and 
     *  are on a mechanical ventilator.</p>
     */
    public static final OntProperty cvdNumC19MechVentPats = M_MODEL.createOntProperty( "http://schema.org/cvdNumC19MechVentPats" );
    
    /** <p>numc19ofmechventpats - ED/OVERFLOW and VENTILATED: Patients with suspected 
     *  or confirmed COVID-19 who are in the ED or any overflow location awaiting 
     *  an inpatient bed and on a mechanical ventilator.</p>
     */
    public static final OntProperty cvdNumC19OFMechVentPats = M_MODEL.createOntProperty( "http://schema.org/cvdNumC19OFMechVentPats" );
    
    /** <p>numc19overflowpats - ED/OVERFLOW: Patients with suspected or confirmed COVID-19 
     *  who are in the ED or any overflow location awaiting an inpatient bed.</p>
     */
    public static final OntProperty cvdNumC19OverflowPats = M_MODEL.createOntProperty( "http://schema.org/cvdNumC19OverflowPats" );
    
    /** <p>numicubeds - ICU BEDS: Total number of staffed inpatient intensive care unit 
     *  (ICU) beds.</p>
     */
    public static final OntProperty cvdNumICUBeds = M_MODEL.createOntProperty( "http://schema.org/cvdNumICUBeds" );
    
    /** <p>numicubedsocc - ICU BED OCCUPANCY: Total number of staffed inpatient ICU beds 
     *  that are occupied.</p>
     */
    public static final OntProperty cvdNumICUBedsOcc = M_MODEL.createOntProperty( "http://schema.org/cvdNumICUBedsOcc" );
    
    /** <p>numtotbeds - ALL HOSPITAL BEDS: Total number of all inpatient and outpatient 
     *  beds, including all staffed, ICU, licensed, and overflow (surge) beds used 
     *  for inpatients or outpatients.</p>
     */
    public static final OntProperty cvdNumTotBeds = M_MODEL.createOntProperty( "http://schema.org/cvdNumTotBeds" );
    
    /** <p>numvent - MECHANICAL VENTILATORS: Total number of ventilators available.</p> */
    public static final OntProperty cvdNumVent = M_MODEL.createOntProperty( "http://schema.org/cvdNumVent" );
    
    /** <p>numventuse - MECHANICAL VENTILATORS IN USE: Total number of ventilators in 
     *  use.</p>
     */
    public static final OntProperty cvdNumVentUse = M_MODEL.createOntProperty( "http://schema.org/cvdNumVentUse" );
    
    /** <p>An item within a data feed. Data feeds may have many elements.</p> */
    public static final OntProperty dataFeedElement = M_MODEL.createOntProperty( "http://schema.org/dataFeedElement" );
    
    /** <p>A dataset contained in this catalog.</p> */
    public static final OntProperty dataset = M_MODEL.createOntProperty( "http://schema.org/dataset" );
    
    /** <p>The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, 
     *  the year 2011 (in ISO 8601 time interval format).</p>
     */
    public static final OntProperty datasetTimeInterval = M_MODEL.createOntProperty( "http://schema.org/datasetTimeInterval" );
    
    /** <p>The date on which the CreativeWork was created or the item was added to a 
     *  DataFeed.</p>
     */
    public static final OntProperty dateCreated = M_MODEL.createOntProperty( "http://schema.org/dateCreated" );
    
    /** <p>The datetime the item was removed from the DataFeed.</p> */
    public static final OntProperty dateDeleted = M_MODEL.createOntProperty( "http://schema.org/dateDeleted" );
    
    /** <p>The date the ticket was issued.</p> */
    public static final OntProperty dateIssued = M_MODEL.createOntProperty( "http://schema.org/dateIssued" );
    
    /** <p>The date on which the CreativeWork was most recently modified or when the 
     *  item's entry was modified within a DataFeed.</p>
     */
    public static final OntProperty dateModified = M_MODEL.createOntProperty( "http://schema.org/dateModified" );
    
    /** <p>Publication date of an online listing.</p> */
    public static final OntProperty datePosted = M_MODEL.createOntProperty( "http://schema.org/datePosted" );
    
    /** <p>Date of first publication or broadcast. For example the date a [[CreativeWork]] 
     *  was broadcast or a [[Certification]] was issued.</p>
     */
    public static final OntProperty datePublished = M_MODEL.createOntProperty( "http://schema.org/datePublished" );
    
    /** <p>The date/time at which the message has been read by the recipient if a single 
     *  recipient exists.</p>
     */
    public static final OntProperty dateRead = M_MODEL.createOntProperty( "http://schema.org/dateRead" );
    
    /** <p>The date/time the message was received if a single recipient exists.</p> */
    public static final OntProperty dateReceived = M_MODEL.createOntProperty( "http://schema.org/dateReceived" );
    
    /** <p>The date/time at which the message was sent.</p> */
    public static final OntProperty dateSent = M_MODEL.createOntProperty( "http://schema.org/dateSent" );
    
    /** <p>The date of the first registration of the vehicle with the respective public 
     *  authorities.</p>
     */
    public static final OntProperty dateVehicleFirstRegistered = M_MODEL.createOntProperty( "http://schema.org/dateVehicleFirstRegistered" );
    
    /** <p>A [dateline](https://en.wikipedia.org/wiki/Dateline) is a brief piece of text 
     *  included in news articles that describes where and when the story was written 
     *  or filed though the date is often omitted. Sometimes only a placename is provided. 
     *  Structured representations of dateline-related information can also be expressed 
     *  more explicitly using [[locationCreated]] (which represents where a work was 
     *  created, e.g. where a news report was written). For location depicted or described 
     *  in the content, use [[contentLocation]]. Dateline summaries are oriented more 
     *  towards human readers than towards automated processing, and can vary substantially. 
     *  Some examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 
     *  2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines".</p>
     */
    public static final OntProperty dateline = M_MODEL.createOntProperty( "http://schema.org/dateline" );
    
    /** <p>The day of the week for which these opening hours are valid.</p> */
    public static final OntProperty dayOfWeek = M_MODEL.createOntProperty( "http://schema.org/dayOfWeek" );
    
    /** <p>Date of death.</p> */
    public static final OntProperty deathDate = M_MODEL.createOntProperty( "http://schema.org/deathDate" );
    
    /** <p>The place where the person died.</p> */
    public static final OntProperty deathPlace = M_MODEL.createOntProperty( "http://schema.org/deathPlace" );
    
    /** <p>The default value of the input. For properties that expect a literal, the 
     *  default is a literal value, for properties that expect an object, it's an 
     *  ID reference to one of the current values.</p>
     */
    public static final OntProperty defaultValue = M_MODEL.createOntProperty( "http://schema.org/defaultValue" );
    
    /** <p>Destination address.</p> */
    public static final OntProperty deliveryAddress = M_MODEL.createOntProperty( "http://schema.org/deliveryAddress" );
    
    /** <p>The typical delay between the receipt of the order and the goods either leaving 
     *  the warehouse or being prepared for pickup, in case the delivery method is 
     *  on site pickup.</p>
     */
    public static final OntProperty deliveryLeadTime = M_MODEL.createOntProperty( "http://schema.org/deliveryLeadTime" );
    
    /** <p>A sub property of instrument. The method of delivery.</p> */
    public static final OntProperty deliveryMethod = M_MODEL.createOntProperty( "http://schema.org/deliveryMethod" );
    
    /** <p>New entry added as the package passes through each leg of its journey (from 
     *  shipment to final delivery).</p>
     */
    public static final OntProperty deliveryStatus = M_MODEL.createOntProperty( "http://schema.org/deliveryStatus" );
    
    /** <p>The total delay between the receipt of the order and the goods reaching the 
     *  final customer.</p>
     */
    public static final OntProperty deliveryTime = M_MODEL.createOntProperty( "http://schema.org/deliveryTime" );
    
    /** <p>A relationship between an organization and a department of that organization, 
     *  also described as an organization (allowing different urls, logos, opening 
     *  hours). For example: a store with a pharmacy, or a bakery with a cafe.</p>
     */
    public static final OntProperty department = M_MODEL.createOntProperty( "http://schema.org/department" );
    
    /** <p>The airport where the flight originates.</p> */
    public static final OntProperty departureAirport = M_MODEL.createOntProperty( "http://schema.org/departureAirport" );
    
    /** <p>The terminal or port from which the boat departs.</p> */
    public static final OntProperty departureBoatTerminal = M_MODEL.createOntProperty( "http://schema.org/departureBoatTerminal" );
    
    /** <p>The stop or station from which the bus departs.</p> */
    public static final OntProperty departureBusStop = M_MODEL.createOntProperty( "http://schema.org/departureBusStop" );
    
    /** <p>Identifier of the flight's departure gate.</p> */
    public static final OntProperty departureGate = M_MODEL.createOntProperty( "http://schema.org/departureGate" );
    
    /** <p>The platform from which the train departs.</p> */
    public static final OntProperty departurePlatform = M_MODEL.createOntProperty( "http://schema.org/departurePlatform" );
    
    /** <p>The station from which the train departs.</p> */
    public static final OntProperty departureStation = M_MODEL.createOntProperty( "http://schema.org/departureStation" );
    
    /** <p>Identifier of the flight's departure terminal.</p> */
    public static final OntProperty departureTerminal = M_MODEL.createOntProperty( "http://schema.org/departureTerminal" );
    
    /** <p>The expected departure time.</p> */
    public static final OntProperty departureTime = M_MODEL.createOntProperty( "http://schema.org/departureTime" );
    
    /** <p>Prerequisites needed to fulfill steps in article.</p> */
    public static final OntProperty dependencies = M_MODEL.createOntProperty( "http://schema.org/dependencies" );
    
    /** <p>The depth of the item.</p> */
    public static final OntProperty depth = M_MODEL.createOntProperty( "http://schema.org/depth" );
    
    /** <p>A description of the item.</p> */
    public static final OntProperty description_PROP = M_MODEL.createOntProperty( "http://schema.org/description" );
    
    /** <p>Device required to run the application. Used in cases where a specific make/model 
     *  is required to run the application.</p>
     */
    public static final OntProperty device = M_MODEL.createOntProperty( "http://schema.org/device" );
    
    /** <p>One or more alternative conditions considered in the differential diagnosis 
     *  process as output of a diagnosis process.</p>
     */
    public static final OntProperty diagnosis = M_MODEL.createOntProperty( "http://schema.org/diagnosis" );
    
    /** <p>An image containing a diagram that illustrates the structure and/or its component 
     *  substructures and/or connections with other structures.</p>
     */
    public static final OntProperty diagram = M_MODEL.createOntProperty( "http://schema.org/diagram" );
    
    /** <p>A sub property of instrument. The diet used in this action.</p> */
    public static final OntProperty diet = M_MODEL.createOntProperty( "http://schema.org/diet" );
    
    /** <p>Nutritional information specific to the dietary plan. May include dietary 
     *  recommendations on what foods to avoid, what foods to consume, and specific 
     *  alterations/deviations from the USDA or other regulatory body's approved dietary 
     *  guidelines.</p>
     */
    public static final OntProperty dietFeatures = M_MODEL.createOntProperty( "http://schema.org/dietFeatures" );
    
    /** <p>One of a set of differential diagnoses for the condition. Specifically, a 
     *  closely-related or competing diagnosis typically considered later in the cognitive 
     *  process whereby this medical condition is distinguished from others most likely 
     *  responsible for a similar collection of signs and symptoms to reach the most 
     *  parsimonious diagnosis or diagnoses in a patient.</p>
     */
    public static final OntProperty differentialDiagnosis = M_MODEL.createOntProperty( "http://schema.org/differentialDiagnosis" );
    
    /** <p>Indicates an IPTCDigitalSourceEnumeration code indicating the nature of the 
     *  digital source(s) for some [[CreativeWork]].</p>
     */
    public static final OntProperty digitalSourceType = M_MODEL.createOntProperty( "http://schema.org/digitalSourceType" );
    
    /** <p>Indicates whether an [[url]] that is associated with a [[JobPosting]] enables 
     *  direct application for the job, via the posting website. A job posting is 
     *  considered to have directApply of [[True]] if an application process for the 
     *  specified job can be directly initiated via the url(s) given (noting that 
     *  e.g. multiple internet domains might nevertheless be involved at an implementation 
     *  level). A value of [[False]] is appropriate if there is no clear path to applying 
     *  directly online for the specified job, navigating directly from the JobPosting 
     *  url(s) supplied.</p>
     */
    public static final OntProperty directApply = M_MODEL.createOntProperty( "http://schema.org/directApply" );
    
    /** <p>A director of e.g. TV, radio, movie, video gaming etc. content, or of an event. 
     *  Directors can be associated with individual items or with a series, episode, 
     *  clip.</p>
     */
    public static final OntProperty director = M_MODEL.createOntProperty( "http://schema.org/director" );
    
    /** <p>A director of e.g. TV, radio, movie, video games etc. content. Directors can 
     *  be associated with individual items or with a series, episode, clip.</p>
     */
    public static final OntProperty directors = M_MODEL.createOntProperty( "http://schema.org/directors" );
    
    /** <p>A sub property of description. A short description of the item used to disambiguate 
     *  from other, similar items. Information from other properties (in particular, 
     *  name) may be necessary for the description to be useful for disambiguation.</p>
     */
    public static final OntProperty disambiguatingDescription = M_MODEL.createOntProperty( "http://schema.org/disambiguatingDescription" );
    
    /** <p>Any discount applied (to an Order).</p> */
    public static final OntProperty discount = M_MODEL.createOntProperty( "http://schema.org/discount" );
    
    /** <p>Code used to redeem a discount.</p> */
    public static final OntProperty discountCode = M_MODEL.createOntProperty( "http://schema.org/discountCode" );
    
    /** <p>The currency of the discount.
     *  
     *  Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), 
     *  e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) 
     *  for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading 
     *  Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) 
     *  and other currency types, e.g. "Ithaca HOUR".</p>
     */
    public static final OntProperty discountCurrency = M_MODEL.createOntProperty( "http://schema.org/discountCurrency" );
    
    /** <p>Specifies the CreativeWork associated with the UserComment.</p> */
    public static final OntProperty discusses = M_MODEL.createOntProperty( "http://schema.org/discusses" );
    
    /** <p>A link to the page containing the comments of the CreativeWork.</p> */
    public static final OntProperty discussionUrl = M_MODEL.createOntProperty( "http://schema.org/discussionUrl" );
    
    /** <p>Information about disease prevention.</p> */
    public static final OntProperty diseasePreventionInfo = M_MODEL.createOntProperty( "http://schema.org/diseasePreventionInfo" );
    
    /** <p>Statistical information about the spread of a disease, either as [[WebContent]], 
     *  or described directly as a [[Dataset]], or the specific [[Observation]]s in 
     *  the dataset. When a [[WebContent]] URL is provided, the page indicated might 
     *  also contain more such markup.</p>
     */
    public static final OntProperty diseaseSpreadStatistics = M_MODEL.createOntProperty( "http://schema.org/diseaseSpreadStatistics" );
    
    /** <p>The date that this organization was dissolved.</p> */
    public static final OntProperty dissolutionDate = M_MODEL.createOntProperty( "http://schema.org/dissolutionDate" );
    
    /** <p>The distance travelled, e.g. exercising or travelling.</p> */
    public static final OntProperty distance = M_MODEL.createOntProperty( "http://schema.org/distance" );
    
    /** <p>One of a set of signs and symptoms that can be used to distinguish this diagnosis 
     *  from others in the differential diagnosis.</p>
     */
    public static final OntProperty distinguishingSign = M_MODEL.createOntProperty( "http://schema.org/distinguishingSign" );
    
    /** <p>A downloadable form of this dataset, at a specific location, in a specific 
     *  format. This property can be repeated if different variations are available. 
     *  There is no expectation that different downloadable distributions must contain 
     *  exactly equivalent information (see also [DCAT](https://www.w3.org/TR/vocab-dcat-3/#Class:Distribution) 
     *  on this point). Different distributions might include or exclude different 
     *  subsets of the entire dataset, for example.</p>
     */
    public static final OntProperty distribution = M_MODEL.createOntProperty( "http://schema.org/distribution" );
    
    /** <p>Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. 
     *  For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity 
     *  policy on both staffing and sources, typically providing staffing data.</p>
     */
    public static final OntProperty diversityPolicy = M_MODEL.createOntProperty( "http://schema.org/diversityPolicy" );
    
    /** <p>For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), 
     *  a report on staffing diversity issues. In a news context this might be for 
     *  example ASNE or RTDNA (US) reports, or self-reported.</p>
     */
    public static final OntProperty diversityStaffingReport = M_MODEL.createOntProperty( "http://schema.org/diversityStaffingReport" );
    
    /** <p>Further documentation describing the Web API in more detail.</p> */
    public static final OntProperty documentation = M_MODEL.createOntProperty( "http://schema.org/documentation" );
    
    /** <p>Indicates when shipping to a particular [[shippingDestination]] is not available.</p> */
    public static final OntProperty doesNotShip = M_MODEL.createOntProperty( "http://schema.org/doesNotShip" );
    
    /** <p>Relates a property to a class that is (one of) the type(s) the property is 
     *  expected to be used on.</p>
     */
    public static final OntProperty domainIncludes = M_MODEL.createOntProperty( "http://schema.org/domainIncludes" );
    
    /** <p>Whether borrower is a resident of the jurisdiction where the property is located.</p> */
    public static final OntProperty domiciledMortgage = M_MODEL.createOntProperty( "http://schema.org/domiciledMortgage" );
    
    /** <p>The time admission will commence.</p> */
    public static final OntProperty doorTime = M_MODEL.createOntProperty( "http://schema.org/doorTime" );
    
    /** <p>A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 
     *  'injection'.</p>
     */
    public static final OntProperty dosageForm = M_MODEL.createOntProperty( "http://schema.org/dosageForm" );
    
    /** <p>A dosing schedule for the drug for a given population, either observed, recommended, 
     *  or maximum dose based on the type used.</p>
     */
    public static final OntProperty doseSchedule = M_MODEL.createOntProperty( "http://schema.org/doseSchedule" );
    
    /** <p>The unit of the dose, e.g. 'mg'.</p> */
    public static final OntProperty doseUnit = M_MODEL.createOntProperty( "http://schema.org/doseUnit" );
    
    /** <p>The value of the dose, e.g. 500.</p> */
    public static final OntProperty doseValue = M_MODEL.createOntProperty( "http://schema.org/doseValue" );
    
    /** <p>a type of payment made in cash during the onset of the purchase of an expensive 
     *  good/service. The payment typically represents only a percentage of the full 
     *  purchase price.</p>
     */
    public static final OntProperty downPayment = M_MODEL.createOntProperty( "http://schema.org/downPayment" );
    
    /** <p>If the file can be downloaded, URL to download the binary.</p> */
    public static final OntProperty downloadUrl = M_MODEL.createOntProperty( "http://schema.org/downloadUrl" );
    
    /** <p>The number of downvotes this question, answer or comment has received from 
     *  the community.</p>
     */
    public static final OntProperty downvoteCount = M_MODEL.createOntProperty( "http://schema.org/downvoteCount" );
    
    /** <p>The vasculature that the vein drains into.</p> */
    public static final OntProperty drainsTo = M_MODEL.createOntProperty( "http://schema.org/drainsTo" );
    
    /** <p>The drive wheel configuration, i.e. which roadwheels will receive torque from 
     *  the vehicle's engine via the drivetrain.</p>
     */
    public static final OntProperty driveWheelConfiguration = M_MODEL.createOntProperty( "http://schema.org/driveWheelConfiguration" );
    
    /** <p>Where a rental car can be dropped off.</p> */
    public static final OntProperty dropoffLocation = M_MODEL.createOntProperty( "http://schema.org/dropoffLocation" );
    
    /** <p>When a rental car can be dropped off.</p> */
    public static final OntProperty dropoffTime = M_MODEL.createOntProperty( "http://schema.org/dropoffTime" );
    
    /** <p>Specifying a drug or medicine used in a medication procedure.</p> */
    public static final OntProperty drug = M_MODEL.createOntProperty( "http://schema.org/drug" );
    
    /** <p>The class of drug this belongs to (e.g., statins).</p> */
    public static final OntProperty drugClass = M_MODEL.createOntProperty( "http://schema.org/drugClass" );
    
    /** <p>The unit in which the drug is measured, e.g. '5 mg tablet'.</p> */
    public static final OntProperty drugUnit = M_MODEL.createOntProperty( "http://schema.org/drugUnit" );
    
    /** <p>The Dun &amp; Bradstreet DUNS number for identifying an organization or business 
     *  person.</p>
     */
    public static final OntProperty duns = M_MODEL.createOntProperty( "http://schema.org/duns" );
    
    /** <p>A therapy that duplicates or overlaps this one.</p> */
    public static final OntProperty duplicateTherapy = M_MODEL.createOntProperty( "http://schema.org/duplicateTherapy" );
    
    /** <p>The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 
     *  duration format](http://en.wikipedia.org/wiki/ISO_8601).</p>
     */
    public static final OntProperty duration = M_MODEL.createOntProperty( "http://schema.org/duration" );
    
    /** <p>The duration of the warranty promise. Common unitCode values are ANN for year, 
     *  MON for months, or DAY for days.</p>
     */
    public static final OntProperty durationOfWarranty = M_MODEL.createOntProperty( "http://schema.org/durationOfWarranty" );
    
    /** <p>A media object representing the circumstances while performing this direction.</p> */
    public static final OntProperty duringMedia = M_MODEL.createOntProperty( "http://schema.org/duringMedia" );
    
    /** <p>The amount to be paid as a penalty in the event of early payment of the loan.</p> */
    public static final OntProperty earlyPrepaymentPenalty = M_MODEL.createOntProperty( "http://schema.org/earlyPrepaymentPenalty" );
    
    /** <p>An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] 
     *  representing a specific edit / edition for a work of film or television. For 
     *  example, the motion picture known as "Ghostbusters" whose [[titleEIDR]] is 
     *  "10.5240/7EC7-228A-510A-053E-CBB8-J" has several edits, e.g. "10.5240/1F2A-E1C5-680A-14C6-E76B-I" 
     *  and "10.5240/8A35-3BEE-6497-5D12-9E4F-3". Since schema.org types like [[Movie]] 
     *  and [[TVEpisode]] can be used for both works and their multiple expressions, 
     *  it is possible to use [[titleEIDR]] alone (for a general description), or 
     *  alongside [[editEIDR]] for a more edit-specific description.</p>
     */
    public static final OntProperty editEIDR = M_MODEL.createOntProperty( "http://schema.org/editEIDR" );
    
    /** <p>Specifies the Person who edited the CreativeWork.</p> */
    public static final OntProperty editor = M_MODEL.createOntProperty( "http://schema.org/editor" );
    
    /** <p>For questions that are part of learning resources (e.g. Quiz), eduQuestionType 
     *  indicates the format of question being given. Example: "Multiple choice", 
     *  "Open ended", "Flashcard".</p>
     */
    public static final OntProperty eduQuestionType = M_MODEL.createOntProperty( "http://schema.org/eduQuestionType" );
    
    /** <p>Educational background needed for the position or Occupation.</p> */
    public static final OntProperty educationRequirements = M_MODEL.createOntProperty( "http://schema.org/educationRequirements" );
    
    /** <p>An alignment to an established educational framework. This property should 
     *  not be used where the nature of the alignment can be described using a simple 
     *  property, for example to express that a resource [[teaches]] or [[assesses]] 
     *  a competency.</p>
     */
    public static final OntProperty educationalAlignment = M_MODEL.createOntProperty( "http://schema.org/educationalAlignment" );
    
    /** <p>A description of the qualification, award, certificate, diploma or other educational 
     *  credential awarded as a consequence of successful completion of this course 
     *  or program.</p>
     */
    public static final OntProperty educationalCredentialAwarded = M_MODEL.createOntProperty( "http://schema.org/educationalCredentialAwarded" );
    
    /** <p>The framework to which the resource being described is aligned.</p> */
    public static final OntProperty educationalFramework = M_MODEL.createOntProperty( "http://schema.org/educationalFramework" );
    
    /** <p>The level in terms of progression through an educational or training context. 
     *  Examples of educational levels include 'beginner', 'intermediate' or 'advanced', 
     *  and formal sets of level indicators.</p>
     */
    public static final OntProperty educationalLevel = M_MODEL.createOntProperty( "http://schema.org/educationalLevel" );
    
    /** <p>Similar to courseMode, the medium or means of delivery of the program as a 
     *  whole. The value may either be a text label (e.g. "online", "onsite" or "blended"; 
     *  "synchronous" or "asynchronous"; "full-time" or "part-time") or a URL reference 
     *  to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous 
     *  ).</p>
     */
    public static final OntProperty educationalProgramMode = M_MODEL.createOntProperty( "http://schema.org/educationalProgramMode" );
    
    /** <p>An educationalRole of an EducationalAudience.</p> */
    public static final OntProperty educationalRole = M_MODEL.createOntProperty( "http://schema.org/educationalRole" );
    
    /** <p>The purpose of a work in the context of education; for example, 'assignment', 
     *  'group work'.</p>
     */
    public static final OntProperty educationalUse = M_MODEL.createOntProperty( "http://schema.org/educationalUse" );
    
    /** <p>The elevation of a location ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)). 
     *  Values may be of the form 'NUMBER UNITOFMEASUREMENT' (e.g., '1,000 m', '3,200 
     *  ft') while numbers alone should be assumed to be a value in meters.</p>
     */
    public static final OntProperty elevation = M_MODEL.createOntProperty( "http://schema.org/elevation" );
    
    /** <p>The legal requirements such as citizenship, visa and other documentation required 
     *  for an applicant to this job.</p>
     */
    public static final OntProperty eligibilityToWorkRequirement = M_MODEL.createOntProperty( "http://schema.org/eligibilityToWorkRequirement" );
    
    /** <p>The type(s) of customers for which the given offer is valid.</p> */
    public static final OntProperty eligibleCustomerType = M_MODEL.createOntProperty( "http://schema.org/eligibleCustomerType" );
    
    /** <p>The duration for which the given offer is valid.</p> */
    public static final OntProperty eligibleDuration = M_MODEL.createOntProperty( "http://schema.org/eligibleDuration" );
    
    /** <p>The interval and unit of measurement of ordering quantities for which the 
     *  offer or price specification is valid. This allows e.g. specifying that a 
     *  certain freight charge is valid only for a certain quantity.</p>
     */
    public static final OntProperty eligibleQuantity = M_MODEL.createOntProperty( "http://schema.org/eligibleQuantity" );
    
    /** <p>The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the 
     *  GeoShape for the geo-political region(s) for which the offer or delivery charge 
     *  specification is valid.
     *  
     *  See also [[ineligibleRegion]].</p>
     */
    public static final OntProperty eligibleRegion = M_MODEL.createOntProperty( "http://schema.org/eligibleRegion" );
    
    /** <p>The transaction volume, in a monetary unit, for which the offer or price specification 
     *  is valid, e.g. for indicating a minimal purchasing volume, to express free 
     *  shipping above a certain order volume, or to limit the acceptance of credit 
     *  cards to purchases to a certain minimal amount.</p>
     */
    public static final OntProperty eligibleTransactionVolume = M_MODEL.createOntProperty( "http://schema.org/eligibleTransactionVolume" );
    
    /** <p>The supplier of the incentivized item/service for which the incentive is valid 
     *  for such as a utility company, merchant, or contractor.</p>
     */
    public static final OntProperty eligibleWithSupplier = M_MODEL.createOntProperty( "http://schema.org/eligibleWithSupplier" );
    
    /** <p>Email address.</p> */
    public static final OntProperty email = M_MODEL.createOntProperty( "http://schema.org/email" );
    
    /** <p>A URL pointing to a player for a specific video. In general, this is the information 
     *  in the ```src``` element of an ```embed``` tag and should not be the same 
     *  as the content of the ```loc``` tag.</p>
     */
    public static final OntProperty embedUrl = M_MODEL.createOntProperty( "http://schema.org/embedUrl" );
    
    /** <p>Represents textual captioning from a [[MediaObject]], e.g. text of a 'meme'.</p> */
    public static final OntProperty embeddedTextCaption = M_MODEL.createOntProperty( "http://schema.org/embeddedTextCaption" );
    
    /** <p>The CO2 emissions in g/km. When used in combination with a QuantitativeValue, 
     *  put "g/km" into the unitText property of that value, since there is no UN/CEFACT 
     *  Common Code for "g/km".</p>
     */
    public static final OntProperty emissionsCO2 = M_MODEL.createOntProperty( "http://schema.org/emissionsCO2" );
    
    /** <p>Someone working for this organization.</p> */
    public static final OntProperty employee = M_MODEL.createOntProperty( "http://schema.org/employee" );
    
    /** <p>People working for this organization.</p> */
    public static final OntProperty employees = M_MODEL.createOntProperty( "http://schema.org/employees" );
    
    /** <p>A description of the employer, career opportunities and work environment for 
     *  this position.</p>
     */
    public static final OntProperty employerOverview = M_MODEL.createOntProperty( "http://schema.org/employerOverview" );
    
    /** <p>Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, 
     *  internship).</p>
     */
    public static final OntProperty employmentType = M_MODEL.createOntProperty( "http://schema.org/employmentType" );
    
    /** <p>Indicates the department, unit and/or facility where the employee reports 
     *  and/or in which the job is to be performed.</p>
     */
    public static final OntProperty employmentUnit = M_MODEL.createOntProperty( "http://schema.org/employmentUnit" );
    
    /** <p>Another BioChemEntity encoded by this one.</p> */
    public static final OntProperty encodesBioChemEntity = M_MODEL.createOntProperty( "http://schema.org/encodesBioChemEntity" );
    
    /** <p>The CreativeWork encoded by this media object.</p> */
    public static final OntProperty encodesCreativeWork = M_MODEL.createOntProperty( "http://schema.org/encodesCreativeWork" );
    
    /** <p>A media object that encodes this CreativeWork. This property is a synonym 
     *  for associatedMedia.</p>
     */
    public static final OntProperty encoding = M_MODEL.createOntProperty( "http://schema.org/encoding" );
    
    /** <p>Media type typically expressed using a MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml) 
     *  and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)), 
     *  e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 
     *  etc. In cases where a [[CreativeWork]] has several media type representations, 
     *  [[encoding]] can be used to indicate each [[MediaObject]] alongside particular 
     *  [[encodingFormat]] information. Unregistered or niche encoding and file formats 
     *  can be indicated instead via the most appropriate URL, e.g. defining Web page 
     *  or a Wikipedia/Wikidata entry.</p>
     */
    public static final OntProperty encodingFormat = M_MODEL.createOntProperty( "http://schema.org/encodingFormat" );
    
    /** <p>The supported encoding type(s) for an EntryPoint request.</p> */
    public static final OntProperty encodingType = M_MODEL.createOntProperty( "http://schema.org/encodingType" );
    
    /** <p>A media object that encodes this CreativeWork.</p> */
    public static final OntProperty encodings = M_MODEL.createOntProperty( "http://schema.org/encodings" );
    
    /** <p>The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).</p> */
    public static final OntProperty endDate = M_MODEL.createOntProperty( "http://schema.org/endDate" );
    
    /** <p>The end time of the clip expressed as the number of seconds from the beginning 
     *  of the work.</p>
     */
    public static final OntProperty endOffset = M_MODEL.createOntProperty( "http://schema.org/endOffset" );
    
    /** <p>The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), 
     *  the time that it is expected to end. For actions that span a period of time, 
     *  when the action was performed. E.g. John wrote a book from January to *December*. 
     *  For media, including audio and video, it's the time offset of the end of a 
     *  clip within a larger file.
     *  
     *  Note that Event uses startDate/endDate instead of startTime/endTime, even 
     *  when describing dates with times. This situation may be clarified in future 
     *  revisions.</p>
     */
    public static final OntProperty endTime = M_MODEL.createOntProperty( "http://schema.org/endTime" );
    
    /** <p>A sub property of participant. The person/organization being supported.</p> */
    public static final OntProperty endorsee = M_MODEL.createOntProperty( "http://schema.org/endorsee" );
    
    /** <p>People or organizations that endorse the plan.</p> */
    public static final OntProperty endorsers = M_MODEL.createOntProperty( "http://schema.org/endorsers" );
    
    /** <p>Specifies the most energy efficient class on the regulated EU energy consumption 
     *  scale for the product category a product belongs to. For example, energy consumption 
     *  for televisions placed on the market after January 1, 2020 is scaled from 
     *  D to A+++.</p>
     */
    public static final OntProperty energyEfficiencyScaleMax = M_MODEL.createOntProperty( "http://schema.org/energyEfficiencyScaleMax" );
    
    /** <p>Specifies the least energy efficient class on the regulated EU energy consumption 
     *  scale for the product category a product belongs to. For example, energy consumption 
     *  for televisions placed on the market after January 1, 2020 is scaled from 
     *  D to A+++.</p>
     */
    public static final OntProperty energyEfficiencyScaleMin = M_MODEL.createOntProperty( "http://schema.org/energyEfficiencyScaleMin" );
    
    /** <p>The volume swept by all of the pistons inside the cylinders of an internal 
     *  combustion engine in a single movement. 
     *  
     *  Typical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic 
     *  inches
     *  * Note 1: You can link to information about how the given value has been determined 
     *  using the [[valueReference]] property.
     *  * Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.</p>
     */
    public static final OntProperty engineDisplacement = M_MODEL.createOntProperty( "http://schema.org/engineDisplacement" );
    
    /** <p>The power of the vehicle's engine. Typical unit code(s): KWT for kilowatt, 
     *  BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 
     *  W)
     *  
     *  * Note 1: There are many different ways of measuring an engine's power. For 
     *  an overview, see [http://en.wikipedia.org/wiki/Horsepower#Enginepowertestcodes](http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes).
     *  * Note 2: You can link to information about how the given value has been determined 
     *  using the [[valueReference]] property.
     *  * Note 3: You can use [[minValue]] and [[maxValue]] to indicate ranges.</p>
     */
    public static final OntProperty enginePower = M_MODEL.createOntProperty( "http://schema.org/enginePower" );
    
    /** <p>The type of engine or engines powering the vehicle.</p> */
    public static final OntProperty engineType = M_MODEL.createOntProperty( "http://schema.org/engineType" );
    
    /** <p>A sub property of location. The entertainment business where the action occurred.</p> */
    public static final OntProperty entertainmentBusiness = M_MODEL.createOntProperty( "http://schema.org/entertainmentBusiness" );
    
    /** <p>The characteristics of associated patients, such as age, gender, race etc.</p> */
    public static final OntProperty epidemiology = M_MODEL.createOntProperty( "http://schema.org/epidemiology" );
    
    /** <p>An episode of a TV, radio or game media within a series or season.</p> */
    public static final OntProperty episode = M_MODEL.createOntProperty( "http://schema.org/episode" );
    
    /** <p>Position of the episode within an ordered group of episodes.</p> */
    public static final OntProperty episodeNumber = M_MODEL.createOntProperty( "http://schema.org/episodeNumber" );
    
    /** <p>An episode of a TV/radio series or season.</p> */
    public static final OntProperty episodes = M_MODEL.createOntProperty( "http://schema.org/episodes" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  equal to the object.</p>
     */
    public static final OntProperty equal = M_MODEL.createOntProperty( "http://schema.org/equal" );
    
    /** <p>For failed actions, more information on the cause of the failure.</p> */
    public static final OntProperty error = M_MODEL.createOntProperty( "http://schema.org/error" );
    
    /** <p>The estimated cost of the supply or supplies consumed when performing instructions.</p> */
    public static final OntProperty estimatedCost = M_MODEL.createOntProperty( "http://schema.org/estimatedCost" );
    
    /** <p>The estimated time the flight will take.</p> */
    public static final OntProperty estimatedFlightDuration = M_MODEL.createOntProperty( "http://schema.org/estimatedFlightDuration" );
    
    /** <p>An estimated salary for a job posting or occupation, based on a variety of 
     *  variables including, but not limited to industry, job title, and location. 
     *  Estimated salaries are often computed by outside organizations rather than 
     *  the hiring organization, who may not have committed to the estimated value.</p>
     */
    public static final OntProperty estimatedSalary = M_MODEL.createOntProperty( "http://schema.org/estimatedSalary" );
    
    /** <p>The condition, complication, or symptom whose risk is being estimated.</p> */
    public static final OntProperty estimatesRiskOf = M_MODEL.createOntProperty( "http://schema.org/estimatesRiskOf" );
    
    /** <p>Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding 
     *  journalistic and publishing practices, or of a [[Restaurant]], a page describing 
     *  food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy 
     *  is typically a statement describing the personal, organizational, and corporate 
     *  standards of behavior expected by the organization.</p>
     */
    public static final OntProperty ethicsPolicy = M_MODEL.createOntProperty( "http://schema.org/ethicsPolicy" );
    
    /** <p>Upcoming or past event associated with this place, organization, or action.</p> */
    public static final OntProperty event = M_MODEL.createOntProperty( "http://schema.org/event" );
    
    /** <p>The eventAttendanceMode of an event indicates whether it occurs online, offline, 
     *  or a mix.</p>
     */
    public static final OntProperty eventAttendanceMode = M_MODEL.createOntProperty( "http://schema.org/eventAttendanceMode" );
    
    /** <p>Associates an [[Event]] with a [[Schedule]]. There are circumstances where 
     *  it is preferable to share a schedule for a series of repeating events rather 
     *  than data on the individual events themselves. For example, a website or application 
     *  might prefer to publish a schedule for a weekly gym class rather than provide 
     *  data on every event. A schedule could be processed by applications to add 
     *  forthcoming events to a calendar. An [[Event]] that is associated with a [[Schedule]] 
     *  using this property should not have [[startDate]] or [[endDate]] properties. 
     *  These are instead defined within the associated [[Schedule]], this avoids 
     *  any ambiguity for clients using the data. The property might have repeated 
     *  values to specify different schedules, e.g. for different months or seasons.</p>
     */
    public static final OntProperty eventSchedule = M_MODEL.createOntProperty( "http://schema.org/eventSchedule" );
    
    /** <p>An eventStatus of an event represents its status; particularly useful when 
     *  an event is cancelled or rescheduled.</p>
     */
    public static final OntProperty eventStatus = M_MODEL.createOntProperty( "http://schema.org/eventStatus" );
    
    /** <p>Upcoming or past events associated with this place or organization.</p> */
    public static final OntProperty events = M_MODEL.createOntProperty( "http://schema.org/events" );
    
    /** <p>Strength of evidence of the data used to formulate the guideline (enumerated).</p> */
    public static final OntProperty evidenceLevel = M_MODEL.createOntProperty( "http://schema.org/evidenceLevel" );
    
    /** <p>Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, 
     *  etc.</p>
     */
    public static final OntProperty evidenceOrigin = M_MODEL.createOntProperty( "http://schema.org/evidenceOrigin" );
    
    /** <p>A creative work that this work is an example/instance/realization/derivation 
     *  of.</p>
     */
    public static final OntProperty exampleOfWork = M_MODEL.createOntProperty( "http://schema.org/exampleOfWork" );
    
    /** <p>Defines a [[Date]] or [[DateTime]] during which a scheduled [[Event]] will 
     *  not take place. The property allows exceptions to a [[Schedule]] to be specified. 
     *  If an exception is specified as a [[DateTime]] then only the event that would 
     *  have started at that specific date and time should be excluded from the schedule. 
     *  If an exception is specified as a [[Date]] then any event that is scheduled 
     *  for that 24 hour period should be excluded from the schedule. This allows 
     *  a whole day to be excluded from the schedule without having to itemise every 
     *  scheduled event.</p>
     */
    public static final OntProperty exceptDate = M_MODEL.createOntProperty( "http://schema.org/exceptDate" );
    
    /** <p>The difference between the price at which a broker or other intermediary buys 
     *  and sells foreign currency.</p>
     */
    public static final OntProperty exchangeRateSpread = M_MODEL.createOntProperty( "http://schema.org/exchangeRateSpread" );
    
    /** <p>Library file name, e.g., mscorlib.dll, system.web.dll.</p> */
    public static final OntProperty executableLibraryName = M_MODEL.createOntProperty( "http://schema.org/executableLibraryName" );
    
    /** <p>A sub property of location. The course where this action was taken.</p> */
    public static final OntProperty exerciseCourse = M_MODEL.createOntProperty( "http://schema.org/exerciseCourse" );
    
    /** <p>A sub property of instrument. The exercise plan used on this action.</p> */
    public static final OntProperty exercisePlan = M_MODEL.createOntProperty( "http://schema.org/exercisePlan" );
    
    /** <p>A sub property of instrument. The diet used in this action.</p> */
    public static final OntProperty exerciseRelatedDiet = M_MODEL.createOntProperty( "http://schema.org/exerciseRelatedDiet" );
    
    /** <p>Type(s) of exercise or activity, such as strength training, flexibility training, 
     *  aerobics, cardiac rehabilitation, etc.</p>
     */
    public static final OntProperty exerciseType = M_MODEL.createOntProperty( "http://schema.org/exerciseType" );
    
    /** <p>exif data for this object.</p> */
    public static final OntProperty exifData = M_MODEL.createOntProperty( "http://schema.org/exifData" );
    
    /** <p>The earliest date the package may arrive.</p> */
    public static final OntProperty expectedArrivalFrom = M_MODEL.createOntProperty( "http://schema.org/expectedArrivalFrom" );
    
    /** <p>The latest date the package may arrive.</p> */
    public static final OntProperty expectedArrivalUntil = M_MODEL.createOntProperty( "http://schema.org/expectedArrivalUntil" );
    
    /** <p>The likely outcome in either the short term or long term of the medical condition.</p> */
    public static final OntProperty expectedPrognosis = M_MODEL.createOntProperty( "http://schema.org/expectedPrognosis" );
    
    /** <p>An Offer which must be accepted before the user can perform the Action. For 
     *  example, the user may need to buy a movie before being able to watch it.</p>
     */
    public static final OntProperty expectsAcceptanceOf = M_MODEL.createOntProperty( "http://schema.org/expectsAcceptanceOf" );
    
    /** <p>Indicates whether a [[JobPosting]] will accept experience (as indicated by 
     *  [[OccupationalExperienceRequirements]]) in place of its formal educational 
     *  qualifications (as indicated by [[educationRequirements]]). If true, indicates 
     *  that satisfying one of these requirements is sufficient.</p>
     */
    public static final OntProperty experienceInPlaceOfEducation = M_MODEL.createOntProperty( "http://schema.org/experienceInPlaceOfEducation" );
    
    /** <p>Description of skills and experience needed for the position or Occupation.</p> */
    public static final OntProperty experienceRequirements = M_MODEL.createOntProperty( "http://schema.org/experienceRequirements" );
    
    /** <p>Medical expert advice related to the plan.</p> */
    public static final OntProperty expertConsiderations = M_MODEL.createOntProperty( "http://schema.org/expertConsiderations" );
    
    /** <p>Date the content expires and is no longer useful or available. For example 
     *  a [[VideoObject]] or [[NewsArticle]] whose availability or relevance is time-limited, 
     *  a [[ClaimReview]] fact check whose publisher wants to indicate that it may 
     *  no longer be relevant (or helpful to highlight) after some date, or a [[Certification]] 
     *  the validity has expired.</p>
     */
    public static final OntProperty expires = M_MODEL.createOntProperty( "http://schema.org/expires" );
    
    /** <p>Tissue, organ, biological sample, etc in which activity of this gene has been 
     *  observed experimentally. For example brain, digestive system.</p>
     */
    public static final OntProperty expressedIn = M_MODEL.createOntProperty( "http://schema.org/expressedIn" );
    
    /** <p>Family name. In the U.S., the last name of a Person.</p> */
    public static final OntProperty familyName = M_MODEL.createOntProperty( "http://schema.org/familyName" );
    
    /** <p>The number of grams of fat.</p> */
    public static final OntProperty fatContent = M_MODEL.createOntProperty( "http://schema.org/fatContent" );
    
    /** <p>The fax number.</p> */
    public static final OntProperty faxNumber = M_MODEL.createOntProperty( "http://schema.org/faxNumber" );
    
    /** <p>Features or modules provided by this application (and possibly required by 
     *  other applications).</p>
     */
    public static final OntProperty featureList = M_MODEL.createOntProperty( "http://schema.org/featureList" );
    
    /** <p>Description of fees, commissions, and other terms applied either to a class 
     *  of financial product, or by a financial service organization.</p>
     */
    public static final OntProperty feesAndCommissionsSpecification = M_MODEL.createOntProperty( "http://schema.org/feesAndCommissionsSpecification" );
    
    /** <p>The number of grams of fiber.</p> */
    public static final OntProperty fiberContent = M_MODEL.createOntProperty( "http://schema.org/fiberContent" );
    
    /** <p>Media type, typically MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml)) 
     *  of the content, e.g. application/zip of a SoftwareApplication binary. In cases 
     *  where a CreativeWork has several media type representations, 'encoding' can 
     *  be used to indicate each MediaObject alongside particular fileFormat information. 
     *  Unregistered or niche file formats can be indicated instead via the most appropriate 
     *  URL, e.g. defining Web page or a Wikipedia entry.</p>
     */
    public static final OntProperty fileFormat = M_MODEL.createOntProperty( "http://schema.org/fileFormat" );
    
    /** <p>Size of the application / package (e.g. 18MB). In the absence of a unit (MB, 
     *  KB etc.), KB will be assumed.</p>
     */
    public static final OntProperty fileSize = M_MODEL.createOntProperty( "http://schema.org/fileSize" );
    
    /** <p>A financial aid type or program which students may use to pay for tuition 
     *  or fees associated with the program.</p>
     */
    public static final OntProperty financialAidEligible = M_MODEL.createOntProperty( "http://schema.org/financialAidEligible" );
    
    /** <p>Indicates the first known occurrence of a [[Claim]] in some [[CreativeWork]].</p> */
    public static final OntProperty firstAppearance = M_MODEL.createOntProperty( "http://schema.org/firstAppearance" );
    
    /** <p>The date and place the work was first performed.</p> */
    public static final OntProperty firstPerformance = M_MODEL.createOntProperty( "http://schema.org/firstPerformance" );
    
    /** <p>The distance of the flight.</p> */
    public static final OntProperty flightDistance = M_MODEL.createOntProperty( "http://schema.org/flightDistance" );
    
    /** <p>The unique identifier for a flight including the airline IATA code. For example, 
     *  if describing United flight 110, where the IATA code for United is 'UA', the 
     *  flightNumber is 'UA110'.</p>
     */
    public static final OntProperty flightNumber = M_MODEL.createOntProperty( "http://schema.org/flightNumber" );
    
    /** <p>The floor level for an [[Accommodation]] in a multi-storey building. Since 
     *  counting systems [vary internationally](https://en.wikipedia.org/wiki/Storey#Consecutive_number_floor_designations), 
     *  the local system should be used where possible.</p>
     */
    public static final OntProperty floorLevel = M_MODEL.createOntProperty( "http://schema.org/floorLevel" );
    
    /** <p>A floor limit is the amount of money above which credit card transactions 
     *  must be authorized.</p>
     */
    public static final OntProperty floorLimit = M_MODEL.createOntProperty( "http://schema.org/floorLimit" );
    
    /** <p>The size of the accommodation, e.g. in square meter or squarefoot. Typical 
     *  unit code(s): MTK for square meter, FTK for square foot, or YDK for square 
     *  yard.</p>
     */
    public static final OntProperty floorSize = M_MODEL.createOntProperty( "http://schema.org/floorSize" );
    
    /** <p>A sub property of object. The person or organization being followed.</p> */
    public static final OntProperty followee = M_MODEL.createOntProperty( "http://schema.org/followee" );
    
    /** <p>The most generic uni-directional social relation.</p> */
    public static final OntProperty follows = M_MODEL.createOntProperty( "http://schema.org/follows" );
    
    /** <p>Typical or recommended followup care after the procedure is performed.</p> */
    public static final OntProperty followup = M_MODEL.createOntProperty( "http://schema.org/followup" );
    
    /** <p>A sub property of location. The specific food establishment where the action 
     *  occurred.</p>
     */
    public static final OntProperty foodEstablishment = M_MODEL.createOntProperty( "http://schema.org/foodEstablishment" );
    
    /** <p>A sub property of location. The specific food event where the action occurred.</p> */
    public static final OntProperty foodEvent = M_MODEL.createOntProperty( "http://schema.org/foodEvent" );
    
    /** <p>Any precaution, guidance, contraindication, etc. related to consumption of 
     *  specific foods while taking this drug.</p>
     */
    public static final OntProperty foodWarning = M_MODEL.createOntProperty( "http://schema.org/foodWarning" );
    
    /** <p>A person or organization who founded this organization.</p> */
    public static final OntProperty founder = M_MODEL.createOntProperty( "http://schema.org/founder" );
    
    /** <p>A person who founded this organization.</p> */
    public static final OntProperty founders = M_MODEL.createOntProperty( "http://schema.org/founders" );
    
    /** <p>The date that this organization was founded.</p> */
    public static final OntProperty foundingDate = M_MODEL.createOntProperty( "http://schema.org/foundingDate" );
    
    /** <p>The place where the Organization was founded.</p> */
    public static final OntProperty foundingLocation = M_MODEL.createOntProperty( "http://schema.org/foundingLocation" );
    
    /** <p>A flag to signal that the item, event, or place is accessible for free.</p> */
    public static final OntProperty free = M_MODEL.createOntProperty( "http://schema.org/free" );
    
    /** <p>A monetary value above (or at) which the shipping rate becomes free. Intended 
     *  to be used via an [[OfferShippingDetails]] with [[shippingSettingsLink]] matching 
     *  this [[ShippingRateSettings]].</p>
     */
    public static final OntProperty freeShippingThreshold = M_MODEL.createOntProperty( "http://schema.org/freeShippingThreshold" );
    
    /** <p>How often the dose is taken, e.g. 'daily'.</p> */
    public static final OntProperty frequency = M_MODEL.createOntProperty( "http://schema.org/frequency" );
    
    /** <p>A sub property of location. The original location of the object or the agent 
     *  before the action.</p>
     */
    public static final OntProperty fromLocation = M_MODEL.createOntProperty( "http://schema.org/fromLocation" );
    
    /** <p>The capacity of the fuel tank or in the case of electric cars, the battery. 
     *  If there are multiple components for storage, this should indicate the total 
     *  of all storage of the same type.
     *  
     *  Typical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial 
     *  gallons, AMH for ampere-hours (for electrical vehicles).</p>
     */
    public static final OntProperty fuelCapacity = M_MODEL.createOntProperty( "http://schema.org/fuelCapacity" );
    
    /** <p>The amount of fuel consumed for traveling a particular distance or temporal 
     *  duration with the given vehicle (e.g. liters per 100 km).
     *  
     *  * Note 1: There are unfortunately no standard unit codes for liters per 100 
     *  km. Use [[unitText]] to indicate the unit of measurement, e.g. L/100 km.
     *  * Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] 
     *  (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). 
     *  They are reciprocal.
     *  * Note 3: Often, the absolute value is useful only when related to driving 
     *  speed ("at 80 km/h") or usage pattern ("city traffic"). You can use [[valueReference]] 
     *  to link the value for the fuel consumption to another value.</p>
     */
    public static final OntProperty fuelConsumption = M_MODEL.createOntProperty( "http://schema.org/fuelConsumption" );
    
    /** <p>The distance traveled per unit of fuel used; most commonly miles per gallon 
     *  (mpg) or kilometers per liter (km/L).
     *  
     *  * Note 1: There are unfortunately no standard unit codes for miles per gallon 
     *  or kilometers per liter. Use [[unitText]] to indicate the unit of measurement, 
     *  e.g. mpg or km/L.
     *  * Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] 
     *  (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). 
     *  They are reciprocal.
     *  * Note 3: Often, the absolute value is useful only when related to driving 
     *  speed ("at 80 km/h") or usage pattern ("city traffic"). You can use [[valueReference]] 
     *  to link the value for the fuel economy to another value.</p>
     */
    public static final OntProperty fuelEfficiency = M_MODEL.createOntProperty( "http://schema.org/fuelEfficiency" );
    
    /** <p>The type of fuel suitable for the engine or engines of the vehicle. If the 
     *  vehicle has only one engine, this property can be attached directly to the 
     *  vehicle.</p>
     */
    public static final OntProperty fuelType = M_MODEL.createOntProperty( "http://schema.org/fuelType" );
    
    /** <p>Type of fulfillment applicable to the [[ShippingService]].</p> */
    public static final OntProperty fulfillmentType = M_MODEL.createOntProperty( "http://schema.org/fulfillmentType" );
    
    /** <p>The degree of mobility the joint allows.</p> */
    public static final OntProperty functionalClass = M_MODEL.createOntProperty( "http://schema.org/functionalClass" );
    
    /** <p>Indicates something directly or indirectly funded or sponsored through a [[Grant]]. 
     *  See also [[ownershipFundingInfo]].</p>
     */
    public static final OntProperty fundedItem = M_MODEL.createOntProperty( "http://schema.org/fundedItem" );
    
    /** <p>A person or organization that supports (sponsors) something through some kind 
     *  of financial contribution.</p>
     */
    public static final OntProperty funder = M_MODEL.createOntProperty( "http://schema.org/funder" );
    
    /** <p>A [[Grant]] that directly or indirectly provide funding or sponsorship for 
     *  this item. See also [[ownershipFundingInfo]].</p>
     */
    public static final OntProperty funding = M_MODEL.createOntProperty( "http://schema.org/funding" );
    
    /** <p>Video game which is played on this server.</p> */
    public static final OntProperty game = M_MODEL.createOntProperty( "http://schema.org/game" );
    
    /** <p>Indicates the availability type of the game content associated with this action, 
     *  such as whether it is a full version or a demo.</p>
     */
    public static final OntProperty gameAvailabilityType = M_MODEL.createOntProperty( "http://schema.org/gameAvailabilityType" );
    
    /** <p>The edition of a video game.</p> */
    public static final OntProperty gameEdition = M_MODEL.createOntProperty( "http://schema.org/gameEdition" );
    
    /** <p>An item is an object within the game world that can be collected by a player 
     *  or, occasionally, a non-player character.</p>
     */
    public static final OntProperty gameItem = M_MODEL.createOntProperty( "http://schema.org/gameItem" );
    
    /** <p>Real or fictional location of the game (or part of game).</p> */
    public static final OntProperty gameLocation = M_MODEL.createOntProperty( "http://schema.org/gameLocation" );
    
    /** <p>The electronic systems used to play &lt;a href="http://en.wikipedia.org/wiki/Category:Video_game_platforms"&gt;video 
     *  games&lt;/a&gt;.</p>
     */
    public static final OntProperty gamePlatform = M_MODEL.createOntProperty( "http://schema.org/gamePlatform" );
    
    /** <p>The server on which it is possible to play the game.</p> */
    public static final OntProperty gameServer = M_MODEL.createOntProperty( "http://schema.org/gameServer" );
    
    /** <p>Links to tips, tactics, etc.</p> */
    public static final OntProperty gameTip = M_MODEL.createOntProperty( "http://schema.org/gameTip" );
    
    /** <p>Gender of something, typically a [[Person]], but possibly also fictional characters, 
     *  animals, etc. While http://schema.org/Male and http://schema.org/Female may 
     *  be used, text strings are also acceptable for people who do not identify as 
     *  a binary gender. The [[gender]] property can also be used in an extended sense 
     *  to cover e.g. the gender of sports teams. As with the gender of individuals, 
     *  we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] 
     *  can be indicated with a text value of "Mixed".</p>
     */
    public static final OntProperty gender = M_MODEL.createOntProperty( "http://schema.org/gender" );
    
    /** <p>Genre of the creative work, broadcast channel or group.</p> */
    public static final OntProperty genre = M_MODEL.createOntProperty( "http://schema.org/genre" );
    
    /** <p>The geo coordinates of the place.</p> */
    public static final OntProperty geo = M_MODEL.createOntProperty( "http://schema.org/geo" );
    
    /** <p>Represents a relationship between two geometries (or the places they represent), 
     *  relating a containing geometry to a contained geometry. "a contains b iff 
     *  no points of b lie in the exterior of a, and at least one point of the interior 
     *  of b lies in the interior of a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).</p>
     */
    public static final OntProperty geoContains = M_MODEL.createOntProperty( "http://schema.org/geoContains" );
    
    /** <p>Represents a relationship between two geometries (or the places they represent), 
     *  relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).</p>
     */
    public static final OntProperty geoCoveredBy = M_MODEL.createOntProperty( "http://schema.org/geoCoveredBy" );
    
    /** <p>Represents a relationship between two geometries (or the places they represent), 
     *  relating a covering geometry to a covered geometry. "Every point of b is a 
     *  point of (the interior or boundary of) a". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).</p>
     */
    public static final OntProperty geoCovers = M_MODEL.createOntProperty( "http://schema.org/geoCovers" );
    
    /** <p>Represents a relationship between two geometries (or the places they represent), 
     *  relating a geometry to another that crosses it: "a crosses b: they have some 
     *  but not all interior points in common, and the dimension of the intersection 
     *  is less than that of at least one of them". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).</p>
     */
    public static final OntProperty geoCrosses = M_MODEL.createOntProperty( "http://schema.org/geoCrosses" );
    
    /** <p>Represents spatial relations in which two geometries (or the places they represent) 
     *  are topologically disjoint: "they have no point in common. They form a set 
     *  of disconnected geometries." (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)</p>
     */
    public static final OntProperty geoDisjoint = M_MODEL.createOntProperty( "http://schema.org/geoDisjoint" );
    
    /** <p>Represents spatial relations in which two geometries (or the places they represent) 
     *  are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). 
     *  "Two geometries are topologically equal if their interiors intersect and no 
     *  part of the interior or boundary of one geometry intersects the exterior of 
     *  the other" (a symmetric relationship).</p>
     */
    public static final OntProperty geoEquals = M_MODEL.createOntProperty( "http://schema.org/geoEquals" );
    
    /** <p>Represents spatial relations in which two geometries (or the places they represent) 
     *  have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).</p>
     */
    public static final OntProperty geoIntersects = M_MODEL.createOntProperty( "http://schema.org/geoIntersects" );
    
    /** <p>Indicates the GeoCoordinates at the centre of a GeoShape, e.g. GeoCircle.</p> */
    public static final OntProperty geoMidpoint = M_MODEL.createOntProperty( "http://schema.org/geoMidpoint" );
    
    /** <p>Represents a relationship between two geometries (or the places they represent), 
     *  relating a geometry to another that geospatially overlaps it, i.e. they have 
     *  some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).</p>
     */
    public static final OntProperty geoOverlaps = M_MODEL.createOntProperty( "http://schema.org/geoOverlaps" );
    
    /** <p>Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise 
     *  via Distance notation).</p>
     */
    public static final OntProperty geoRadius = M_MODEL.createOntProperty( "http://schema.org/geoRadius" );
    
    /** <p>Represents spatial relations in which two geometries (or the places they represent) 
     *  touch: "they have at least one boundary point in common, but no interior points." 
     *  (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)</p>
     */
    public static final OntProperty geoTouches = M_MODEL.createOntProperty( "http://schema.org/geoTouches" );
    
    /** <p>Represents a relationship between two geometries (or the places they represent), 
     *  relating a geometry to one that contains it, i.e. it is inside (i.e. within) 
     *  its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).</p>
     */
    public static final OntProperty geoWithin = M_MODEL.createOntProperty( "http://schema.org/geoWithin" );
    
    /** <p>The geographic area associated with the audience.</p> */
    public static final OntProperty geographicArea = M_MODEL.createOntProperty( "http://schema.org/geographicArea" );
    
    /** <p>Information about getting tested (for a [[MedicalCondition]]), e.g. in the 
     *  context of a pandemic.</p>
     */
    public static final OntProperty gettingTestedInfo = M_MODEL.createOntProperty( "http://schema.org/gettingTestedInfo" );
    
    /** <p>Given name. In the U.S., the first name of a Person.</p> */
    public static final OntProperty givenName = M_MODEL.createOntProperty( "http://schema.org/givenName" );
    
    /** <p>The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also 
     *  referred to as International Location Number or ILN) of the respective organization, 
     *  person, or place. The GLN is a 13-digit number used to identify parties and 
     *  physical locations.</p>
     */
    public static final OntProperty globalLocationNumber = M_MODEL.createOntProperty( "http://schema.org/globalLocationNumber" );
    
    /** <p>governmentBenefitsInfo provides information about government benefits associated 
     *  with a SpecialAnnouncement.</p>
     */
    public static final OntProperty governmentBenefitsInfo = M_MODEL.createOntProperty( "http://schema.org/governmentBenefitsInfo" );
    
    /** <p>The period of time after any due date that the borrower has to fulfil its 
     *  obligations before a default (failure to pay) is deemed to have occurred.</p>
     */
    public static final OntProperty gracePeriod = M_MODEL.createOntProperty( "http://schema.org/gracePeriod" );
    
    /** <p>The person, organization, contact point, or audience that has been granted 
     *  this permission.</p>
     */
    public static final OntProperty grantee = M_MODEL.createOntProperty( "http://schema.org/grantee" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  greater than the object.</p>
     */
    public static final OntProperty greater = M_MODEL.createOntProperty( "http://schema.org/greater" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  greater than or equal to the object.</p>
     */
    public static final OntProperty greaterOrEqual = M_MODEL.createOntProperty( "http://schema.org/greaterOrEqual" );
    
    /** <p>A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). 
     *  GTINs identify trade items, including products and services, using numeric 
     *  identification codes. A correct [[gtin]] value should be a valid GTIN, which 
     *  means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, 
     *  or a "GS1 Digital Link" URL based on such a string. The numeric component 
     *  should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) 
     *  and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) 
     *  and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for 
     *  more details. Left-padding of the gtin values is not required or encouraged. 
     *  The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], 
     *  and [[gtin14]] properties. The GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) 
     *  expresses GTINs as URLs (URIs, IRIs, etc.). Digital Links should be populated 
     *  into the [[hasGS1DigitalLink]] attribute. Note also that this is a definition 
     *  for how to include GTINs in Schema.org data, and not a definition of GTINs 
     *  in general - see the GS1 documentation for authoritative details.</p>
     */
    public static final OntProperty gtin = M_MODEL.createOntProperty( "http://schema.org/gtin" );
    
    /** <p>The GTIN-12 code of the product, or the product to which the offer refers. 
     *  The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company 
     *  Prefix, Item Reference, and Check Digit used to identify trade items. See 
     *  [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for 
     *  more details.</p>
     */
    public static final OntProperty gtin12 = M_MODEL.createOntProperty( "http://schema.org/gtin12" );
    
    /** <p>The GTIN-13 code of the product, or the product to which the offer refers. 
     *  This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit 
     *  UPC codes can be converted into a GTIN-13 code by simply adding a preceding 
     *  zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) 
     *  for more details.</p>
     */
    public static final OntProperty gtin13 = M_MODEL.createOntProperty( "http://schema.org/gtin13" );
    
    /** <p>The GTIN-14 code of the product, or the product to which the offer refers. 
     *  See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) 
     *  for more details.</p>
     */
    public static final OntProperty gtin14 = M_MODEL.createOntProperty( "http://schema.org/gtin14" );
    
    /** <p>The GTIN-8 code of the product, or the product to which the offer refers. 
     *  This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) 
     *  for more details.</p>
     */
    public static final OntProperty gtin8 = M_MODEL.createOntProperty( "http://schema.org/gtin8" );
    
    /** <p>A medical guideline related to this entity.</p> */
    public static final OntProperty guideline = M_MODEL.createOntProperty( "http://schema.org/guideline" );
    
    /** <p>Date on which this guideline's recommendation was made.</p> */
    public static final OntProperty guidelineDate = M_MODEL.createOntProperty( "http://schema.org/guidelineDate" );
    
    /** <p>The medical conditions, treatments, etc. that are the subject of the guideline.</p> */
    public static final OntProperty guidelineSubject = M_MODEL.createOntProperty( "http://schema.org/guidelineSubject" );
    
    /** <p>The typical delay between the receipt of the order and the goods either leaving 
     *  the warehouse or being prepared for pickup, in case the delivery method is 
     *  on site pickup. In the context of [[ShippingDeliveryTime]], Typical properties: 
     *  minValue, maxValue, unitCode (d for DAY). This is by common convention assumed 
     *  to mean business days (if a unitCode is used, coded as "d"), i.e. only counting 
     *  days when the business normally operates. In the context of [[ShippingService]], 
     *  use the [[ServicePeriod]] format, that contains the same information in a 
     *  structured form, with cut-off time, business days and duration.</p>
     */
    public static final OntProperty handlingTime = M_MODEL.createOntProperty( "http://schema.org/handlingTime" );
    
    /** <p>Used to tag an item to be intended or suitable for consumption or use by adults 
     *  only.</p>
     */
    public static final OntProperty hasAdultConsideration = M_MODEL.createOntProperty( "http://schema.org/hasAdultConsideration" );
    
    /** <p>Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a 
     *  part.</p>
     */
    public static final OntProperty hasBioChemEntityPart = M_MODEL.createOntProperty( "http://schema.org/hasBioChemEntityPart" );
    
    /** <p>A symbolic representation of a BioChemEntity. For example, a nucleotide sequence 
     *  of a Gene or an amino acid sequence of a Protein.</p>
     */
    public static final OntProperty hasBioPolymerSequence = M_MODEL.createOntProperty( "http://schema.org/hasBioPolymerSequence" );
    
    /** <p>A broadcast channel of a broadcast service.</p> */
    public static final OntProperty hasBroadcastChannel = M_MODEL.createOntProperty( "http://schema.org/hasBroadcastChannel" );
    
    /** <p>A Category code contained in this code set.</p> */
    public static final OntProperty hasCategoryCode = M_MODEL.createOntProperty( "http://schema.org/hasCategoryCode" );
    
    /** <p>Certification information about a product, organization, service, place, or 
     *  person.</p>
     */
    public static final OntProperty hasCertification = M_MODEL.createOntProperty( "http://schema.org/hasCertification" );
    
    /** <p>A course or class that is one of the learning opportunities that constitute 
     *  an educational / occupational program. No information is implied about whether 
     *  the course is mandatory or optional; no guarantee is implied about whether 
     *  the course will be available to everyone on the program.</p>
     */
    public static final OntProperty hasCourse = M_MODEL.createOntProperty( "http://schema.org/hasCourse" );
    
    /** <p>An offering of the course at a specific time and place or through specific 
     *  media or mode of study or to a specific section of students.</p>
     */
    public static final OntProperty hasCourseInstance = M_MODEL.createOntProperty( "http://schema.org/hasCourseInstance" );
    
    /** <p>A credential awarded to the Person or Organization.</p> */
    public static final OntProperty hasCredential = M_MODEL.createOntProperty( "http://schema.org/hasCredential" );
    
    /** <p>A Defined Term contained in this term set.</p> */
    public static final OntProperty hasDefinedTerm = M_MODEL.createOntProperty( "http://schema.org/hasDefinedTerm" );
    
    /** <p>Method used for delivery or shipping.</p> */
    public static final OntProperty hasDeliveryMethod = M_MODEL.createOntProperty( "http://schema.org/hasDeliveryMethod" );
    
    /** <p>A permission related to the access to this document (e.g. permission to read 
     *  or write an electronic document). For a public document, specify a grantee 
     *  with an Audience with audienceType equal to "public".</p>
     */
    public static final OntProperty hasDigitalDocumentPermission = M_MODEL.createOntProperty( "http://schema.org/hasDigitalDocumentPermission" );
    
    /** <p>Indicates whether some facility (e.g. [[FoodEstablishment]], [[CovidTestingFacility]]) 
     *  offers a service that can be used by driving through in a car. In the case 
     *  of [[CovidTestingFacility]] such facilities could potentially help with social 
     *  distancing from other potentially-infected users.</p>
     */
    public static final OntProperty hasDriveThroughService = M_MODEL.createOntProperty( "http://schema.org/hasDriveThroughService" );
    
    /** <p>Defines the energy efficiency Category (also known as "class" or "rating") 
     *  for a product according to an international energy efficiency standard.</p>
     */
    public static final OntProperty hasEnergyConsumptionDetails = M_MODEL.createOntProperty( "http://schema.org/hasEnergyConsumptionDetails" );
    
    /** <p>Defines the energy efficiency Category (which could be either a rating out 
     *  of range of values or a yes/no certification) for a product according to an 
     *  international energy efficiency standard.</p>
     */
    public static final OntProperty hasEnergyEfficiencyCategory = M_MODEL.createOntProperty( "http://schema.org/hasEnergyEfficiencyCategory" );
    
    /** <p>The &lt;a href="https://www.gs1.org/standards/gs1-digital-link"&gt;GS1 digital 
     *  link&lt;/a&gt; associated with the object. This URL should conform to the 
     *  particular requirements of digital links. The link should only contain the 
     *  Application Identifiers (AIs) that are relevant for the entity being annotated, 
     *  for instance a [[Product]] or an [[Organization]], and for the correct granularity. 
     *  In particular, for products:&lt;ul&gt;&lt;li&gt;A Digital Link that contains 
     *  a serial number (AI &lt;code&gt;21&lt;/code&gt;) should only be present on 
     *  instances of [[IndividualProduct]]&lt;/li&gt;&lt;li&gt;A Digital Link that 
     *  contains a lot number (AI &lt;code&gt;10&lt;/code&gt;) should be annotated 
     *  as [[SomeProduct]] if only products from that lot are sold, or [[IndividualProduct]] 
     *  if there is only a specific product.&lt;/li&gt;&lt;li&gt;A Digital Link that 
     *  contains a global model number (AI &lt;code&gt;8013&lt;/code&gt;) should be 
     *  attached to a [[Product]] or a [[ProductModel]].&lt;/li&gt;&lt;/ul&gt; Other 
     *  item types should be adapted similarly.</p>
     */
    public static final OntProperty hasGS1DigitalLink = M_MODEL.createOntProperty( "http://schema.org/hasGS1DigitalLink" );
    
    /** <p>Indicates the aspect or aspects specifically addressed in some [[HealthTopicContent]]. 
     *  For example, that the content is an overview, or that it talks about treatment, 
     *  self-care, treatments or their side-effects.</p>
     */
    public static final OntProperty hasHealthAspect = M_MODEL.createOntProperty( "http://schema.org/hasHealthAspect" );
    
    /** <p>A URL to a map of the place.</p> */
    public static final OntProperty hasMap = M_MODEL.createOntProperty( "http://schema.org/hasMap" );
    
    /** <p>A measurement of an item, For example, the inseam of pants, the wheel size 
     *  of a bicycle, the gauge of a screw, or the carbon footprint measured for certification 
     *  by an authority. Usually an exact measurement, but can also be a range of 
     *  measurements for adjustable products, for example belts and ski bindings.</p>
     */
    public static final OntProperty hasMeasurement = M_MODEL.createOntProperty( "http://schema.org/hasMeasurement" );
    
    /** <p>MemberProgram offered by an Organization, for example an eCommerce merchant 
     *  or an airline.</p>
     */
    public static final OntProperty hasMemberProgram = M_MODEL.createOntProperty( "http://schema.org/hasMemberProgram" );
    
    /** <p>Either the actual menu as a structured representation, as text, or a URL of 
     *  the menu.</p>
     */
    public static final OntProperty hasMenu = M_MODEL.createOntProperty( "http://schema.org/hasMenu" );
    
    /** <p>A food or drink item contained in a menu or menu section.</p> */
    public static final OntProperty hasMenuItem = M_MODEL.createOntProperty( "http://schema.org/hasMenuItem" );
    
    /** <p>A subgrouping of the menu (by dishes, course, serving time period, etc.).</p> */
    public static final OntProperty hasMenuSection = M_MODEL.createOntProperty( "http://schema.org/hasMenuSection" );
    
    /** <p>Specifies a MerchantReturnPolicy that may be applicable.</p> */
    public static final OntProperty hasMerchantReturnPolicy = M_MODEL.createOntProperty( "http://schema.org/hasMerchantReturnPolicy" );
    
    /** <p>Molecular function performed by this BioChemEntity; please use PropertyValue 
     *  if you want to include any evidence.</p>
     */
    public static final OntProperty hasMolecularFunction = M_MODEL.createOntProperty( "http://schema.org/hasMolecularFunction" );
    
    /** <p>The Person's occupation. For past professions, use Role for expressing dates.</p> */
    public static final OntProperty hasOccupation = M_MODEL.createOntProperty( "http://schema.org/hasOccupation" );
    
    /** <p>Indicates an OfferCatalog listing for this Organization, Person, or Service.</p> */
    public static final OntProperty hasOfferCatalog = M_MODEL.createOntProperty( "http://schema.org/hasOfferCatalog" );
    
    /** <p>Points-of-Sales operated by the organization or person.</p> */
    public static final OntProperty hasPOS = M_MODEL.createOntProperty( "http://schema.org/hasPOS" );
    
    /** <p>Indicates an item or CreativeWork that is part of this item, or CreativeWork 
     *  (in some sense).</p>
     */
    public static final OntProperty hasPart = M_MODEL.createOntProperty( "http://schema.org/hasPart" );
    
    /** <p>A common representation such as a protein sequence or chemical structure for 
     *  this entity. For images use schema.org/image.</p>
     */
    public static final OntProperty hasRepresentation = M_MODEL.createOntProperty( "http://schema.org/hasRepresentation" );
    
    /** <p>Specification of a shipping service offered by the organization.</p> */
    public static final OntProperty hasShippingService = M_MODEL.createOntProperty( "http://schema.org/hasShippingService" );
    
    /** <p>A member benefit for a particular tier of a loyalty program.</p> */
    public static final OntProperty hasTierBenefit = M_MODEL.createOntProperty( "http://schema.org/hasTierBenefit" );
    
    /** <p>A requirement for a user to join a membership tier, for example: a CreditCard 
     *  if the tier requires sign up for a credit card, A UnitPriceSpecification if 
     *  the user is required to pay a (periodic) fee, or a MonetaryAmount if the user 
     *  needs to spend a minimum amount to join the tier. If a tier is free to join 
     *  then this property does not need to be specified.</p>
     */
    public static final OntProperty hasTierRequirement = M_MODEL.createOntProperty( "http://schema.org/hasTierRequirement" );
    
    /** <p>The tiers of a member program.</p> */
    public static final OntProperty hasTiers = M_MODEL.createOntProperty( "http://schema.org/hasTiers" );
    
    /** <p>Indicates a [[Product]] that is a member of this [[ProductGroup]] (or [[ProductModel]]).</p> */
    public static final OntProperty hasVariant = M_MODEL.createOntProperty( "http://schema.org/hasVariant" );
    
    /** <p>Headline of the article.</p> */
    public static final OntProperty headline = M_MODEL.createOntProperty( "http://schema.org/headline" );
    
    /** <p>Specifying the health condition(s) of a patient, medical study, or other target 
     *  audience.</p>
     */
    public static final OntProperty healthCondition = M_MODEL.createOntProperty( "http://schema.org/healthCondition" );
    
    /** <p>Whether the coinsurance applies before or after deductible, etc. TODO: Is 
     *  this a closed set?</p>
     */
    public static final OntProperty healthPlanCoinsuranceOption = M_MODEL.createOntProperty( "http://schema.org/healthPlanCoinsuranceOption" );
    
    /** <p>The rate of coinsurance expressed as a number between 0.0 and 1.0.</p> */
    public static final OntProperty healthPlanCoinsuranceRate = M_MODEL.createOntProperty( "http://schema.org/healthPlanCoinsuranceRate" );
    
    /** <p>The copay amount.</p> */
    public static final OntProperty healthPlanCopay = M_MODEL.createOntProperty( "http://schema.org/healthPlanCopay" );
    
    /** <p>Whether the copay is before or after deductible, etc. TODO: Is this a closed 
     *  set?</p>
     */
    public static final OntProperty healthPlanCopayOption = M_MODEL.createOntProperty( "http://schema.org/healthPlanCopayOption" );
    
    /** <p>The costs to the patient for services under this network or formulary.</p> */
    public static final OntProperty healthPlanCostSharing = M_MODEL.createOntProperty( "http://schema.org/healthPlanCostSharing" );
    
    /** <p>TODO.</p> */
    public static final OntProperty healthPlanDrugOption = M_MODEL.createOntProperty( "http://schema.org/healthPlanDrugOption" );
    
    /** <p>The tier(s) of drugs offered by this formulary or insurance plan.</p> */
    public static final OntProperty healthPlanDrugTier = M_MODEL.createOntProperty( "http://schema.org/healthPlanDrugTier" );
    
    /** <p>The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, 
     *  even across different markets.)</p>
     */
    public static final OntProperty healthPlanId = M_MODEL.createOntProperty( "http://schema.org/healthPlanId" );
    
    /** <p>The URL that goes directly to the plan brochure for the specific standard 
     *  plan or plan variation.</p>
     */
    public static final OntProperty healthPlanMarketingUrl = M_MODEL.createOntProperty( "http://schema.org/healthPlanMarketingUrl" );
    
    /** <p>Name or unique ID of network. (Networks are often reused across different 
     *  insurance plans.)</p>
     */
    public static final OntProperty healthPlanNetworkId = M_MODEL.createOntProperty( "http://schema.org/healthPlanNetworkId" );
    
    /** <p>The tier(s) for this network.</p> */
    public static final OntProperty healthPlanNetworkTier = M_MODEL.createOntProperty( "http://schema.org/healthPlanNetworkTier" );
    
    /** <p>The category or type of pharmacy associated with this cost sharing.</p> */
    public static final OntProperty healthPlanPharmacyCategory = M_MODEL.createOntProperty( "http://schema.org/healthPlanPharmacyCategory" );
    
    /** <p>Indicates data describing a hospital, e.g. a CDC [[CDCPMDRecord]] or as some 
     *  kind of [[Dataset]].</p>
     */
    public static final OntProperty healthcareReportingData = M_MODEL.createOntProperty( "http://schema.org/healthcareReportingData" );
    
    /** <p>The height of the item.</p> */
    public static final OntProperty height = M_MODEL.createOntProperty( "http://schema.org/height" );
    
    /** <p>The highest price of all offers available.
     *  
     *  Usage guidelines:
     *  
     *  * Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' 
     *  (U+0039)) rather than superficially similar Unicode symbols.
     *  * Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal 
     *  point. Avoid using these symbols as a readability separator.</p>
     */
    public static final OntProperty highPrice = M_MODEL.createOntProperty( "http://schema.org/highPrice" );
    
    /** <p>Organization or Person offering the job position.</p> */
    public static final OntProperty hiringOrganization = M_MODEL.createOntProperty( "http://schema.org/hiringOrganization" );
    
    /** <p>[[ArchiveOrganization]] that holds, keeps or maintains the [[ArchiveComponent]].</p> */
    public static final OntProperty holdingArchive = M_MODEL.createOntProperty( "http://schema.org/holdingArchive" );
    
    /** <p>A contact location for a person's residence.</p> */
    public static final OntProperty homeLocation = M_MODEL.createOntProperty( "http://schema.org/homeLocation" );
    
    /** <p>The home team in a sports event.</p> */
    public static final OntProperty homeTeam = M_MODEL.createOntProperty( "http://schema.org/homeTeam" );
    
    /** <p>An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.</p> */
    public static final OntProperty honorificPrefix = M_MODEL.createOntProperty( "http://schema.org/honorificPrefix" );
    
    /** <p>An honorific suffix following a Person's name such as M.D./PhD/MSCSW.</p> */
    public static final OntProperty honorificSuffix = M_MODEL.createOntProperty( "http://schema.org/honorificSuffix" );
    
    /** <p>A hospital with which the physician or office is affiliated.</p> */
    public static final OntProperty hospitalAffiliation = M_MODEL.createOntProperty( "http://schema.org/hospitalAffiliation" );
    
    /** <p>The Organization (airline, travelers' club, retailer, etc.) the membership 
     *  is made with or which offers the MemberProgram.</p>
     */
    public static final OntProperty hostingOrganization = M_MODEL.createOntProperty( "http://schema.org/hostingOrganization" );
    
    /** <p>The hours during which this service or contact is available.</p> */
    public static final OntProperty hoursAvailable = M_MODEL.createOntProperty( "http://schema.org/hoursAvailable" );
    
    /** <p>How the procedure is performed.</p> */
    public static final OntProperty howPerformed = M_MODEL.createOntProperty( "http://schema.org/howPerformed" );
    
    /** <p>An HTTP method that specifies the appropriate HTTP method for a request to 
     *  an HTTP EntryPoint. Values are capitalized strings as used in HTTP.</p>
     */
    public static final OntProperty httpMethod = M_MODEL.createOntProperty( "http://schema.org/httpMethod" );
    
    /** <p>IATA identifier for an airline or airport.</p> */
    public static final OntProperty iataCode = M_MODEL.createOntProperty( "http://schema.org/iataCode" );
    
    /** <p>ICAO identifier for an airport.</p> */
    public static final OntProperty icaoCode = M_MODEL.createOntProperty( "http://schema.org/icaoCode" );
    
    /** <p>The identifier property represents any kind of identifier for any kind of 
     *  [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated 
     *  properties for representing many of these, either as textual strings or as 
     *  URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) 
     *  for more details.</p>
     */
    public static final OntProperty identifier_PROP = M_MODEL.createOntProperty( "http://schema.org/identifier" );
    
    /** <p>A physical examination that can identify this sign.</p> */
    public static final OntProperty identifyingExam = M_MODEL.createOntProperty( "http://schema.org/identifyingExam" );
    
    /** <p>A diagnostic test that can identify this sign.</p> */
    public static final OntProperty identifyingTest = M_MODEL.createOntProperty( "http://schema.org/identifyingTest" );
    
    /** <p>The illustrator of the book.</p> */
    public static final OntProperty illustrator = M_MODEL.createOntProperty( "http://schema.org/illustrator" );
    
    /** <p>An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].</p> */
    public static final OntProperty image = M_MODEL.createOntProperty( "http://schema.org/image" );
    
    /** <p>Imaging technique used.</p> */
    public static final OntProperty imagingTechnique = M_MODEL.createOntProperty( "http://schema.org/imagingTechnique" );
    
    /** <p>The album to which this recording belongs.</p> */
    public static final OntProperty inAlbum = M_MODEL.createOntProperty( "http://schema.org/inAlbum" );
    
    /** <p>The CableOrSatelliteService offering the channel.</p> */
    public static final OntProperty inBroadcastLineup = M_MODEL.createOntProperty( "http://schema.org/inBroadcastLineup" );
    
    /** <p>Non-proprietary identifier for molecular entity that can be used in printed 
     *  and electronic data sources thus enabling easier linking of diverse data compilations.</p>
     */
    public static final OntProperty inChI = M_MODEL.createOntProperty( "http://schema.org/inChI" );
    
    /** <p>InChIKey is a hashed version of the full InChI (using the SHA-256 algorithm).</p> */
    public static final OntProperty inChIKey = M_MODEL.createOntProperty( "http://schema.org/inChIKey" );
    
    /** <p>A [[CategoryCodeSet]] that contains this category code.</p> */
    public static final OntProperty inCodeSet = M_MODEL.createOntProperty( "http://schema.org/inCodeSet" );
    
    /** <p>A [[DefinedTermSet]] that contains this term.</p> */
    public static final OntProperty inDefinedTermSet = M_MODEL.createOntProperty( "http://schema.org/inDefinedTermSet" );
    
    /** <p>The language of the content or performance or used in an action. Please use 
     *  one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). 
     *  See also [[availableLanguage]].</p>
     */
    public static final OntProperty inLanguage = M_MODEL.createOntProperty( "http://schema.org/inLanguage" );
    
    /** <p>The playlist to which this recording belongs.</p> */
    public static final OntProperty inPlaylist = M_MODEL.createOntProperty( "http://schema.org/inPlaylist" );
    
    /** <p>Indicates the [[productGroupID]] for a [[ProductGroup]] that this product 
     *  [[isVariantOf]].</p>
     */
    public static final OntProperty inProductGroupWithID = M_MODEL.createOntProperty( "http://schema.org/inProductGroupWithID" );
    
    /** <p>Are in-store returns offered? (For more advanced return methods use the [[returnMethod]] 
     *  property.)</p>
     */
    public static final OntProperty inStoreReturnsOffered = M_MODEL.createOntProperty( "http://schema.org/inStoreReturnsOffered" );
    
    /** <p>Qualification, candidature, degree, application that Thesis supports.</p> */
    public static final OntProperty inSupportOf = M_MODEL.createOntProperty( "http://schema.org/inSupportOf" );
    
    /** <p>Describes the amount that can be redeemed from this incentive. &lt;p&gt;[[QuantitativeValue]]: 
     *  Use this for incentives based on price (either raw amount or percentage-based). 
     *  For a raw amount example, "You can claim $2,500 - $7,500 from the total cost 
     *  of installation" would be represented as the following:&lt;/p&gt; { "@type": 
     *  "QuantitativeValue", “minValue”: 2500, “maxValue”: 7500, "unitCode": "USD" 
     *  } &lt;p&gt;[[QuantitivateValue]] can also be used for percentage amounts. 
     *  In such cases, value is used to represent the incentive’s percentage, while 
     *  maxValue represents a limit (if one exists) to that incentive. The unitCode 
     *  should be 'P1' and the unitText should be '%', while valueReference should 
     *  be used for holding the currency type. For example, "You can claim up to 30% 
     *  of the total cost of installation, up to a maximum of $7,500" would be:&lt;/p&gt; 
     *  { "@type": "QuantitativeValue", "value": 30, "unitCode": "P1", "unitText": 
     *  "%", “maxValue”: 7500, “valueReference”: “USD” } &lt;p&gt;[[UnitPriceSpecification]]: 
     *  Use this for incentives that are based on amounts rather than price. For example, 
     *  a net metering rebate that pays $10/kWh, up to $1,000:&lt;/p&gt; { "@type": 
     *  "UnitPriceSpecification", "price": 10, "priceCurrency": "USD", "referenceQuantity": 
     *  1, "unitCode": "DO3", "unitText": "kw/h", "maxPrice": 1000, "description": 
     *  "$10 / kwh up to $1000" } &lt;p&gt;[[LoanOrCredit]]: Use for incentives that 
     *  are loan based. For example, a loan of $4,000 - $50,000 with a repayment term 
     *  of 10 years, interest free would look like:&lt;/p&gt; { "@type": "LoanOrCredit", 
     *  "loanTerm": { "@type":"QuantitativeValue", "value":"10", "unitCode": "ANN" 
     *  }, "amount":[ { "@type": "QuantitativeValue", "Name":"fixed interest rate", 
     *  "value":"0", }, ], "amount":[ { "@type": "MonetaryAmount", "Name":"min loan 
     *  amount", "value":"4000", "currency":"CAD" }, { "@type": "MonetaryAmount", 
     *  "Name":"max loan amount", "value":"50000", "currency":"CAD" } ], } In summary: 
     *  &lt;ul&gt;&lt;li&gt;Use [[QuantitativeValue]] for absolute/percentage-based 
     *  incentives applied on the price of a good/service.&lt;/li&gt; &lt;li&gt;Use 
     *  [[UnitPriceSpecification]] for incentives based on a per-unit basis (e.g. 
     *  net metering).&lt;/li&gt; &lt;li&gt;Use [[LoanOrCredit]] for loans/credits.&lt;/li&gt; 
     *  &lt;/ul&gt;.</p>
     */
    public static final OntProperty incentiveAmount = M_MODEL.createOntProperty( "http://schema.org/incentiveAmount" );
    
    /** <p>Description of bonus and commission compensation aspects of the job.</p> */
    public static final OntProperty incentiveCompensation = M_MODEL.createOntProperty( "http://schema.org/incentiveCompensation" );
    
    /** <p>The status of the incentive (active, on hold, retired, etc.).</p> */
    public static final OntProperty incentiveStatus = M_MODEL.createOntProperty( "http://schema.org/incentiveStatus" );
    
    /** <p>The type of incentive offered (tax credit/rebate, tax deduction, tax waiver, 
     *  subsidies, etc.).</p>
     */
    public static final OntProperty incentiveType = M_MODEL.createOntProperty( "http://schema.org/incentiveType" );
    
    /** <p>Description of bonus and commission compensation aspects of the job.</p> */
    public static final OntProperty incentives = M_MODEL.createOntProperty( "http://schema.org/incentives" );
    
    /** <p>The type or specific product(s) and/or service(s) being incentivized. &lt;p&gt;DefinedTermSets 
     *  are used for product and service categories such as the United Nations Standard 
     *  Products and Services Code:&lt;/p&gt; { "@type": "DefinedTerm", "inDefinedTermSet": 
     *  "https://www.unspsc.org/", "termCode": "261315XX", "name": "Photovoltaic module" 
     *  } &lt;p&gt;For a specific product or service, use the Product type:&lt;/p&gt; 
     *  { "@type": "Product", "name": "Kenmore White 17" Microwave", } For multiple 
     *  different incentivized items, use multiple [[DefinedTerm]] or [[Product]].</p>
     */
    public static final OntProperty incentivizedItem = M_MODEL.createOntProperty( "http://schema.org/incentivizedItem" );
    
    /** <p>Smaller compositions included in this work (e.g. a movement in a symphony).</p> */
    public static final OntProperty includedComposition = M_MODEL.createOntProperty( "http://schema.org/includedComposition" );
    
    /** <p>A data catalog which contains this dataset (this property was previously 'catalog', 
     *  preferred name is now 'includedInDataCatalog').</p>
     */
    public static final OntProperty includedDataCatalog = M_MODEL.createOntProperty( "http://schema.org/includedDataCatalog" );
    
    /** <p>A data catalog which contains this dataset.</p> */
    public static final OntProperty includedInDataCatalog = M_MODEL.createOntProperty( "http://schema.org/includedInDataCatalog" );
    
    /** <p>The insurance plans that cover this drug.</p> */
    public static final OntProperty includedInHealthInsurancePlan = M_MODEL.createOntProperty( "http://schema.org/includedInHealthInsurancePlan" );
    
    /** <p>A modifiable or non-modifiable risk factor included in the calculation, e.g. 
     *  age, coexisting condition.</p>
     */
    public static final OntProperty includedRiskFactor = M_MODEL.createOntProperty( "http://schema.org/includedRiskFactor" );
    
    /** <p>Attraction located at destination.</p> */
    public static final OntProperty includesAttraction = M_MODEL.createOntProperty( "http://schema.org/includesAttraction" );
    
    /** <p>Formularies covered by this plan.</p> */
    public static final OntProperty includesHealthPlanFormulary = M_MODEL.createOntProperty( "http://schema.org/includesHealthPlanFormulary" );
    
    /** <p>Networks covered by this plan.</p> */
    public static final OntProperty includesHealthPlanNetwork = M_MODEL.createOntProperty( "http://schema.org/includesHealthPlanNetwork" );
    
    /** <p>This links to a node or nodes indicating the exact quantity of the products 
     *  included in an [[Offer]] or [[ProductCollection]].</p>
     */
    public static final OntProperty includesObject = M_MODEL.createOntProperty( "http://schema.org/includesObject" );
    
    /** <p>Optional. Income limit for which the incentive is applicable for. &lt;p&gt;If 
     *  MonetaryAmount is specified, this should be based on annualized income (e.g. 
     *  if an incentive is limited to those making &lt;$114,000 annually):&lt;/p&gt; 
     *  { "@type": "MonetaryAmount", "maxValue": 114000, "currency": "USD", } Use 
     *  Text for incentives that are limited based on other criteria, for example 
     *  if an incentive is only available to recipients making 120% of the median 
     *  poverty income in their area.</p>
     */
    public static final OntProperty incomeLimit = M_MODEL.createOntProperty( "http://schema.org/incomeLimit" );
    
    /** <p>The condition, complication, etc. influenced by this factor.</p> */
    public static final OntProperty increasesRiskOf = M_MODEL.createOntProperty( "http://schema.org/increasesRiskOf" );
    
    /** <p>The industry associated with the job position.</p> */
    public static final OntProperty industry = M_MODEL.createOntProperty( "http://schema.org/industry" );
    
    /** <p>The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the 
     *  GeoShape for the geo-political region(s) for which the offer or delivery charge 
     *  specification is not valid, e.g. a region where the transaction is not allowed.
     *  
     *  See also [[eligibleRegion]].</p>
     */
    public static final OntProperty ineligibleRegion = M_MODEL.createOntProperty( "http://schema.org/ineligibleRegion" );
    
    /** <p>The actual infectious agent, such as a specific bacterium.</p> */
    public static final OntProperty infectiousAgent = M_MODEL.createOntProperty( "http://schema.org/infectiousAgent" );
    
    /** <p>The class of infectious agent (bacteria, prion, etc.) that causes the disease.</p> */
    public static final OntProperty infectiousAgentClass = M_MODEL.createOntProperty( "http://schema.org/infectiousAgentClass" );
    
    /** <p>A single ingredient used in the recipe, e.g. sugar, flour or garlic.</p> */
    public static final OntProperty ingredients = M_MODEL.createOntProperty( "http://schema.org/ingredients" );
    
    /** <p>The individual who traces over the pencil drawings in ink after pencils are 
     *  complete.</p>
     */
    public static final OntProperty inker = M_MODEL.createOntProperty( "http://schema.org/inker" );
    
    /** <p>The place of attachment of a muscle, or what the muscle moves.</p> */
    public static final OntProperty insertion = M_MODEL.createOntProperty( "http://schema.org/insertion" );
    
    /** <p>URL at which the app may be installed, if different from the URL of the item.</p> */
    public static final OntProperty installUrl = M_MODEL.createOntProperty( "http://schema.org/installUrl" );
    
    /** <p>A person assigned to instruct or provide instructional assistance for the 
     *  [[CourseInstance]].</p>
     */
    public static final OntProperty instructor = M_MODEL.createOntProperty( "http://schema.org/instructor" );
    
    /** <p>The object that helped the agent perform the action. E.g. John wrote a book 
     *  with *a pen*.</p>
     */
    public static final OntProperty instrument = M_MODEL.createOntProperty( "http://schema.org/instrument" );
    
    /** <p>Quantitative measure gauging the degree of force involved in the exercise, 
     *  for example, heartbeats per minute. May include the velocity of the movement.</p>
     */
    public static final OntProperty intensity = M_MODEL.createOntProperty( "http://schema.org/intensity" );
    
    /** <p>Another drug that is known to interact with this drug in a way that impacts 
     *  the effect of this drug or causes a risk to the patient. Note: disease interactions 
     *  are typically captured as contraindications.</p>
     */
    public static final OntProperty interactingDrug = M_MODEL.createOntProperty( "http://schema.org/interactingDrug" );
    
    /** <p>This property is deprecated, alongside the UserInteraction types on which 
     *  it depended.</p>
     */
    public static final OntProperty interactionCount = M_MODEL.createOntProperty( "http://schema.org/interactionCount" );
    
    /** <p>The WebSite or SoftwareApplication where the interactions took place.</p> */
    public static final OntProperty interactionService = M_MODEL.createOntProperty( "http://schema.org/interactionService" );
    
    /** <p>The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. 
     *  The most specific child type of InteractionCounter should be used.</p>
     */
    public static final OntProperty interactionStatistic = M_MODEL.createOntProperty( "http://schema.org/interactionStatistic" );
    
    /** <p>The Action representing the type of interaction. For up votes, +1s, etc. use 
     *  [[LikeAction]]. For down votes use [[DislikeAction]]. Otherwise, use the most 
     *  specific Action.</p>
     */
    public static final OntProperty interactionType = M_MODEL.createOntProperty( "http://schema.org/interactionType" );
    
    /** <p>The predominant mode of learning supported by the learning resource. Acceptable 
     *  values are 'active', 'expositive', or 'mixed'.</p>
     */
    public static final OntProperty interactivityType = M_MODEL.createOntProperty( "http://schema.org/interactivityType" );
    
    /** <p>The interest rate, charged or paid, applicable to the financial product. Note: 
     *  This is different from the calculated annualPercentageRate.</p>
     */
    public static final OntProperty interestRate = M_MODEL.createOntProperty( "http://schema.org/interestRate" );
    
    /** <p>Used to indicate a specific claim contained, implied, translated or refined 
     *  from the content of a [[MediaObject]] or other [[CreativeWork]]. The interpreting 
     *  party can be indicated using [[claimInterpreter]].</p>
     */
    public static final OntProperty interpretedAsClaim = M_MODEL.createOntProperty( "http://schema.org/interpretedAsClaim" );
    
    /** <p>The current approximate inventory level for the item or items.</p> */
    public static final OntProperty inventoryLevel = M_MODEL.createOntProperty( "http://schema.org/inventoryLevel" );
    
    /** <p>Relates a property to a property that is its inverse. Inverse properties relate 
     *  the same pairs of items to each other, but in reversed direction. For example, 
     *  the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties 
     *  don't have explicit inverses; in these situations RDFa and JSON-LD syntax 
     *  for reverse properties can be used.</p>
     */
    public static final OntProperty inverseOf = M_MODEL.createOntProperty( "http://schema.org/inverseOf" );
    
    /** <p>Whether the provider is accepting new patients.</p> */
    public static final OntProperty isAcceptingNewPatients = M_MODEL.createOntProperty( "http://schema.org/isAcceptingNewPatients" );
    
    /** <p>A flag to signal that the item, event, or place is accessible for free.</p> */
    public static final OntProperty isAccessibleForFree = M_MODEL.createOntProperty( "http://schema.org/isAccessibleForFree" );
    
    /** <p>A pointer to another product (or multiple products) for which this product 
     *  is an accessory or spare part.</p>
     */
    public static final OntProperty isAccessoryOrSparePartFor = M_MODEL.createOntProperty( "http://schema.org/isAccessoryOrSparePartFor" );
    
    /** <p>True if the drug is available in a generic form (regardless of name).</p> */
    public static final OntProperty isAvailableGenerically = M_MODEL.createOntProperty( "http://schema.org/isAvailableGenerically" );
    
    /** <p>A resource from which this work is derived or from which it is a modification 
     *  or adaptation.</p>
     */
    public static final OntProperty isBasedOn = M_MODEL.createOntProperty( "http://schema.org/isBasedOn" );
    
    /** <p>A resource that was used in the creation of this resource. This term can be 
     *  repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.</p>
     */
    public static final OntProperty isBasedOnUrl = M_MODEL.createOntProperty( "http://schema.org/isBasedOnUrl" );
    
    /** <p>A pointer to another product (or multiple products) for which this product 
     *  is a consumable.</p>
     */
    public static final OntProperty isConsumableFor = M_MODEL.createOntProperty( "http://schema.org/isConsumableFor" );
    
    /** <p>Another BioChemEntity encoding by this one.</p> */
    public static final OntProperty isEncodedByBioChemEntity = M_MODEL.createOntProperty( "http://schema.org/isEncodedByBioChemEntity" );
    
    /** <p>Indicates whether this content is family friendly.</p> */
    public static final OntProperty isFamilyFriendly = M_MODEL.createOntProperty( "http://schema.org/isFamilyFriendly" );
    
    /** <p>Indicates whether the offer was accepted as a gift for someone other than 
     *  the buyer.</p>
     */
    public static final OntProperty isGift = M_MODEL.createOntProperty( "http://schema.org/isGift" );
    
    /** <p>Biological process this BioChemEntity is involved in; please use PropertyValue 
     *  if you want to include any evidence.</p>
     */
    public static final OntProperty isInvolvedInBiologicalProcess = M_MODEL.createOntProperty( "http://schema.org/isInvolvedInBiologicalProcess" );
    
    /** <p>True if the broadcast is of a live event.</p> */
    public static final OntProperty isLiveBroadcast = M_MODEL.createOntProperty( "http://schema.org/isLiveBroadcast" );
    
    /** <p>Subcellular location where this BioChemEntity is located; please use PropertyValue 
     *  if you want to include any evidence.</p>
     */
    public static final OntProperty isLocatedInSubcellularLocation = M_MODEL.createOntProperty( "http://schema.org/isLocatedInSubcellularLocation" );
    
    /** <p>Indicates an item or CreativeWork that this item, or CreativeWork (in some 
     *  sense), is part of.</p>
     */
    public static final OntProperty isPartOf = M_MODEL.createOntProperty( "http://schema.org/isPartOf" );
    
    /** <p>Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity.</p> */
    public static final OntProperty isPartOfBioChemEntity = M_MODEL.createOntProperty( "http://schema.org/isPartOfBioChemEntity" );
    
    /** <p>Indicates some accommodation that this floor plan describes.</p> */
    public static final OntProperty isPlanForApartment = M_MODEL.createOntProperty( "http://schema.org/isPlanForApartment" );
    
    /** <p>True if this item's name is a proprietary/brand name (vs. generic name).</p> */
    public static final OntProperty isProprietary = M_MODEL.createOntProperty( "http://schema.org/isProprietary" );
    
    /** <p>A pointer to another, somehow related product (or multiple products).</p> */
    public static final OntProperty isRelatedTo = M_MODEL.createOntProperty( "http://schema.org/isRelatedTo" );
    
    /** <p>Whether the 3DModel allows resizing. For example, room layout applications 
     *  often do not allow 3DModel elements to be resized to reflect reality.</p>
     */
    public static final OntProperty isResizable = M_MODEL.createOntProperty( "http://schema.org/isResizable" );
    
    /** <p>A pointer to another, functionally similar product (or multiple products).</p> */
    public static final OntProperty isSimilarTo = M_MODEL.createOntProperty( "http://schema.org/isSimilarTo" );
    
    /** <p>The member program this tier is a part of.</p> */
    public static final OntProperty isTierOf = M_MODEL.createOntProperty( "http://schema.org/isTierOf" );
    
    /** <p>This can be marked 'true' to indicate that some published [[DeliveryTimeSettings]] 
     *  or [[ShippingRateSettings]] are intended to apply to all [[OfferShippingDetails]] 
     *  published by the same merchant, when referenced by a [[shippingSettingsLink]] 
     *  in those settings. It is not meaningful to use a 'true' value for this property 
     *  alongside a transitTimeLabel (for [[DeliveryTimeSettings]]) or shippingLabel 
     *  (for [[ShippingRateSettings]]), since this property is for use with unlabelled 
     *  settings.</p>
     */
    public static final OntProperty isUnlabelledFallback = M_MODEL.createOntProperty( "http://schema.org/isUnlabelledFallback" );
    
    /** <p>Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], 
     *  this is a pointer (from a ProductModel) to a base product from which this 
     *  product is a variant. It is safe to infer that the variant inherits all product 
     *  features from the base model, unless defined locally. This is not transitive. 
     *  In the case of a [[ProductGroup]], the group description also serves as a 
     *  template, representing a set of Products that vary on explicitly defined, 
     *  specific dimensions only (so it defines both a set of variants, as well as 
     *  which values distinguish amongst those variants). When used with [[ProductGroup]], 
     *  this property can apply to any [[Product]] included in the group.</p>
     */
    public static final OntProperty isVariantOf = M_MODEL.createOntProperty( "http://schema.org/isVariantOf" );
    
    /** <p>The ISBN of the book.</p> */
    public static final OntProperty isbn_PROP = M_MODEL.createOntProperty( "http://schema.org/isbn" );
    
    /** <p>The International Standard of Industrial Classification of All Economic Activities 
     *  (ISIC), Revision 4 code for a particular organization, business person, or 
     *  place.</p>
     */
    public static final OntProperty isicV4 = M_MODEL.createOntProperty( "http://schema.org/isicV4" );
    
    /** <p>An organization identifier as defined in [ISO 6523(-1)](https://en.wikipedia.org/wiki/ISO/IEC_6523). 
     *  The identifier should be in the `XXXX:YYYYYY:ZZZ` or `XXXX:YYYYYY`format. 
     *  Where `XXXX` is a 4 digit _ICD_ (International Code Designator), `YYYYYY` 
     *  is an _OID_ (Organization Identifier) with all formatting characters (dots, 
     *  dashes, spaces) removed with a maximal length of 35 characters, and `ZZZ` 
     *  is an optional OPI (Organization Part Identifier) with a maximum length of 
     *  35 characters. The various components (ICD, OID, OPI) are joined with a colon 
     *  character (ASCII `0x3a`). Note that many existing organization identifiers 
     *  defined as attributes like [leiCode](http://schema.org/leiCode) (`0199`), 
     *  [duns](http://schema.org/duns) (`0060`) or [GLN](http://schema.org/globalLocationNumber) 
     *  (`0088`) can be expressed using ISO-6523. If possible, ISO-6523 codes should 
     *  be preferred to populating [vatID](http://schema.org/vatID) or [taxID](http://schema.org/taxID), 
     *  as ISO identifiers are less ambiguous.</p>
     */
    public static final OntProperty iso6523Code = M_MODEL.createOntProperty( "http://schema.org/iso6523Code" );
    
    /** <p>The International Standard Recording Code for the recording.</p> */
    public static final OntProperty isrcCode = M_MODEL.createOntProperty( "http://schema.org/isrcCode" );
    
    /** <p>The International Standard Serial Number (ISSN) that identifies this serial 
     *  publication. You can repeat this property to identify different formats of, 
     *  or the linking ISSN (ISSN-L) for, this serial publication.</p>
     */
    public static final OntProperty issn_PROP = M_MODEL.createOntProperty( "http://schema.org/issn" );
    
    /** <p>Identifies the issue of publication; for example, "iii" or "2".</p> */
    public static final OntProperty issueNumber = M_MODEL.createOntProperty( "http://schema.org/issueNumber" );
    
    /** <p>The organization issuing the item, for example a [[Permit]], [[Ticket]], or 
     *  [[Certification]].</p>
     */
    public static final OntProperty issuedBy = M_MODEL.createOntProperty( "http://schema.org/issuedBy" );
    
    /** <p>The service through which the permit was granted.</p> */
    public static final OntProperty issuedThrough = M_MODEL.createOntProperty( "http://schema.org/issuedThrough" );
    
    /** <p>The International Standard Musical Work Code for the composition.</p> */
    public static final OntProperty iswcCode = M_MODEL.createOntProperty( "http://schema.org/iswcCode" );
    
    /** <p>An entity represented by an entry in a list or data feed (e.g. an 'artist' 
     *  in a list of 'artists').</p>
     */
    public static final OntProperty item = M_MODEL.createOntProperty( "http://schema.org/item" );
    
    /** <p>A predefined value from OfferItemCondition specifying the condition of the 
     *  product or service, or the products or services included in the offer. Also 
     *  used for product return policies to specify the condition of products accepted 
     *  for returns.</p>
     */
    public static final OntProperty itemCondition = M_MODEL.createOntProperty( "http://schema.org/itemCondition" );
    
    /** <p>The type of return fees for returns of defect products.</p> */
    public static final OntProperty itemDefectReturnFees = M_MODEL.createOntProperty( "http://schema.org/itemDefectReturnFees" );
    
    /** <p>The method (from an enumeration) by which the customer obtains a return shipping 
     *  label for a defect product.</p>
     */
    public static final OntProperty itemDefectReturnLabelSource = M_MODEL.createOntProperty( "http://schema.org/itemDefectReturnLabelSource" );
    
    /** <p>Amount of shipping costs for defect product returns. Applicable when property 
     *  [[itemDefectReturnFees]] equals [[ReturnShippingFees]].</p>
     */
    public static final OntProperty itemDefectReturnShippingFeesAmount = M_MODEL.createOntProperty( "http://schema.org/itemDefectReturnShippingFeesAmount" );
    
    /** <p>For itemListElement values, you can use simple strings (e.g. "Peter", "Paul", 
     *  "Mary"), existing entities, or use ListItem.
     *  
     *  Text values are best if the elements in the list are plain strings. Existing 
     *  entities are best for a simple, unordered list of existing things in your 
     *  data. ListItem is used with ordered lists when you want to provide additional 
     *  context about the element in that list or when the same item might be in different 
     *  places in different lists.
     *  
     *  Note: The order of elements in your mark-up is not sufficient for indicating 
     *  the order or elements. Use ListItem with a 'position' property in such cases.</p>
     */
    public static final OntProperty itemListElement = M_MODEL.createOntProperty( "http://schema.org/itemListElement" );
    
    /** <p>Type of ordering (e.g. Ascending, Descending, Unordered).</p> */
    public static final OntProperty itemListOrder = M_MODEL.createOntProperty( "http://schema.org/itemListOrder" );
    
    /** <p>Current location of the item.</p> */
    public static final OntProperty itemLocation = M_MODEL.createOntProperty( "http://schema.org/itemLocation" );
    
    /** <p>An item being offered (or demanded). The transactional nature of the offer 
     *  or demand is documented using [[businessFunction]], e.g. sell, lease etc. 
     *  While several common expected types are listed explicitly in this definition, 
     *  others can be used. Using a second type, such as Product or a subtype of Product, 
     *  can clarify the nature of the offer.</p>
     */
    public static final OntProperty itemOffered = M_MODEL.createOntProperty( "http://schema.org/itemOffered" );
    
    /** <p>The item that is being reviewed/rated.</p> */
    public static final OntProperty itemReviewed = M_MODEL.createOntProperty( "http://schema.org/itemReviewed" );
    
    /** <p>Item(s) being shipped.</p> */
    public static final OntProperty itemShipped = M_MODEL.createOntProperty( "http://schema.org/itemShipped" );
    
    /** <p>Destination(s) ( [[Place]] ) that make up a trip. For a trip where destination 
     *  order is important use [[ItemList]] to specify that order (see examples).</p>
     */
    public static final OntProperty itinerary = M_MODEL.createOntProperty( "http://schema.org/itinerary" );
    
    /** <p>Systematic method of naming chemical compounds as recommended by the International 
     *  Union of Pure and Applied Chemistry (IUPAC).</p>
     */
    public static final OntProperty iupacName = M_MODEL.createOntProperty( "http://schema.org/iupacName" );
    
    /** <p>Description of benefits associated with the job.</p> */
    public static final OntProperty jobBenefits = M_MODEL.createOntProperty( "http://schema.org/jobBenefits" );
    
    /** <p>An indicator as to whether a position is available for an immediate start.</p> */
    public static final OntProperty jobImmediateStart = M_MODEL.createOntProperty( "http://schema.org/jobImmediateStart" );
    
    /** <p>A (typically single) geographic location associated with the job position.</p> */
    public static final OntProperty jobLocation = M_MODEL.createOntProperty( "http://schema.org/jobLocation" );
    
    /** <p>A description of the job location (e.g. TELECOMMUTE for telecommute jobs).</p> */
    public static final OntProperty jobLocationType = M_MODEL.createOntProperty( "http://schema.org/jobLocationType" );
    
    /** <p>The date on which a successful applicant for this job would be expected to 
     *  start work. Choose a specific date in the future or use the jobImmediateStart 
     *  property to indicate the position is to be filled as soon as possible.</p>
     */
    public static final OntProperty jobStartDate = M_MODEL.createOntProperty( "http://schema.org/jobStartDate" );
    
    /** <p>The job title of the person (for example, Financial Manager).</p> */
    public static final OntProperty jobTitle = M_MODEL.createOntProperty( "http://schema.org/jobTitle" );
    
    /** <p>Indicates a legal jurisdiction, e.g. of some legislation, or where some government 
     *  service is based.</p>
     */
    public static final OntProperty jurisdiction_PROP = M_MODEL.createOntProperty( "http://schema.org/jurisdiction" );
    
    /** <p>Keywords or tags used to describe some item. Multiple textual entries in a 
     *  keywords list are typically delimited by commas, or by repeating the property.</p>
     */
    public static final OntProperty keywords = M_MODEL.createOntProperty( "http://schema.org/keywords" );
    
    /** <p>A textual description of known damages, both repaired and unrepaired.</p> */
    public static final OntProperty knownVehicleDamages = M_MODEL.createOntProperty( "http://schema.org/knownVehicleDamages" );
    
    /** <p>The most generic bi-directional social/work relation.</p> */
    public static final OntProperty knows = M_MODEL.createOntProperty( "http://schema.org/knows" );
    
    /** <p>Of a [[Person]], and less typically of an [[Organization]], to indicate a 
     *  topic that is known about - suggesting possible expertise but not implying 
     *  it. We do not distinguish skill levels here, or relate this to educational 
     *  content, events, objectives or [[JobPosting]] descriptions.</p>
     */
    public static final OntProperty knowsAbout = M_MODEL.createOntProperty( "http://schema.org/knowsAbout" );
    
    /** <p>Of a [[Person]], and less typically of an [[Organization]], to indicate a 
     *  known language. We do not distinguish skill levels or reading/writing/speaking/signing 
     *  here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).</p>
     */
    public static final OntProperty knowsLanguage = M_MODEL.createOntProperty( "http://schema.org/knowsLanguage" );
    
    /** <p>Link to the drug's label details.</p> */
    public static final OntProperty labelDetails = M_MODEL.createOntProperty( "http://schema.org/labelDetails" );
    
    /** <p>A sub property of participant. The owner of the real estate property.</p> */
    public static final OntProperty landlord = M_MODEL.createOntProperty( "http://schema.org/landlord" );
    
    /** <p>A sub property of instrument. The language used on this action.</p> */
    public static final OntProperty language = M_MODEL.createOntProperty( "http://schema.org/language" );
    
    /** <p>Date on which the content on this web page was last reviewed for accuracy 
     *  and/or completeness.</p>
     */
    public static final OntProperty lastReviewed = M_MODEL.createOntProperty( "http://schema.org/lastReviewed" );
    
    /** <p>The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).</p> */
    public static final OntProperty latitude = M_MODEL.createOntProperty( "http://schema.org/latitude" );
    
    /** <p>A schematic image showing the floorplan layout.</p> */
    public static final OntProperty layoutImage = M_MODEL.createOntProperty( "http://schema.org/layoutImage" );
    
    /** <p>The predominant type or kind characterizing the learning resource. For example, 
     *  'presentation', 'handout'.</p>
     */
    public static final OntProperty learningResourceType = M_MODEL.createOntProperty( "http://schema.org/learningResourceType" );
    
    /** <p>Length of the lease for some [[Accommodation]], either particular to some 
     *  [[Offer]] or in some cases intrinsic to the property.</p>
     */
    public static final OntProperty leaseLength = M_MODEL.createOntProperty( "http://schema.org/leaseLength" );
    
    /** <p>The official name of the organization, e.g. the registered company name.</p> */
    public static final OntProperty legalName = M_MODEL.createOntProperty( "http://schema.org/legalName" );
    
    /** <p>The drug or supplement's legal status, including any controlled substance 
     *  schedules that apply.</p>
     */
    public static final OntProperty legalStatus = M_MODEL.createOntProperty( "http://schema.org/legalStatus" );
    
    /** <p>Another legislation that this legislation amends, introducing legal changes.</p> */
    public static final OntProperty legislationAmends = M_MODEL.createOntProperty( "http://schema.org/legislationAmends" );
    
    /** <p>Indicates that this legislation (or part of a legislation) somehow transfers 
     *  another legislation in a different legislative context. This is an informative 
     *  link, and it has no legal value. For legally-binding links of transposition, 
     *  use the &lt;a href="/legislationTransposes"&gt;legislationTransposes&lt;/a&gt; 
     *  property. For example an informative consolidated law of a European Union's 
     *  member state "applies" the consolidated version of the European Directive 
     *  implemented in it.</p>
     */
    public static final OntProperty legislationApplies = M_MODEL.createOntProperty( "http://schema.org/legislationApplies" );
    
    /** <p>Another legislation that this legislation changes. This encompasses the notions 
     *  of amendment, replacement, correction, repeal, or other types of change. This 
     *  may be a direct change (textual or non-textual amendment) or a consequential 
     *  or indirect change. The property is to be used to express the existence of 
     *  a change relationship between two acts rather than the existence of a consolidated 
     *  version of the text that shows the result of the change. For consolidation 
     *  relationships, use the &lt;a href="/legislationConsolidates"&gt;legislationConsolidates&lt;/a&gt; 
     *  property.</p>
     */
    public static final OntProperty legislationChanges = M_MODEL.createOntProperty( "http://schema.org/legislationChanges" );
    
    /** <p>Another legislation that this one sets into force.</p> */
    public static final OntProperty legislationCommences = M_MODEL.createOntProperty( "http://schema.org/legislationCommences" );
    
    /** <p>Indicates another legislation taken into account in this consolidated legislation 
     *  (which is usually the product of an editorial process that revises the legislation). 
     *  This property should be used multiple times to refer to both the original 
     *  version or the previous consolidated version, and to the legislations making 
     *  the change.</p>
     */
    public static final OntProperty legislationConsolidates = M_MODEL.createOntProperty( "http://schema.org/legislationConsolidates" );
    
    /** <p>Another legislation in which this one introduces textual changes, like correction 
     *  of spelling mistakes, with no legal impact (for modifications that have legal 
     *  impact, use &lt;a href="/legislationAmends"&gt;legislationAmends&lt;/a&gt;).</p>
     */
    public static final OntProperty legislationCorrects = M_MODEL.createOntProperty( "http://schema.org/legislationCorrects" );
    
    /** <p>The person or organization that countersigned the legislation. Depending on 
     *  the legal context, a countersignature can indicate that the signed authority 
     *  undertakes to assume responsibility for texts emanating from a person who 
     *  is inviolable and irresponsible, (for example a King, Grand Duc or President), 
     *  or that the authority is in charge of the implementation of the text.</p>
     */
    public static final OntProperty legislationCountersignedBy = M_MODEL.createOntProperty( "http://schema.org/legislationCountersignedBy" );
    
    /** <p>The date of adoption or signature of the legislation. This is the date at 
     *  which the text is officially aknowledged to be a legislation, even though 
     *  it might not even be published or in force.</p>
     */
    public static final OntProperty legislationDate = M_MODEL.createOntProperty( "http://schema.org/legislationDate" );
    
    /** <p>The date at which the Legislation becomes applicable. This can sometimes be 
     *  distinct from the date of entry into force : a text may come in force today, 
     *  and state it will become applicable in 3 months.</p>
     */
    public static final OntProperty legislationDateOfApplicability = M_MODEL.createOntProperty( "http://schema.org/legislationDateOfApplicability" );
    
    /** <p>The point-in-time at which the provided description of the legislation is 
     *  valid (e.g.: when looking at the law on the 2016-04-07 (= dateVersion), I 
     *  get the consolidation of 2015-04-12 of the "National Insurance Contributions 
     *  Act 2015")</p>
     */
    public static final OntProperty legislationDateVersion = M_MODEL.createOntProperty( "http://schema.org/legislationDateVersion" );
    
    /** <p>Indicates that this Legislation ensures the implementation of another Legislation, 
     *  for example by modifying national legislations so that they do not contradict 
     *  to an EU regulation or decision. This implies a legal meaning. Transpositions 
     *  of EU Directive should be captured with &lt;a href="/legislationTransposes"&gt;legislationTransposes&lt;/a&gt;.</p>
     */
    public static final OntProperty legislationEnsuresImplementationOf = M_MODEL.createOntProperty( "http://schema.org/legislationEnsuresImplementationOf" );
    
    /** <p>An identifier for the legislation. This can be either a string-based identifier, 
     *  like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, 
     *  like an ELI (European Legislation Identifier) or an URN-Lex.</p>
     */
    public static final OntProperty legislationIdentifier = M_MODEL.createOntProperty( "http://schema.org/legislationIdentifier" );
    
    /** <p>The jurisdiction from which the legislation originates.</p> */
    public static final OntProperty legislationJurisdiction = M_MODEL.createOntProperty( "http://schema.org/legislationJurisdiction" );
    
    /** <p>Whether the legislation is currently in force, not in force, or partially 
     *  in force.</p>
     */
    public static final OntProperty legislationLegalForce = M_MODEL.createOntProperty( "http://schema.org/legislationLegalForce" );
    
    /** <p>The legal value of this legislation file. The same legislation can be written 
     *  in multiple files with different legal values. Typically a digitally signed 
     *  PDF have a "stronger" legal value than the HTML file of the same act.</p>
     */
    public static final OntProperty legislationLegalValue = M_MODEL.createOntProperty( "http://schema.org/legislationLegalValue" );
    
    /** <p>The person or organization that originally passed or made the law: typically 
     *  parliament (for primary legislation) or government (for secondary legislation). 
     *  This indicates the "legal author" of the law, as opposed to its physical author.</p>
     */
    public static final OntProperty legislationPassedBy = M_MODEL.createOntProperty( "http://schema.org/legislationPassedBy" );
    
    /** <p>Another legislation that this legislation repeals (cancels, abrogates).</p> */
    public static final OntProperty legislationRepeals = M_MODEL.createOntProperty( "http://schema.org/legislationRepeals" );
    
    /** <p>An individual or organization that has some kind of responsibility for the 
     *  legislation. Typically the ministry who is/was in charge of elaborating the 
     *  legislation, or the adressee for potential questions about the legislation 
     *  once it is published.</p>
     */
    public static final OntProperty legislationResponsible = M_MODEL.createOntProperty( "http://schema.org/legislationResponsible" );
    
    /** <p>Indicates that this legislation (or part of legislation) fulfills the objectives 
     *  set by another legislation, by passing appropriate implementation measures. 
     *  Typically, some legislations of European Union's member states or regions 
     *  transpose European Directives. This indicates a legally binding link between 
     *  the 2 legislations.</p>
     */
    public static final OntProperty legislationTransposes = M_MODEL.createOntProperty( "http://schema.org/legislationTransposes" );
    
    /** <p>The type of the legislation. Examples of values are "law", "act", "directive", 
     *  "decree", "regulation", "statutory instrument", "loi organique", "règlement 
     *  grand-ducal", etc., depending on the country.</p>
     */
    public static final OntProperty legislationType = M_MODEL.createOntProperty( "http://schema.org/legislationType" );
    
    /** <p>An organization identifier that uniquely identifies a legal entity as defined 
     *  in ISO 17442.</p>
     */
    public static final OntProperty leiCode = M_MODEL.createOntProperty( "http://schema.org/leiCode" );
    
    /** <p>A sub property of participant. The person that lends the object being borrowed.</p> */
    public static final OntProperty lender = M_MODEL.createOntProperty( "http://schema.org/lender" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  lesser than the object.</p>
     */
    public static final OntProperty lesser = M_MODEL.createOntProperty( "http://schema.org/lesser" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  lesser than or equal to the object.</p>
     */
    public static final OntProperty lesserOrEqual = M_MODEL.createOntProperty( "http://schema.org/lesserOrEqual" );
    
    /** <p>The individual who adds lettering, including speech balloons and sound effects, 
     *  to artwork.</p>
     */
    public static final OntProperty letterer = M_MODEL.createOntProperty( "http://schema.org/letterer" );
    
    /** <p>A license document that applies to this content, typically indicated by URL.</p> */
    public static final OntProperty license = M_MODEL.createOntProperty( "http://schema.org/license" );
    
    /** <p>A line is a point-to-point path consisting of two or more points. A line is 
     *  expressed as a series of two or more point objects separated by space.</p>
     */
    public static final OntProperty line = M_MODEL.createOntProperty( "http://schema.org/line" );
    
    /** <p>Indicates the relationship type of a Web link.</p> */
    public static final OntProperty linkRelationship = M_MODEL.createOntProperty( "http://schema.org/linkRelationship" );
    
    /** <p>An update to the LiveBlog.</p> */
    public static final OntProperty liveBlogUpdate = M_MODEL.createOntProperty( "http://schema.org/liveBlogUpdate" );
    
    /** <p>Amount of mortgage mandate that can be converted into a proper mortgage at 
     *  a later stage.</p>
     */
    public static final OntProperty loanMortgageMandateAmount = M_MODEL.createOntProperty( "http://schema.org/loanMortgageMandateAmount" );
    
    /** <p>The amount of money to pay in a single payment.</p> */
    public static final OntProperty loanPaymentAmount = M_MODEL.createOntProperty( "http://schema.org/loanPaymentAmount" );
    
    /** <p>Frequency of payments due, i.e. number of months between payments. This is 
     *  defined as a frequency, i.e. the reciprocal of a period of time.</p>
     */
    public static final OntProperty loanPaymentFrequency = M_MODEL.createOntProperty( "http://schema.org/loanPaymentFrequency" );
    
    /** <p>A form of paying back money previously borrowed from a lender. Repayment usually 
     *  takes the form of periodic payments that normally include part principal plus 
     *  interest in each payment.</p>
     */
    public static final OntProperty loanRepaymentForm = M_MODEL.createOntProperty( "http://schema.org/loanRepaymentForm" );
    
    /** <p>The duration of the loan or credit agreement.</p> */
    public static final OntProperty loanTerm = M_MODEL.createOntProperty( "http://schema.org/loanTerm" );
    
    /** <p>The type of a loan or credit.</p> */
    public static final OntProperty loanType = M_MODEL.createOntProperty( "http://schema.org/loanType" );
    
    /** <p>The location of, for example, where an event is happening, where an organization 
     *  is located, or where an action takes place.</p>
     */
    public static final OntProperty location = M_MODEL.createOntProperty( "http://schema.org/location" );
    
    /** <p>The location where the CreativeWork was created, which may not be the same 
     *  as the location depicted in the CreativeWork.</p>
     */
    public static final OntProperty locationCreated = M_MODEL.createOntProperty( "http://schema.org/locationCreated" );
    
    /** <p>A full description of the lodging unit.</p> */
    public static final OntProperty lodgingUnitDescription = M_MODEL.createOntProperty( "http://schema.org/lodgingUnitDescription" );
    
    /** <p>Textual description of the unit type (including suite vs. room, size of bed, 
     *  etc.).</p>
     */
    public static final OntProperty lodgingUnitType = M_MODEL.createOntProperty( "http://schema.org/lodgingUnitType" );
    
    /** <p>An associated logo.</p> */
    public static final OntProperty logo = M_MODEL.createOntProperty( "http://schema.org/logo" );
    
    /** <p>The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).</p> */
    public static final OntProperty longitude = M_MODEL.createOntProperty( "http://schema.org/longitude" );
    
    /** <p>A sub property of participant. The loser of the action.</p> */
    public static final OntProperty loser = M_MODEL.createOntProperty( "http://schema.org/loser" );
    
    /** <p>The lowest price of all offers available.
     *  
     *  Usage guidelines:
     *  
     *  * Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' 
     *  (U+0039)) rather than superficially similar Unicode symbols.
     *  * Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal 
     *  point. Avoid using these symbols as a readability separator.</p>
     */
    public static final OntProperty lowPrice = M_MODEL.createOntProperty( "http://schema.org/lowPrice" );
    
    /** <p>The person who wrote the words.</p> */
    public static final OntProperty lyricist = M_MODEL.createOntProperty( "http://schema.org/lyricist" );
    
    /** <p>The words in the song.</p> */
    public static final OntProperty lyrics = M_MODEL.createOntProperty( "http://schema.org/lyrics" );
    
    /** <p>Indicates if this web page element is the main subject of the page.</p> */
    public static final OntProperty mainContentOfPage = M_MODEL.createOntProperty( "http://schema.org/mainContentOfPage" );
    
    /** <p>Indicates the primary entity described in some page or other CreativeWork.</p> */
    public static final OntProperty mainEntity = M_MODEL.createOntProperty( "http://schema.org/mainEntity" );
    
    /** <p>Indicates a page (or other CreativeWork) for which this thing is the main 
     *  entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) 
     *  for details.</p>
     */
    public static final OntProperty mainEntityOfPage = M_MODEL.createOntProperty( "http://schema.org/mainEntityOfPage" );
    
    /** <p>A maintainer of a [[Dataset]], software package ([[SoftwareApplication]]), 
     *  or other [[Project]]. A maintainer is a [[Person]] or [[Organization]] that 
     *  manages contributions to, and/or publication of, some (typically complex) 
     *  artifact. It is common for distributions of software and data to be based 
     *  on "upstream" sources. When [[maintainer]] is applied to a specific version 
     *  of something e.g. a particular version or packaging of a [[Dataset]], it is 
     *  always possible that the upstream source has a different maintainer. The [[isBasedOn]] 
     *  property can be used to indicate such relationships between datasets to make 
     *  the different maintenance roles clear. Similarly in the case of software, 
     *  a package may have dedicated maintainers working on integration into software 
     *  distributions such as Ubuntu, as well as upstream maintainers of the underlying 
     *  work.</p>
     */
    public static final OntProperty maintainer = M_MODEL.createOntProperty( "http://schema.org/maintainer" );
    
    /** <p>A pointer to products or services offered by the organization or person.</p> */
    public static final OntProperty makesOffer = M_MODEL.createOntProperty( "http://schema.org/makesOffer" );
    
    /** <p>The manufacturer of the product.</p> */
    public static final OntProperty manufacturer = M_MODEL.createOntProperty( "http://schema.org/manufacturer" );
    
    /** <p>A URL to a map of the place.</p> */
    public static final OntProperty map = M_MODEL.createOntProperty( "http://schema.org/map" );
    
    /** <p>Indicates the kind of Map, from the MapCategoryType Enumeration.</p> */
    public static final OntProperty mapType = M_MODEL.createOntProperty( "http://schema.org/mapType" );
    
    /** <p>A URL to a map of the place.</p> */
    public static final OntProperty maps = M_MODEL.createOntProperty( "http://schema.org/maps" );
    
    /** <p>A [[marginOfError]] for an [[Observation]].</p> */
    public static final OntProperty marginOfError = M_MODEL.createOntProperty( "http://schema.org/marginOfError" );
    
    /** <p>For a [[NewsMediaOrganization]], a link to the masthead page or a page listing 
     *  top editorial management.</p>
     */
    public static final OntProperty masthead = M_MODEL.createOntProperty( "http://schema.org/masthead" );
    
    /** <p>A material that something is made from, e.g. leather, wool, cotton, paper.</p> */
    public static final OntProperty material = M_MODEL.createOntProperty( "http://schema.org/material" );
    
    /** <p>The quantity of the materials being described or an expression of the physical 
     *  space they occupy.</p>
     */
    public static final OntProperty materialExtent = M_MODEL.createOntProperty( "http://schema.org/materialExtent" );
    
    /** <p>A mathematical expression (e.g. 'x^2-3x=0') that may be solved for a specific 
     *  variable, simplified, or transformed. This can take many formats, e.g. LaTeX, 
     *  Ascii-Math, or math as you would write with a keyboard.</p>
     */
    public static final OntProperty mathExpression = M_MODEL.createOntProperty( "http://schema.org/mathExpression" );
    
    /** <p>The highest price if the price is a range.</p> */
    public static final OntProperty maxPrice = M_MODEL.createOntProperty( "http://schema.org/maxPrice" );
    
    /** <p>The upper value of some characteristic or property.</p> */
    public static final OntProperty maxValue = M_MODEL.createOntProperty( "http://schema.org/maxValue" );
    
    /** <p>The total number of individuals that may attend an event or venue.</p> */
    public static final OntProperty maximumAttendeeCapacity = M_MODEL.createOntProperty( "http://schema.org/maximumAttendeeCapacity" );
    
    /** <p>The maximum number of students who may be enrolled in the program.</p> */
    public static final OntProperty maximumEnrollment = M_MODEL.createOntProperty( "http://schema.org/maximumEnrollment" );
    
    /** <p>Recommended intake of this supplement for a given population as defined by 
     *  a specific recommending authority.</p>
     */
    public static final OntProperty maximumIntake = M_MODEL.createOntProperty( "http://schema.org/maximumIntake" );
    
    /** <p>The maximum physical attendee capacity of an [[Event]] whose [[eventAttendanceMode]] 
     *  is [[OfflineEventAttendanceMode]] (or the offline aspects, in the case of 
     *  a [[MixedEventAttendanceMode]]).</p>
     */
    public static final OntProperty maximumPhysicalAttendeeCapacity = M_MODEL.createOntProperty( "http://schema.org/maximumPhysicalAttendeeCapacity" );
    
    /** <p>The maximum virtual attendee capacity of an [[Event]] whose [[eventAttendanceMode]] 
     *  is [[OnlineEventAttendanceMode]] (or the online aspects, in the case of a 
     *  [[MixedEventAttendanceMode]]).</p>
     */
    public static final OntProperty maximumVirtualAttendeeCapacity = M_MODEL.createOntProperty( "http://schema.org/maximumVirtualAttendeeCapacity" );
    
    /** <p>Description of the meals that will be provided or available for purchase.</p> */
    public static final OntProperty mealService = M_MODEL.createOntProperty( "http://schema.org/mealService" );
    
    /** <p>The measuredProperty of an [[Observation]], typically via its [[StatisticalVariable]]. 
     *  There are various kinds of applicable [[Property]]: a schema.org property, 
     *  a property from other RDF-compatible systems, e.g. W3C RDF Data Cube, Data 
     *  Commons, Wikidata, or schema.org extensions such as [GS1's](https://www.gs1.org/voc/?show=properties).</p>
     */
    public static final OntProperty measuredProperty = M_MODEL.createOntProperty( "http://schema.org/measuredProperty" );
    
    /** <p>Identifies the denominator variable when an observation represents a ratio 
     *  or percentage.</p>
     */
    public static final OntProperty measurementDenominator = M_MODEL.createOntProperty( "http://schema.org/measurementDenominator" );
    
    /** <p>A subproperty of [[measurementTechnique]] that can be used for specifying 
     *  specific methods, in particular via [[MeasurementMethodEnum]].</p>
     */
    public static final OntProperty measurementMethod = M_MODEL.createOntProperty( "http://schema.org/measurementMethod" );
    
    /** <p>Provides additional qualification to an observation. For example, a GDP observation 
     *  measures the Nominal value.</p>
     */
    public static final OntProperty measurementQualifier = M_MODEL.createOntProperty( "http://schema.org/measurementQualifier" );
    
    /** <p>A technique, method or technology used in an [[Observation]], [[StatisticalVariable]] 
     *  or [[Dataset]] (or [[DataDownload]], [[DataCatalog]]), corresponding to the 
     *  method used for measuring the corresponding variable(s) (for datasets, described 
     *  using [[variableMeasured]]; for [[Observation]], a [[StatisticalVariable]]). 
     *  Often but not necessarily each [[variableMeasured]] will have an explicit 
     *  representation as (or mapping to) an property such as those defined in Schema.org, 
     *  or other RDF vocabularies and "knowledge graphs". In that case the subproperty 
     *  of [[variableMeasured]] called [[measuredProperty]] is applicable. The [[measurementTechnique]] 
     *  property helps when extra clarification is needed about how a [[measuredProperty]] 
     *  was measured. This is oriented towards scientific and scholarly dataset publication 
     *  but may have broader applicability; it is not intended as a full representation 
     *  of measurement, but can often serve as a high level summary for dataset discovery. 
     *  For example, if [[variableMeasured]] is: molecule concentration, [[measurementTechnique]] 
     *  could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry" or "immunofluorescence". 
     *  If the [[variableMeasured]] is "depression rating", the [[measurementTechnique]] 
     *  could be "Zung Scale" or "HAM-D" or "Beck Depression Inventory". If there 
     *  are several [[variableMeasured]] properties recorded for some given data object, 
     *  use a [[PropertyValue]] for each [[variableMeasured]] and attach the corresponding 
     *  [[measurementTechnique]]. The value can also be from an enumeration, organized 
     *  as a [[MeasurementMetholdEnumeration]].</p>
     */
    public static final OntProperty measurementTechnique = M_MODEL.createOntProperty( "http://schema.org/measurementTechnique" );
    
    /** <p>The specific biochemical interaction through which this drug or supplement 
     *  produces its pharmacological effect.</p>
     */
    public static final OntProperty mechanismOfAction = M_MODEL.createOntProperty( "http://schema.org/mechanismOfAction" );
    
    /** <p>Indicates a MediaManipulationRatingEnumeration classification of a media object 
     *  (in the context of how it was published or shared).</p>
     */
    public static final OntProperty mediaAuthenticityCategory = M_MODEL.createOntProperty( "http://schema.org/mediaAuthenticityCategory" );
    
    /** <p>In the context of a [[MediaReview]], indicates specific media item(s) that 
     *  are grouped using a [[MediaReviewItem]].</p>
     */
    public static final OntProperty mediaItemAppearance = M_MODEL.createOntProperty( "http://schema.org/mediaItemAppearance" );
    
    /** <p>The median value.</p> */
    public static final OntProperty median = M_MODEL.createOntProperty( "http://schema.org/median" );
    
    /** <p>Medical audience for page.</p> */
    public static final OntProperty medicalAudience = M_MODEL.createOntProperty( "http://schema.org/medicalAudience" );
    
    /** <p>A medical specialty of the provider.</p> */
    public static final OntProperty medicalSpecialty = M_MODEL.createOntProperty( "http://schema.org/medicalSpecialty" );
    
    /** <p>The system of medicine that includes this MedicalEntity, for example 'evidence-based', 
     *  'homeopathic', 'chiropractic', etc.</p>
     */
    public static final OntProperty medicineSystem = M_MODEL.createOntProperty( "http://schema.org/medicineSystem" );
    
    /** <p>Indicates that the vehicle meets the respective emission standard.</p> */
    public static final OntProperty meetsEmissionStandard = M_MODEL.createOntProperty( "http://schema.org/meetsEmissionStandard" );
    
    /** <p>A member of an Organization or a ProgramMembership. Organizations can be members 
     *  of organizations; ProgramMembership is typically for individuals.</p>
     */
    public static final OntProperty member = M_MODEL.createOntProperty( "http://schema.org/member" );
    
    /** <p>An Organization (or ProgramMembership) to which this Person or Organization 
     *  belongs.</p>
     */
    public static final OntProperty memberOf = M_MODEL.createOntProperty( "http://schema.org/memberOf" );
    
    /** <p>A member of this organization.</p> */
    public static final OntProperty members = M_MODEL.createOntProperty( "http://schema.org/members" );
    
    /** <p>A unique identifier for the membership.</p> */
    public static final OntProperty membershipNumber = M_MODEL.createOntProperty( "http://schema.org/membershipNumber" );
    
    /** <p>The number of membership points earned by the member. If necessary, the unitText 
     *  can be used to express the units the points are issued in. (E.g. stars, miles, 
     *  etc.)</p>
     */
    public static final OntProperty membershipPointsEarned = M_MODEL.createOntProperty( "http://schema.org/membershipPointsEarned" );
    
    /** <p>Minimum memory requirements.</p> */
    public static final OntProperty memoryRequirements = M_MODEL.createOntProperty( "http://schema.org/memoryRequirements" );
    
    /** <p>Indicates that the CreativeWork contains a reference to, but is not necessarily 
     *  about a concept.</p>
     */
    public static final OntProperty mentions = M_MODEL.createOntProperty( "http://schema.org/mentions" );
    
    /** <p>Either the actual menu as a structured representation, as text, or a URL of 
     *  the menu.</p>
     */
    public static final OntProperty menu = M_MODEL.createOntProperty( "http://schema.org/menu" );
    
    /** <p>Additional menu item(s) such as a side dish of salad or side order of fries 
     *  that can be added to this menu item. Additionally it can be a menu section 
     *  containing allowed add-on menu items for this menu item.</p>
     */
    public static final OntProperty menuAddOn = M_MODEL.createOntProperty( "http://schema.org/menuAddOn" );
    
    /** <p>'merchant' is an out-dated term for 'seller'.</p> */
    public static final OntProperty merchant = M_MODEL.createOntProperty( "http://schema.org/merchant" );
    
    /** <p>Specifies either a fixed return date or the number of days (from the delivery 
     *  date) that a product can be returned. Used when the [[returnPolicyCategory]] 
     *  property is specified as [[MerchantReturnFiniteReturnWindow]].</p>
     */
    public static final OntProperty merchantReturnDays = M_MODEL.createOntProperty( "http://schema.org/merchantReturnDays" );
    
    /** <p>Specifies a Web page or service by URL, for product returns.</p> */
    public static final OntProperty merchantReturnLink = M_MODEL.createOntProperty( "http://schema.org/merchantReturnLink" );
    
    /** <p>A CreativeWork attached to the message.</p> */
    public static final OntProperty messageAttachment = M_MODEL.createOntProperty( "http://schema.org/messageAttachment" );
    
    /** <p>The total distance travelled by the particular vehicle since its initial production, 
     *  as read from its odometer.
     *  
     *  Typical unit code(s): KMT for kilometers, SMI for statute miles.</p>
     */
    public static final OntProperty mileageFromOdometer = M_MODEL.createOntProperty( "http://schema.org/mileageFromOdometer" );
    
    /** <p>The lowest price if the price is a range.</p> */
    public static final OntProperty minPrice = M_MODEL.createOntProperty( "http://schema.org/minPrice" );
    
    /** <p>The lower value of some characteristic or property.</p> */
    public static final OntProperty minValue = M_MODEL.createOntProperty( "http://schema.org/minValue" );
    
    /** <p>The minimum payment required at this time.</p> */
    public static final OntProperty minimumPaymentDue = M_MODEL.createOntProperty( "http://schema.org/minimumPaymentDue" );
    
    /** <p>For a [[NewsMediaOrganization]], a statement on coverage priorities, including 
     *  any public agenda or stance on issues.</p>
     */
    public static final OntProperty missionCoveragePrioritiesPolicy = M_MODEL.createOntProperty( "http://schema.org/missionCoveragePrioritiesPolicy" );
    
    /** <p>The [[mobileUrl]] property is provided for specific situations in which data 
     *  consumers need to determine whether one of several provided URLs is a dedicated 
     *  'mobile site'. To discourage over-use, and reflecting intial usecases, the 
     *  property is expected only on [[Product]] and [[Offer]], rather than [[Thing]]. 
     *  The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) 
     *  in which content can be flexibly adapted to a wide range of browsing environments. 
     *  Pages and sites referenced with the long-established [[url]] property should 
     *  ideally also be usable on a wide variety of devices, including mobile phones. 
     *  In most cases, it would be pointless and counter productive to attempt to 
     *  update all [[url]] markup to use [[mobileUrl]] for more mobile-oriented pages. 
     *  The property is intended for the case when items (primarily [[Product]] and 
     *  [[Offer]]) have extra URLs hosted on an additional "mobile site" alongside 
     *  the main one. It should not be taken as an endorsement of this publication 
     *  style.</p>
     */
    public static final OntProperty mobileUrl = M_MODEL.createOntProperty( "http://schema.org/mobileUrl" );
    
    /** <p>The model of the product. Use with the URL of a ProductModel or a textual 
     *  representation of the model identifier. The URL of the ProductModel can be 
     *  from an external source. It is recommended to additionally provide strong 
     *  product identifiers via the gtin8/gtin13/gtin14 and mpn properties.</p>
     */
    public static final OntProperty model = M_MODEL.createOntProperty( "http://schema.org/model" );
    
    /** <p>The release date of a vehicle model (often used to differentiate versions 
     *  of the same make and model).</p>
     */
    public static final OntProperty modelDate = M_MODEL.createOntProperty( "http://schema.org/modelDate" );
    
    /** <p>The date and time the reservation was modified.</p> */
    public static final OntProperty modifiedTime = M_MODEL.createOntProperty( "http://schema.org/modifiedTime" );
    
    /** <p>The empirical formula is the simplest whole number ratio of all the atoms 
     *  in a molecule.</p>
     */
    public static final OntProperty molecularFormula = M_MODEL.createOntProperty( "http://schema.org/molecularFormula" );
    
    /** <p>This is the molecular weight of the entity being described, not of the parent. 
     *  Units should be included in the form '&amp;lt;Number&amp;gt; &amp;lt;unit&amp;gt;', 
     *  for example '12 amu' or as '&amp;lt;QuantitativeValue&amp;gt;.</p>
     */
    public static final OntProperty molecularWeight = M_MODEL.createOntProperty( "http://schema.org/molecularWeight" );
    
    /** <p>The monoisotopic mass is the sum of the masses of the atoms in a molecule 
     *  using the unbound, ground-state, rest mass of the principal (most abundant) 
     *  isotope for each element instead of the isotopic average mass. Please include 
     *  the units in the form '&amp;lt;Number&amp;gt; &amp;lt;unit&amp;gt;', for example 
     *  '770.230488 g/mol' or as '&amp;lt;QuantitativeValue&amp;gt;.</p>
     */
    public static final OntProperty monoisotopicMolecularWeight = M_MODEL.createOntProperty( "http://schema.org/monoisotopicMolecularWeight" );
    
    /** <p>The minimum payment is the lowest amount of money that one is required to 
     *  pay on a credit card statement each month.</p>
     */
    public static final OntProperty monthlyMinimumRepaymentAmount = M_MODEL.createOntProperty( "http://schema.org/monthlyMinimumRepaymentAmount" );
    
    /** <p>Indicates the minimal number of months of experience required for a position.</p> */
    public static final OntProperty monthsOfExperience = M_MODEL.createOntProperty( "http://schema.org/monthsOfExperience" );
    
    /** <p>The Manufacturer Part Number (MPN) of the product, or the product to which 
     *  the offer refers.</p>
     */
    public static final OntProperty mpn = M_MODEL.createOntProperty( "http://schema.org/mpn" );
    
    /** <p>Whether multiple values are allowed for the property. Default is false.</p> */
    public static final OntProperty multipleValues = M_MODEL.createOntProperty( "http://schema.org/multipleValues" );
    
    /** <p>The movement the muscle generates.</p> */
    public static final OntProperty muscleAction = M_MODEL.createOntProperty( "http://schema.org/muscleAction" );
    
    /** <p>An arrangement derived from the composition.</p> */
    public static final OntProperty musicArrangement = M_MODEL.createOntProperty( "http://schema.org/musicArrangement" );
    
    /** <p>The composer of the soundtrack.</p> */
    public static final OntProperty musicBy = M_MODEL.createOntProperty( "http://schema.org/musicBy" );
    
    /** <p>The type of composition (e.g. overture, sonata, symphony, etc.).</p> */
    public static final OntProperty musicCompositionForm = M_MODEL.createOntProperty( "http://schema.org/musicCompositionForm" );
    
    /** <p>A member of a music group&amp;#x2014;for example, John, Paul, George, or Ringo.</p> */
    public static final OntProperty musicGroupMember = M_MODEL.createOntProperty( "http://schema.org/musicGroupMember" );
    
    /** <p>Format of this release (the type of recording media used, i.e. compact disc, 
     *  digital media, LP, etc.).</p>
     */
    public static final OntProperty musicReleaseFormat = M_MODEL.createOntProperty( "http://schema.org/musicReleaseFormat" );
    
    /** <p>The key, mode, or scale this composition uses.</p> */
    public static final OntProperty musicalKey = M_MODEL.createOntProperty( "http://schema.org/musicalKey" );
    
    /** <p>The North American Industry Classification System (NAICS) code for a particular 
     *  organization or business person.</p>
     */
    public static final OntProperty naics = M_MODEL.createOntProperty( "http://schema.org/naics" );
    
    /** <p>The name of the item.</p> */
    public static final OntProperty name = M_MODEL.createOntProperty( "http://schema.org/name" );
    
    /** <p>A position played, performed or filled by a person or organization, as part 
     *  of an organization. For example, an athlete in a SportsTeam might play in 
     *  the position named 'Quarterback'.</p>
     */
    public static final OntProperty namedPosition = M_MODEL.createOntProperty( "http://schema.org/namedPosition" );
    
    /** <p>Nationality of the person.</p> */
    public static final OntProperty nationality = M_MODEL.createOntProperty( "http://schema.org/nationality" );
    
    /** <p>The expected progression of the condition if it is not treated and allowed 
     *  to progress naturally.</p>
     */
    public static final OntProperty naturalProgression = M_MODEL.createOntProperty( "http://schema.org/naturalProgression" );
    
    /** <p>Provides negative considerations regarding something, most typically in pro/con 
     *  lists for reviews (alongside [[positiveNotes]]). For symmetry In the case 
     *  of a [[Review]], the property describes the [[itemReviewed]] from the perspective 
     *  of the review; in the case of a [[Product]], the product itself is being described. 
     *  Since product descriptions tend to emphasise positive claims, it may be relatively 
     *  unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake 
     *  of symmetry, [[negativeNotes]] can be used on [[Product]]. The property values 
     *  can be expressed either as unstructured text (repeated as necessary), or if 
     *  ordered, as a list (in which case the most negative is at the beginning of 
     *  the list).</p>
     */
    public static final OntProperty negativeNotes = M_MODEL.createOntProperty( "http://schema.org/negativeNotes" );
    
    /** <p>The underlying innervation associated with the muscle.</p> */
    public static final OntProperty nerve = M_MODEL.createOntProperty( "http://schema.org/nerve" );
    
    /** <p>The neurological pathway extension that involves muscle control.</p> */
    public static final OntProperty nerveMotor = M_MODEL.createOntProperty( "http://schema.org/nerveMotor" );
    
    /** <p>The total financial value of the person as calculated by subtracting the total 
     *  value of liabilities from the total value of assets.</p>
     */
    public static final OntProperty netWorth = M_MODEL.createOntProperty( "http://schema.org/netWorth" );
    
    /** <p>Indicates a page with news updates and guidelines. This could often be (but 
     *  is not required to be) the main page containing [[SpecialAnnouncement]] markup 
     *  on a site.</p>
     */
    public static final OntProperty newsUpdatesAndGuidelines = M_MODEL.createOntProperty( "http://schema.org/newsUpdatesAndGuidelines" );
    
    /** <p>A link to the ListItem that follows the current one.</p> */
    public static final OntProperty nextItem = M_MODEL.createOntProperty( "http://schema.org/nextItem" );
    
    /** <p>For a [[NewsMediaOrganization]] or other news-related [[Organization]], a 
     *  statement explaining when authors of articles are not named in bylines.</p>
     */
    public static final OntProperty noBylinesPolicy = M_MODEL.createOntProperty( "http://schema.org/noBylinesPolicy" );
    
    /** <p>This ordering relation for qualitative values indicates that the subject is 
     *  not equal to the object.</p>
     */
    public static final OntProperty nonEqual = M_MODEL.createOntProperty( "http://schema.org/nonEqual" );
    
    /** <p>The generic name of this drug or supplement.</p> */
    public static final OntProperty nonProprietaryName = M_MODEL.createOntProperty( "http://schema.org/nonProprietaryName" );
    
    /** <p>nonprofitStatus indicates the legal status of a non-profit organization in 
     *  its primary place of business.</p>
     */
    public static final OntProperty nonprofitStatus = M_MODEL.createOntProperty( "http://schema.org/nonprofitStatus" );
    
    /** <p>Range of acceptable values for a typical patient, when applicable.</p> */
    public static final OntProperty normalRange = M_MODEL.createOntProperty( "http://schema.org/normalRange" );
    
    /** <p>Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) 
     *  (nsn) of a [[Product]].</p>
     */
    public static final OntProperty nsn = M_MODEL.createOntProperty( "http://schema.org/nsn" );
    
    /** <p>The number of adults staying in the unit.</p> */
    public static final OntProperty numAdults = M_MODEL.createOntProperty( "http://schema.org/numAdults" );
    
    /** <p>The number of children staying in the unit.</p> */
    public static final OntProperty numChildren = M_MODEL.createOntProperty( "http://schema.org/numChildren" );
    
    /** <p>Indicates the number of constraints property values defined for a particular 
     *  [[ConstraintNode]] such as [[StatisticalVariable]]. This helps applications 
     *  understand if they have access to a sufficiently complete description of a 
     *  [[StatisticalVariable]] or other construct that is defined using properties 
     *  on template-style nodes.</p>
     */
    public static final OntProperty numConstraints = M_MODEL.createOntProperty( "http://schema.org/numConstraints" );
    
    /** <p>Limits the number of items being shipped for which these conditions apply.</p> */
    public static final OntProperty numItems = M_MODEL.createOntProperty( "http://schema.org/numItems" );
    
    /** <p>The number of tracks in this album or playlist.</p> */
    public static final OntProperty numTracks = M_MODEL.createOntProperty( "http://schema.org/numTracks" );
    
    /** <p>Indicates the total (available plus unavailable) number of accommodation units 
     *  in an [[ApartmentComplex]], or the number of accommodation units for a specific 
     *  [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAvailableAccommodationUnits]].</p>
     */
    public static final OntProperty numberOfAccommodationUnits = M_MODEL.createOntProperty( "http://schema.org/numberOfAccommodationUnits" );
    
    /** <p>The number or type of airbags in the vehicle.</p> */
    public static final OntProperty numberOfAirbags = M_MODEL.createOntProperty( "http://schema.org/numberOfAirbags" );
    
    /** <p>Indicates the number of available accommodation units in an [[ApartmentComplex]], 
     *  or the number of accommodation units for a specific [[FloorPlan]] (within 
     *  its specific [[ApartmentComplex]]). See also [[numberOfAccommodationUnits]].</p>
     */
    public static final OntProperty numberOfAvailableAccommodationUnits = M_MODEL.createOntProperty( "http://schema.org/numberOfAvailableAccommodationUnits" );
    
    /** <p>The number of axles.
     *  
     *  Typical unit code(s): C62.</p>
     */
    public static final OntProperty numberOfAxles = M_MODEL.createOntProperty( "http://schema.org/numberOfAxles" );
    
    /** <p>The total integer number of bathrooms in some [[Accommodation]], following 
     *  real estate conventions as [documented in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsTotalInteger+Field): 
     *  "The simple sum of the number of bathrooms. For example for a property with 
     *  two Full Bathrooms and one Half Bathroom, the Bathrooms Total Integer will 
     *  be 3.". See also [[numberOfRooms]].</p>
     */
    public static final OntProperty numberOfBathroomsTotal = M_MODEL.createOntProperty( "http://schema.org/numberOfBathroomsTotal" );
    
    /** <p>The total integer number of bedrooms in a some [[Accommodation]], [[ApartmentComplex]] 
     *  or [[FloorPlan]].</p>
     */
    public static final OntProperty numberOfBedrooms = M_MODEL.createOntProperty( "http://schema.org/numberOfBedrooms" );
    
    /** <p>The quantity of the given bed type available in the HotelRoom, Suite, House, 
     *  or Apartment.</p>
     */
    public static final OntProperty numberOfBeds = M_MODEL.createOntProperty( "http://schema.org/numberOfBeds" );
    
    /** <p>The number of credits or units awarded by a Course or required to complete 
     *  an EducationalOccupationalProgram.</p>
     */
    public static final OntProperty numberOfCredits = M_MODEL.createOntProperty( "http://schema.org/numberOfCredits" );
    
    /** <p>The number of doors.
     *  
     *  Typical unit code(s): C62.</p>
     */
    public static final OntProperty numberOfDoors = M_MODEL.createOntProperty( "http://schema.org/numberOfDoors" );
    
    /** <p>The number of employees in an organization, e.g. business.</p> */
    public static final OntProperty numberOfEmployees = M_MODEL.createOntProperty( "http://schema.org/numberOfEmployees" );
    
    /** <p>The number of episodes in this season or series.</p> */
    public static final OntProperty numberOfEpisodes = M_MODEL.createOntProperty( "http://schema.org/numberOfEpisodes" );
    
    /** <p>The total number of forward gears available for the transmission system of 
     *  the vehicle.
     *  
     *  Typical unit code(s): C62.</p>
     */
    public static final OntProperty numberOfForwardGears = M_MODEL.createOntProperty( "http://schema.org/numberOfForwardGears" );
    
    /** <p>Number of full bathrooms - The total number of full and ¾ bathrooms in an 
     *  [[Accommodation]]. This corresponds to the [BathroomsFull field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsFull+Field).</p>
     */
    public static final OntProperty numberOfFullBathrooms = M_MODEL.createOntProperty( "http://schema.org/numberOfFullBathrooms" );
    
    /** <p>The number of items in an ItemList. Note that some descriptions might not 
     *  fully describe all items in a list (e.g., multi-page pagination); in such 
     *  cases, the numberOfItems would be for the entire list.</p>
     */
    public static final OntProperty numberOfItems = M_MODEL.createOntProperty( "http://schema.org/numberOfItems" );
    
    /** <p>The number of payments contractually required at origination to repay the 
     *  loan. For monthly paying loans this is the number of months from the contractual 
     *  first payment date to the maturity date.</p>
     */
    public static final OntProperty numberOfLoanPayments = M_MODEL.createOntProperty( "http://schema.org/numberOfLoanPayments" );
    
    /** <p>The number of pages in the book.</p> */
    public static final OntProperty numberOfPages = M_MODEL.createOntProperty( "http://schema.org/numberOfPages" );
    
    /** <p>Number of partial bathrooms - The total number of half and ¼ bathrooms in 
     *  an [[Accommodation]]. This corresponds to the [BathroomsPartial field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsPartial+Field).</p>
     */
    public static final OntProperty numberOfPartialBathrooms = M_MODEL.createOntProperty( "http://schema.org/numberOfPartialBathrooms" );
    
    /** <p>Indicate how many people can play this game (minimum, maximum, or range).</p> */
    public static final OntProperty numberOfPlayers = M_MODEL.createOntProperty( "http://schema.org/numberOfPlayers" );
    
    /** <p>The number of owners of the vehicle, including the current one.
     *  
     *  Typical unit code(s): C62.</p>
     */
    public static final OntProperty numberOfPreviousOwners = M_MODEL.createOntProperty( "http://schema.org/numberOfPreviousOwners" );
    
    /** <p>The number of rooms (excluding bathrooms and closets) of the accommodation 
     *  or lodging business. Typical unit code(s): ROM for room or C62 for no unit. 
     *  The type of room can be put in the unitText property of the QuantitativeValue.</p>
     */
    public static final OntProperty numberOfRooms = M_MODEL.createOntProperty( "http://schema.org/numberOfRooms" );
    
    /** <p>The number of seasons in this series.</p> */
    public static final OntProperty numberOfSeasons = M_MODEL.createOntProperty( "http://schema.org/numberOfSeasons" );
    
    /** <p>A number associated with a role in an organization, for example, the number 
     *  on an athlete's jersey.</p>
     */
    public static final OntProperty numberedPosition = M_MODEL.createOntProperty( "http://schema.org/numberedPosition" );
    
    /** <p>Nutrition information about the recipe or menu item.</p> */
    public static final OntProperty nutrition = M_MODEL.createOntProperty( "http://schema.org/nutrition" );
    
    /** <p>The object upon which the action is carried out, whose state is kept intact 
     *  or changed. Also known as the semantic roles patient, affected or undergoer 
     *  (which change their state) or theme (which doesn't). E.g. John read *a book*.</p>
     */
    public static final OntProperty object = M_MODEL.createOntProperty( "http://schema.org/object" );
    
    /** <p>The [[observationAbout]] property identifies an entity, often a [[Place]], 
     *  associated with an [[Observation]].</p>
     */
    public static final OntProperty observationAbout = M_MODEL.createOntProperty( "http://schema.org/observationAbout" );
    
    /** <p>The observationDate of an [[Observation]].</p> */
    public static final OntProperty observationDate = M_MODEL.createOntProperty( "http://schema.org/observationDate" );
    
    /** <p>The length of time an Observation took place over. The format follows `P[0-9]*[Y|M|D|h|m|s]`. 
     *  For example, P1Y is Period 1 Year, P3M is Period 3 Months, P3h is Period 3 
     *  hours.</p>
     */
    public static final OntProperty observationPeriod = M_MODEL.createOntProperty( "http://schema.org/observationPeriod" );
    
    /** <p>The allowed total occupancy for the accommodation in persons (including infants 
     *  etc). For individual accommodations, this is not necessarily the legal maximum 
     *  but defines the permitted usage as per the contractual agreement (e.g. a double 
     *  room used by a single person). Typical unit code(s): C62 for person.</p>
     */
    public static final OntProperty occupancy = M_MODEL.createOntProperty( "http://schema.org/occupancy" );
    
    /** <p>The region/country for which this occupational description is appropriate. 
     *  Note that educational requirements and qualifications can vary between jurisdictions.</p>
     */
    public static final OntProperty occupationLocation = M_MODEL.createOntProperty( "http://schema.org/occupationLocation" );
    
    /** <p>A category describing the job, preferably using a term from a taxonomy such 
     *  as [BLS O*NET-SOC](http://www.onetcenter.org/taxonomy.html), [ISCO-08](https://www.ilo.org/public/english/bureau/stat/isco/isco08/) 
     *  or similar, with the property repeated for each applicable value. Ideally 
     *  the taxonomy should be identified, and both the textual label and formal code 
     *  for the category should be provided.
     *   Note: for historical reasons, any textual label and formal code provided 
     *  as a literal may be assumed to be from O*NET-SOC.</p>
     */
    public static final OntProperty occupationalCategory = M_MODEL.createOntProperty( "http://schema.org/occupationalCategory" );
    
    /** <p>A description of the qualification, award, certificate, diploma or other occupational 
     *  credential awarded as a consequence of successful completion of this course 
     *  or program.</p>
     */
    public static final OntProperty occupationalCredentialAwarded = M_MODEL.createOntProperty( "http://schema.org/occupationalCredentialAwarded" );
    
    /** <p>The number of offers for the product.</p> */
    public static final OntProperty offerCount = M_MODEL.createOntProperty( "http://schema.org/offerCount" );
    
    /** <p>A pointer to the organization or person making the offer.</p> */
    public static final OntProperty offeredBy = M_MODEL.createOntProperty( "http://schema.org/offeredBy" );
    
    /** <p>An offer to provide this item&amp;#x2014;for example, an offer to sell a product, 
     *  rent the DVD of a movie, perform a service, or give away tickets to an event. 
     *  Use [[businessFunction]] to indicate the kind of transaction offered, i.e. 
     *  sell, lease, etc. This property can also be used to describe a [[Demand]]. 
     *  While this property is listed as expected on a number of common types, it 
     *  can be used in others. In that case, using a second type, such as Product 
     *  or a subtype of Product, can clarify the nature of the offer.</p>
     */
    public static final OntProperty offers = M_MODEL.createOntProperty( "http://schema.org/offers" );
    
    /** <p>Whether prescriptions can be delivered by mail.</p> */
    public static final OntProperty offersPrescriptionByMail = M_MODEL.createOntProperty( "http://schema.org/offersPrescriptionByMail" );
    
    /** <p>The general opening hours for a business. Opening hours can be specified as 
     *  a weekly time range, starting with days, then times per day. Multiple days 
     *  can be listed with commas ',' separating each day. Day or time ranges are 
     *  specified using a hyphen '-'.
     *  
     *  * Days are specified using the following two-letter combinations: ```Mo```, 
     *  ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.
     *  * Times are specified using 24:00 format. For example, 3pm is specified as 
     *  ```15:00```, 10am as ```10:00```. 
     *  * Here is an example: &lt;code&gt;&amp;lt;time itemprop="openingHours" datetime=&amp;quot;Tu,Th 
     *  16:00-20:00&amp;quot;&amp;gt;Tuesdays and Thursdays 4-8pm&amp;lt;/time&amp;gt;&lt;/code&gt;.
     *  * If a business is open 7 days a week, then it can be specified as &lt;code&gt;&amp;lt;time 
     *  itemprop=&amp;quot;openingHours&amp;quot; datetime=&amp;quot;Mo-Su&amp;quot;&amp;gt;Monday 
     *  through Sunday, all day&amp;lt;/time&amp;gt;&lt;/code&gt;.</p>
     */
    public static final OntProperty openingHours = M_MODEL.createOntProperty( "http://schema.org/openingHours" );
    
    /** <p>The opening hours of a certain place.</p> */
    public static final OntProperty openingHoursSpecification = M_MODEL.createOntProperty( "http://schema.org/openingHoursSpecification" );
    
    /** <p>The opening hour of the place or service on the given day(s) of the week.</p> */
    public static final OntProperty opens = M_MODEL.createOntProperty( "http://schema.org/opens" );
    
    /** <p>Operating systems supported (Windows 7, OS X 10.6, Android 1.6).</p> */
    public static final OntProperty operatingSystem = M_MODEL.createOntProperty( "http://schema.org/operatingSystem" );
    
    /** <p>A sub property of participant. The opponent on this action.</p> */
    public static final OntProperty opponent = M_MODEL.createOntProperty( "http://schema.org/opponent" );
    
    /** <p>A sub property of object. The options subject to this action.</p> */
    public static final OntProperty option = M_MODEL.createOntProperty( "http://schema.org/option" );
    
    /** <p>Date order was placed.</p> */
    public static final OntProperty orderDate = M_MODEL.createOntProperty( "http://schema.org/orderDate" );
    
    /** <p>The delivery of the parcel related to this order or order item.</p> */
    public static final OntProperty orderDelivery = M_MODEL.createOntProperty( "http://schema.org/orderDelivery" );
    
    /** <p>The identifier of the order item.</p> */
    public static final OntProperty orderItemNumber = M_MODEL.createOntProperty( "http://schema.org/orderItemNumber" );
    
    /** <p>The current status of the order item.</p> */
    public static final OntProperty orderItemStatus = M_MODEL.createOntProperty( "http://schema.org/orderItemStatus" );
    
    /** <p>The identifier of the transaction.</p> */
    public static final OntProperty orderNumber = M_MODEL.createOntProperty( "http://schema.org/orderNumber" );
    
    /** <p>Fraction of the value of the order that is charged as shipping cost.</p> */
    public static final OntProperty orderPercentage = M_MODEL.createOntProperty( "http://schema.org/orderPercentage" );
    
    /** <p>The number of the item ordered. If the property is not set, assume the quantity 
     *  is one.</p>
     */
    public static final OntProperty orderQuantity = M_MODEL.createOntProperty( "http://schema.org/orderQuantity" );
    
    /** <p>The current status of the order.</p> */
    public static final OntProperty orderStatus = M_MODEL.createOntProperty( "http://schema.org/orderStatus" );
    
    /** <p>Minimum and maximum order value for which these shipping conditions are valid.</p> */
    public static final OntProperty orderValue = M_MODEL.createOntProperty( "http://schema.org/orderValue" );
    
    /** <p>The item ordered.</p> */
    public static final OntProperty orderedItem = M_MODEL.createOntProperty( "http://schema.org/orderedItem" );
    
    /** <p>An organizer of an Event.</p> */
    public static final OntProperty organizer = M_MODEL.createOntProperty( "http://schema.org/organizer" );
    
    /** <p>Shipper's address.</p> */
    public static final OntProperty originAddress = M_MODEL.createOntProperty( "http://schema.org/originAddress" );
    
    /** <p>Describes, in a [[MediaReview]] when dealing with [[DecontextualizedContent]], 
     *  background information that can contribute to better interpretation of the 
     *  [[MediaObject]].</p>
     */
    public static final OntProperty originalMediaContextDescription = M_MODEL.createOntProperty( "http://schema.org/originalMediaContextDescription" );
    
    /** <p>Link to the page containing an original version of the content, or directly 
     *  to an online copy of the original [[MediaObject]] content, e.g. video file.</p>
     */
    public static final OntProperty originalMediaLink = M_MODEL.createOntProperty( "http://schema.org/originalMediaLink" );
    
    /** <p>The vasculature the lymphatic structure originates, or afferents, from.</p> */
    public static final OntProperty originatesFrom = M_MODEL.createOntProperty( "http://schema.org/originatesFrom" );
    
    /** <p>Any information related to overdose on a drug, including signs or symptoms, 
     *  treatments, contact information for emergency response.</p>
     */
    public static final OntProperty overdosage = M_MODEL.createOntProperty( "http://schema.org/overdosage" );
    
    /** <p>The date and time of obtaining the product.</p> */
    public static final OntProperty ownedFrom = M_MODEL.createOntProperty( "http://schema.org/ownedFrom" );
    
    /** <p>The date and time of giving up ownership on the product.</p> */
    public static final OntProperty ownedThrough = M_MODEL.createOntProperty( "http://schema.org/ownedThrough" );
    
    /** <p>For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), 
     *  a description of organizational ownership structure; funding and grants. In 
     *  a news/media setting, this is with particular reference to editorial independence. 
     *  Note that the [[funder]] is also available and can be used to make basic funder 
     *  information machine-readable.</p>
     */
    public static final OntProperty ownershipFundingInfo = M_MODEL.createOntProperty( "http://schema.org/ownershipFundingInfo" );
    
    /** <p>Products owned by the organization or person.</p> */
    public static final OntProperty owns = M_MODEL.createOntProperty( "http://schema.org/owns" );
    
    /** <p>The page on which the work ends; for example "138" or "xvi".</p> */
    public static final OntProperty pageEnd_PROP = M_MODEL.createOntProperty( "http://schema.org/pageEnd" );
    
    /** <p>The page on which the work starts; for example "135" or "xiii".</p> */
    public static final OntProperty pageStart_PROP = M_MODEL.createOntProperty( "http://schema.org/pageStart" );
    
    /** <p>Any description of pages that is not separated into pageStart and pageEnd; 
     *  for example, "1-6, 9, 55" or "10-12, 46-49".</p>
     */
    public static final OntProperty pagination = M_MODEL.createOntProperty( "http://schema.org/pagination" );
    
    /** <p>A parent of this person.</p> */
    public static final OntProperty parent = M_MODEL.createOntProperty( "http://schema.org/parent" );
    
    /** <p>The parent of a question, answer or item in general. Typically used for Q/A 
     *  discussion threads e.g. a chain of comments with the first comment being an 
     *  [[Article]] or other [[CreativeWork]]. See also [[comment]] which points from 
     *  something to a comment about it.</p>
     */
    public static final OntProperty parentItem = M_MODEL.createOntProperty( "http://schema.org/parentItem" );
    
    /** <p>The larger organization that this organization is a [[subOrganization]] of, 
     *  if any.</p>
     */
    public static final OntProperty parentOrganization = M_MODEL.createOntProperty( "http://schema.org/parentOrganization" );
    
    /** <p>A broadcast service to which the broadcast service may belong to such as regional 
     *  variations of a national channel.</p>
     */
    public static final OntProperty parentService = M_MODEL.createOntProperty( "http://schema.org/parentService" );
    
    /** <p>Closest parent taxon of the taxon in question.</p> */
    public static final OntProperty parentTaxon = M_MODEL.createOntProperty( "http://schema.org/parentTaxon" );
    
    /** <p>A parents of the person.</p> */
    public static final OntProperty parents = M_MODEL.createOntProperty( "http://schema.org/parents" );
    
    /** <p>The episode to which this clip belongs.</p> */
    public static final OntProperty partOfEpisode = M_MODEL.createOntProperty( "http://schema.org/partOfEpisode" );
    
    /** <p>The order is being paid as part of the referenced Invoice.</p> */
    public static final OntProperty partOfInvoice = M_MODEL.createOntProperty( "http://schema.org/partOfInvoice" );
    
    /** <p>The overall order the items in this delivery were included in.</p> */
    public static final OntProperty partOfOrder = M_MODEL.createOntProperty( "http://schema.org/partOfOrder" );
    
    /** <p>The season to which this episode belongs.</p> */
    public static final OntProperty partOfSeason = M_MODEL.createOntProperty( "http://schema.org/partOfSeason" );
    
    /** <p>The series to which this episode or season belongs.</p> */
    public static final OntProperty partOfSeries = M_MODEL.createOntProperty( "http://schema.org/partOfSeries" );
    
    /** <p>The anatomical or organ system that this structure is part of.</p> */
    public static final OntProperty partOfSystem = M_MODEL.createOntProperty( "http://schema.org/partOfSystem" );
    
    /** <p>The TV series to which this episode or season belongs.</p> */
    public static final OntProperty partOfTVSeries = M_MODEL.createOntProperty( "http://schema.org/partOfTVSeries" );
    
    /** <p>Identifies that this [[Trip]] is a subTrip of another Trip. For example Day 
     *  1, Day 2, etc. of a multi-day trip.</p>
     */
    public static final OntProperty partOfTrip = M_MODEL.createOntProperty( "http://schema.org/partOfTrip" );
    
    /** <p>Other co-agents that participated in the action indirectly. E.g. John wrote 
     *  a book with *Steve*.</p>
     */
    public static final OntProperty participant = M_MODEL.createOntProperty( "http://schema.org/participant" );
    
    /** <p>Number of people the reservation should accommodate.</p> */
    public static final OntProperty partySize = M_MODEL.createOntProperty( "http://schema.org/partySize" );
    
    /** <p>The priority status assigned to a passenger for security or boarding (e.g. 
     *  FastTrack or Priority).</p>
     */
    public static final OntProperty passengerPriorityStatus = M_MODEL.createOntProperty( "http://schema.org/passengerPriorityStatus" );
    
    /** <p>The passenger's sequence number as assigned by the airline.</p> */
    public static final OntProperty passengerSequenceNumber = M_MODEL.createOntProperty( "http://schema.org/passengerSequenceNumber" );
    
    /** <p>Changes in the normal mechanical, physical, and biochemical functions that 
     *  are associated with this activity or condition.</p>
     */
    public static final OntProperty pathophysiology = M_MODEL.createOntProperty( "http://schema.org/pathophysiology" );
    
    /** <p>A pattern that something has, for example 'polka dot', 'striped', 'Canadian 
     *  flag'. Values are typically expressed as text, although links to controlled 
     *  value schemes are also supported.</p>
     */
    public static final OntProperty pattern = M_MODEL.createOntProperty( "http://schema.org/pattern" );
    
    /** <p>The permitted weight of passengers and cargo, EXCLUDING the weight of the 
     *  empty vehicle.
     *  
     *  Typical unit code(s): KGM for kilogram, LBR for pound
     *  
     *  * Note 1: Many databases specify the permitted TOTAL weight instead, which 
     *  is the sum of [[weight]] and [[payload]]
     *  * Note 2: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] 
     *  node.
     *  * Note 3: You may also link to a [[QualitativeValue]] node that provides additional 
     *  information using [[valueReference]].
     *  * Note 4: Note that you can use [[minValue]] and [[maxValue]] to indicate 
     *  ranges.</p>
     */
    public static final OntProperty payload = M_MODEL.createOntProperty( "http://schema.org/payload" );
    
    /** <p>Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.</p> */
    public static final OntProperty paymentAccepted = M_MODEL.createOntProperty( "http://schema.org/paymentAccepted" );
    
    /** <p>The date that payment is due.</p> */
    public static final OntProperty paymentDue = M_MODEL.createOntProperty( "http://schema.org/paymentDue" );
    
    /** <p>The date that payment is due.</p> */
    public static final OntProperty paymentDueDate = M_MODEL.createOntProperty( "http://schema.org/paymentDueDate" );
    
    /** <p>The name of the credit card or other method of payment for the order.</p> */
    public static final OntProperty paymentMethod = M_MODEL.createOntProperty( "http://schema.org/paymentMethod" );
    
    /** <p>An identifier for the method of payment used (e.g. the last 4 digits of the 
     *  credit card).</p>
     */
    public static final OntProperty paymentMethodId = M_MODEL.createOntProperty( "http://schema.org/paymentMethodId" );
    
    /** <p>The type of a payment method.</p> */
    public static final OntProperty paymentMethodType = M_MODEL.createOntProperty( "http://schema.org/paymentMethodType" );
    
    /** <p>The status of payment; whether the invoice has been paid or not.</p> */
    public static final OntProperty paymentStatus = M_MODEL.createOntProperty( "http://schema.org/paymentStatus" );
    
    /** <p>The URL for sending a payment.</p> */
    public static final OntProperty paymentUrl = M_MODEL.createOntProperty( "http://schema.org/paymentUrl" );
    
    /** <p>The individual who draws the primary narrative artwork.</p> */
    public static final OntProperty penciler = M_MODEL.createOntProperty( "http://schema.org/penciler" );
    
    /** <p>The 10th percentile value.</p> */
    public static final OntProperty percentile10 = M_MODEL.createOntProperty( "http://schema.org/percentile10" );
    
    /** <p>The 25th percentile value.</p> */
    public static final OntProperty percentile25 = M_MODEL.createOntProperty( "http://schema.org/percentile25" );
    
    /** <p>The 75th percentile value.</p> */
    public static final OntProperty percentile75 = M_MODEL.createOntProperty( "http://schema.org/percentile75" );
    
    /** <p>The 90th percentile value.</p> */
    public static final OntProperty percentile90 = M_MODEL.createOntProperty( "http://schema.org/percentile90" );
    
    /** <p>The length of time it takes to perform instructions or a direction (not including 
     *  time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).</p>
     */
    public static final OntProperty performTime = M_MODEL.createOntProperty( "http://schema.org/performTime" );
    
    /** <p>A performer at the event&amp;#x2014;for example, a presenter, musician, musical 
     *  group or actor.</p>
     */
    public static final OntProperty performer = M_MODEL.createOntProperty( "http://schema.org/performer" );
    
    /** <p>Event that this person is a performer or participant in.</p> */
    public static final OntProperty performerIn = M_MODEL.createOntProperty( "http://schema.org/performerIn" );
    
    /** <p>The main performer or performers of the event&amp;#x2014;for example, a presenter, 
     *  musician, or actor.</p>
     */
    public static final OntProperty performers = M_MODEL.createOntProperty( "http://schema.org/performers" );
    
    /** <p>The type of permission granted the person, organization, or audience.</p> */
    public static final OntProperty permissionType = M_MODEL.createOntProperty( "http://schema.org/permissionType" );
    
    /** <p>Permission(s) required to run the app (for example, a mobile app may require 
     *  full internet access or may run only on wifi).</p>
     */
    public static final OntProperty permissions = M_MODEL.createOntProperty( "http://schema.org/permissions" );
    
    /** <p>The target audience for this permit.</p> */
    public static final OntProperty permitAudience = M_MODEL.createOntProperty( "http://schema.org/permitAudience" );
    
    /** <p>Indications regarding the permitted usage of the accommodation.</p> */
    public static final OntProperty permittedUsage = M_MODEL.createOntProperty( "http://schema.org/permittedUsage" );
    
    /** <p>Indicates whether pets are allowed to enter the accommodation or lodging business. 
     *  More detailed information can be put in a text value.</p>
     */
    public static final OntProperty petsAllowed = M_MODEL.createOntProperty( "http://schema.org/petsAllowed" );
    
    /** <p>Representation of a text [[textValue]] using the specified [[speechToTextMarkup]]. 
     *  For example the city name of Houston in IPA: /ˈhjuːstən/.</p>
     */
    public static final OntProperty phoneticText = M_MODEL.createOntProperty( "http://schema.org/phoneticText" );
    
    /** <p>A photograph of this place.</p> */
    public static final OntProperty photo = M_MODEL.createOntProperty( "http://schema.org/photo" );
    
    /** <p>Photographs of this place.</p> */
    public static final OntProperty photos = M_MODEL.createOntProperty( "http://schema.org/photos" );
    
    /** <p>A description of the types of physical activity associated with the job. Defined 
     *  terms such as those in O*net may be used, but note that there is no way to 
     *  specify the level of ability as well as its nature when using a defined term.</p>
     */
    public static final OntProperty physicalRequirement = M_MODEL.createOntProperty( "http://schema.org/physicalRequirement" );
    
    /** <p>Specific physiologic benefits associated to the plan.</p> */
    public static final OntProperty physiologicalBenefits = M_MODEL.createOntProperty( "http://schema.org/physiologicalBenefits" );
    
    /** <p>Where a taxi will pick up a passenger or a rental car can be picked up.</p> */
    public static final OntProperty pickupLocation = M_MODEL.createOntProperty( "http://schema.org/pickupLocation" );
    
    /** <p>When a taxi will pick up a passenger or a rental car can be picked up.</p> */
    public static final OntProperty pickupTime = M_MODEL.createOntProperty( "http://schema.org/pickupTime" );
    
    /** <p>Indicates whether this game is multi-player, co-op or single-player. The game 
     *  can be marked as multi-player, co-op and single-player at the same time.</p>
     */
    public static final OntProperty playMode = M_MODEL.createOntProperty( "http://schema.org/playMode" );
    
    /** <p>Player type required&amp;#x2014;for example, Flash or Silverlight.</p> */
    public static final OntProperty playerType = M_MODEL.createOntProperty( "http://schema.org/playerType" );
    
    /** <p>Number of players on the server.</p> */
    public static final OntProperty playersOnline = M_MODEL.createOntProperty( "http://schema.org/playersOnline" );
    
    /** <p>A polygon is the area enclosed by a point-to-point path for which the starting 
     *  and ending points are the same. A polygon is expressed as a series of four 
     *  or more space delimited points where the first and final points are identical.</p>
     */
    public static final OntProperty polygon = M_MODEL.createOntProperty( "http://schema.org/polygon" );
    
    /** <p>Indicates the populationType common to all members of a [[StatisticalPopulation]] 
     *  or all cases within the scope of a [[StatisticalVariable]].</p>
     */
    public static final OntProperty populationType = M_MODEL.createOntProperty( "http://schema.org/populationType" );
    
    /** <p>The position of an item in a series or sequence of items.</p> */
    public static final OntProperty position = M_MODEL.createOntProperty( "http://schema.org/position" );
    
    /** <p>Provides positive considerations regarding something, for example product 
     *  highlights or (alongside [[negativeNotes]]) pro/con lists for reviews. In 
     *  the case of a [[Review]], the property describes the [[itemReviewed]] from 
     *  the perspective of the review; in the case of a [[Product]], the product itself 
     *  is being described. The property values can be expressed either as unstructured 
     *  text (repeated as necessary), or if ordered, as a list (in which case the 
     *  most positive is at the beginning of the list).</p>
     */
    public static final OntProperty positiveNotes = M_MODEL.createOntProperty( "http://schema.org/positiveNotes" );
    
    /** <p>A possible unexpected and unfavorable evolution of a medical condition. Complications 
     *  may include worsening of the signs or symptoms of the disease, extension of 
     *  the condition to other organ systems, etc.</p>
     */
    public static final OntProperty possibleComplication = M_MODEL.createOntProperty( "http://schema.org/possibleComplication" );
    
    /** <p>A possible treatment to address this condition, sign or symptom.</p> */
    public static final OntProperty possibleTreatment = M_MODEL.createOntProperty( "http://schema.org/possibleTreatment" );
    
    /** <p>The post office box number for PO box addresses.</p> */
    public static final OntProperty postOfficeBoxNumber = M_MODEL.createOntProperty( "http://schema.org/postOfficeBoxNumber" );
    
    /** <p>A description of the postoperative procedures, care, and/or followups for 
     *  this device.</p>
     */
    public static final OntProperty postOp = M_MODEL.createOntProperty( "http://schema.org/postOp" );
    
    /** <p>The postal code. For example, 94043.</p> */
    public static final OntProperty postalCode = M_MODEL.createOntProperty( "http://schema.org/postalCode" );
    
    /** <p>First postal code in a range (included).</p> */
    public static final OntProperty postalCodeBegin = M_MODEL.createOntProperty( "http://schema.org/postalCodeBegin" );
    
    /** <p>Last postal code in the range (included). Needs to be after [[postalCodeBegin]].</p> */
    public static final OntProperty postalCodeEnd = M_MODEL.createOntProperty( "http://schema.org/postalCodeEnd" );
    
    /** <p>A defined range of postal codes indicated by a common textual prefix. Used 
     *  for non-numeric systems such as UK.</p>
     */
    public static final OntProperty postalCodePrefix = M_MODEL.createOntProperty( "http://schema.org/postalCodePrefix" );
    
    /** <p>A defined range of postal codes.</p> */
    public static final OntProperty postalCodeRange = M_MODEL.createOntProperty( "http://schema.org/postalCodeRange" );
    
    /** <p>Indicates a potential Action, which describes an idealized action in which 
     *  this thing would play an 'object' role.</p>
     */
    public static final OntProperty potentialAction = M_MODEL.createOntProperty( "http://schema.org/potentialAction" );
    
    /** <p>Intended use of the BioChemEntity by humans.</p> */
    public static final OntProperty potentialUse = M_MODEL.createOntProperty( "http://schema.org/potentialUse" );
    
    /** <p>A [[MedicalOrganization]] where the [[IndividualPhysician]] practices.</p> */
    public static final OntProperty practicesAt = M_MODEL.createOntProperty( "http://schema.org/practicesAt" );
    
    /** <p>A description of the workup, testing, and other preparations required before 
     *  implanting this device.</p>
     */
    public static final OntProperty preOp = M_MODEL.createOntProperty( "http://schema.org/preOp" );
    
    /** <p>A pointer from a previous, often discontinued variant of the product to its 
     *  newer variant.</p>
     */
    public static final OntProperty predecessorOf = M_MODEL.createOntProperty( "http://schema.org/predecessorOf" );
    
    /** <p>Pregnancy category of this drug.</p> */
    public static final OntProperty pregnancyCategory = M_MODEL.createOntProperty( "http://schema.org/pregnancyCategory" );
    
    /** <p>Any precaution, guidance, contraindication, etc. related to this drug's use 
     *  during pregnancy.</p>
     */
    public static final OntProperty pregnancyWarning = M_MODEL.createOntProperty( "http://schema.org/pregnancyWarning" );
    
    /** <p>The length of time it takes to prepare the items to be used in instructions 
     *  or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).</p>
     */
    public static final OntProperty prepTime = M_MODEL.createOntProperty( "http://schema.org/prepTime" );
    
    /** <p>Typical preparation that a patient must undergo before having the procedure 
     *  performed.</p>
     */
    public static final OntProperty preparation = M_MODEL.createOntProperty( "http://schema.org/preparation" );
    
    /** <p>Link to prescribing information for the drug.</p> */
    public static final OntProperty prescribingInfo = M_MODEL.createOntProperty( "http://schema.org/prescribingInfo" );
    
    /** <p>Indicates the status of drug prescription, e.g. local catalogs classifications 
     *  or whether the drug is available by prescription or over-the-counter, etc.</p>
     */
    public static final OntProperty prescriptionStatus = M_MODEL.createOntProperty( "http://schema.org/prescriptionStatus" );
    
    /** <p>A link to the ListItem that precedes the current one.</p> */
    public static final OntProperty previousItem = M_MODEL.createOntProperty( "http://schema.org/previousItem" );
    
    /** <p>Used in conjunction with eventStatus for rescheduled or cancelled events. 
     *  This property contains the previously scheduled start date. For rescheduled 
     *  events, the startDate property should be used for the newly scheduled start 
     *  date. In the (rare) case of an event that has been postponed and rescheduled 
     *  multiple times, this field may be repeated.</p>
     */
    public static final OntProperty previousStartDate = M_MODEL.createOntProperty( "http://schema.org/previousStartDate" );
    
    /** <p>The offer price of a product, or of a price component when attached to PriceSpecification 
     *  and its subtypes.
     *  
     *  Usage guidelines:
     *  
     *  * Use the [[priceCurrency]] property (with standard formats: [ISO 4217 currency 
     *  format](http://en.wikipedia.org/wiki/ISO_4217), e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) 
     *  for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading 
     *  Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) 
     *  and other currency types, e.g. "Ithaca HOUR") instead of including [ambiguous 
     *  symbols](http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign) 
     *  such as '$' in the value.
     *  * Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal 
     *  point. Avoid using these symbols as a readability separator.
     *  * Note that both [RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute) 
     *  and Microdata syntax allow the use of a "content=" attribute for publishing 
     *  simple machine-readable values alongside more human-friendly formatting.
     *  * Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' 
     *  (U+0039)) rather than superficially similar Unicode symbols.</p>
     */
    public static final OntProperty price = M_MODEL.createOntProperty( "http://schema.org/price" );
    
    /** <p>This property links to all [[UnitPriceSpecification]] nodes that apply in 
     *  parallel for the [[CompoundPriceSpecification]] node.</p>
     */
    public static final OntProperty priceComponent = M_MODEL.createOntProperty( "http://schema.org/priceComponent" );
    
    /** <p>Identifies a price component (for example, a line item on an invoice), part 
     *  of the total price for an offer.</p>
     */
    public static final OntProperty priceComponentType = M_MODEL.createOntProperty( "http://schema.org/priceComponentType" );
    
    /** <p>The currency of the price, or a price component when attached to [[PriceSpecification]] 
     *  and its subtypes.
     *  
     *  Use standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), 
     *  e.g. "USD"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) 
     *  for cryptocurrencies, e.g. "BTC"; well known names for [Local Exchange Trading 
     *  Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) 
     *  and other currency types, e.g. "Ithaca HOUR".</p>
     */
    public static final OntProperty priceCurrency = M_MODEL.createOntProperty( "http://schema.org/priceCurrency" );
    
    /** <p>The price range of the business, for example ```$$$```.</p> */
    public static final OntProperty priceRange = M_MODEL.createOntProperty( "http://schema.org/priceRange" );
    
    /** <p>One or more detailed price specifications, indicating the unit price and delivery 
     *  or payment charges.</p>
     */
    public static final OntProperty priceSpecification = M_MODEL.createOntProperty( "http://schema.org/priceSpecification" );
    
    /** <p>Defines the type of a price specified for an offered product, for example 
     *  a list price, a (temporary) sale price or a manufacturer suggested retail 
     *  price. If multiple prices are specified for an offer the [[priceType]] property 
     *  can be used to identify the type of each such specified price. The value of 
     *  priceType can be specified as a value from enumeration PriceTypeEnumeration 
     *  or as a free form text string for price types that are not already predefined 
     *  in PriceTypeEnumeration.</p>
     */
    public static final OntProperty priceType = M_MODEL.createOntProperty( "http://schema.org/priceType" );
    
    /** <p>The date after which the price is no longer available.</p> */
    public static final OntProperty priceValidUntil = M_MODEL.createOntProperty( "http://schema.org/priceValidUntil" );
    
    /** <p>Indicates the main image on the page.</p> */
    public static final OntProperty primaryImageOfPage = M_MODEL.createOntProperty( "http://schema.org/primaryImageOfPage" );
    
    /** <p>A preventative therapy used to prevent an initial occurrence of the medical 
     *  condition, such as vaccination.</p>
     */
    public static final OntProperty primaryPrevention = M_MODEL.createOntProperty( "http://schema.org/primaryPrevention" );
    
    /** <p>The number of the column in which the NewsArticle appears in the print edition.</p> */
    public static final OntProperty printColumn = M_MODEL.createOntProperty( "http://schema.org/printColumn" );
    
    /** <p>The edition of the print product in which the NewsArticle appears.</p> */
    public static final OntProperty printEdition = M_MODEL.createOntProperty( "http://schema.org/printEdition" );
    
    /** <p>If this NewsArticle appears in print, this field indicates the name of the 
     *  page on which the article is found. Please note that this field is intended 
     *  for the exact page name (e.g. A5, B18).</p>
     */
    public static final OntProperty printPage = M_MODEL.createOntProperty( "http://schema.org/printPage" );
    
    /** <p>If this NewsArticle appears in print, this field indicates the print section 
     *  in which the article appeared.</p>
     */
    public static final OntProperty printSection = M_MODEL.createOntProperty( "http://schema.org/printSection" );
    
    /** <p>A description of the procedure involved in setting up, using, and/or installing 
     *  the device.</p>
     */
    public static final OntProperty procedure = M_MODEL.createOntProperty( "http://schema.org/procedure" );
    
    /** <p>The type of procedure, for example Surgical, Noninvasive, or Percutaneous.</p> */
    public static final OntProperty procedureType = M_MODEL.createOntProperty( "http://schema.org/procedureType" );
    
    /** <p>Estimated processing time for the service using this channel.</p> */
    public static final OntProperty processingTime = M_MODEL.createOntProperty( "http://schema.org/processingTime" );
    
    /** <p>Processor architecture required to run the application (e.g. IA64).</p> */
    public static final OntProperty processorRequirements = M_MODEL.createOntProperty( "http://schema.org/processorRequirements" );
    
    /** <p>The person or organization who produced the work (e.g. music album, movie, 
     *  TV/radio series etc.).</p>
     */
    public static final OntProperty producer = M_MODEL.createOntProperty( "http://schema.org/producer" );
    
    /** <p>The tangible thing generated by the service, e.g. a passport, permit, etc.</p> */
    public static final OntProperty produces = M_MODEL.createOntProperty( "http://schema.org/produces" );
    
    /** <p>Indicates a textual identifier for a ProductGroup.</p> */
    public static final OntProperty productGroupID = M_MODEL.createOntProperty( "http://schema.org/productGroupID" );
    
    /** <p>The product identifier, such as ISBN. For example: ``` meta itemprop="productID" 
     *  content="isbn:123-456-789" ```.</p>
     */
    public static final OntProperty productID = M_MODEL.createOntProperty( "http://schema.org/productID" );
    
    /** <p>The product or service this support contact point is related to (such as product 
     *  support for a particular product line). This can be a specific product or 
     *  product line (e.g. "iPhone") or a general category of products or services 
     *  (e.g. "smartphones").</p>
     */
    public static final OntProperty productSupported = M_MODEL.createOntProperty( "http://schema.org/productSupported" );
    
    /** <p>The production company or studio responsible for the item, e.g. series, video 
     *  game, episode etc.</p>
     */
    public static final OntProperty productionCompany = M_MODEL.createOntProperty( "http://schema.org/productionCompany" );
    
    /** <p>The date of production of the item, e.g. vehicle.</p> */
    public static final OntProperty productionDate = M_MODEL.createOntProperty( "http://schema.org/productionDate" );
    
    /** <p>Proficiency needed for this content; expected values: 'Beginner', 'Expert'.</p> */
    public static final OntProperty proficiencyLevel = M_MODEL.createOntProperty( "http://schema.org/proficiencyLevel" );
    
    /** <p>The [MemberProgram](http://schema.org/MemberProgram) associated with a [ProgramMembership](http://schema.org/ProgramMembership).</p> */
    public static final OntProperty program = M_MODEL.createOntProperty( "http://schema.org/program" );
    
    /** <p>Any membership in a frequent flyer, hotel loyalty program, etc. being applied 
     *  to the reservation.</p>
     */
    public static final OntProperty programMembershipUsed = M_MODEL.createOntProperty( "http://schema.org/programMembershipUsed" );
    
    /** <p>The program providing the membership. It is preferable to use [:program](http://schema.org/program) 
     *  instead.</p>
     */
    public static final OntProperty programName = M_MODEL.createOntProperty( "http://schema.org/programName" );
    
    /** <p>Prerequisites for enrolling in the program.</p> */
    public static final OntProperty programPrerequisites = M_MODEL.createOntProperty( "http://schema.org/programPrerequisites" );
    
    /** <p>The type of educational or occupational program. For example, classroom, internship, 
     *  alternance, etc.</p>
     */
    public static final OntProperty programType = M_MODEL.createOntProperty( "http://schema.org/programType" );
    
    /** <p>The computer programming language.</p> */
    public static final OntProperty programmingLanguage = M_MODEL.createOntProperty( "http://schema.org/programmingLanguage" );
    
    /** <p>Indicates whether API is managed or unmanaged.</p> */
    public static final OntProperty programmingModel = M_MODEL.createOntProperty( "http://schema.org/programmingModel" );
    
    /** <p>A commonly used identifier for the characteristic represented by the property, 
     *  e.g. a manufacturer or a standard code for a property. propertyID can be (1) 
     *  a prefixed string, mainly meant to be used with standards for product properties; 
     *  (2) a site-specific, non-prefixed string (e.g. the primary key of the property 
     *  or the vendor-specific ID of the property), or (3) a URL indicating the type 
     *  of the property, either pointing to an external vocabulary, or a Web resource 
     *  that describes the property (e.g. a glossary entry). Standards bodies should 
     *  promote a standard prefix for the identifiers of properties from their standards.</p>
     */
    public static final OntProperty propertyID = M_MODEL.createOntProperty( "http://schema.org/propertyID" );
    
    /** <p>Proprietary name given to the diet plan, typically by its originator or creator.</p> */
    public static final OntProperty proprietaryName = M_MODEL.createOntProperty( "http://schema.org/proprietaryName" );
    
    /** <p>The number of grams of protein.</p> */
    public static final OntProperty proteinContent = M_MODEL.createOntProperty( "http://schema.org/proteinContent" );
    
    /** <p>The service provider, service operator, or service performer; the goods producer. 
     *  Another party (a seller) may offer those services or goods on behalf of the 
     *  provider. A provider may also serve as the seller.</p>
     */
    public static final OntProperty provider = M_MODEL.createOntProperty( "http://schema.org/provider" );
    
    /** <p>Indicates the mobility of a provided service (e.g. 'static', 'dynamic').</p> */
    public static final OntProperty providerMobility = M_MODEL.createOntProperty( "http://schema.org/providerMobility" );
    
    /** <p>The BroadcastService offered on this channel.</p> */
    public static final OntProperty providesBroadcastService = M_MODEL.createOntProperty( "http://schema.org/providesBroadcastService" );
    
    /** <p>The service provided by this channel.</p> */
    public static final OntProperty providesService = M_MODEL.createOntProperty( "http://schema.org/providesService" );
    
    /** <p>A flag to signal that the [[Place]] is open to public visitors. If this property 
     *  is omitted there is no assumed default boolean value.</p>
     */
    public static final OntProperty publicAccess = M_MODEL.createOntProperty( "http://schema.org/publicAccess" );
    
    /** <p>Information about public transport closures.</p> */
    public static final OntProperty publicTransportClosuresInfo = M_MODEL.createOntProperty( "http://schema.org/publicTransportClosuresInfo" );
    
    /** <p>A publication event associated with the item.</p> */
    public static final OntProperty publication = M_MODEL.createOntProperty( "http://schema.org/publication" );
    
    /** <p>The type of the medical article, taken from the US NLM MeSH publication type 
     *  catalog. See also [MeSH documentation](http://www.nlm.nih.gov/mesh/pubtypes.html).</p>
     */
    public static final OntProperty publicationType = M_MODEL.createOntProperty( "http://schema.org/publicationType" );
    
    /** <p>An agent associated with the publication event.</p> */
    public static final OntProperty publishedBy = M_MODEL.createOntProperty( "http://schema.org/publishedBy" );
    
    /** <p>A broadcast service associated with the publication event.</p> */
    public static final OntProperty publishedOn = M_MODEL.createOntProperty( "http://schema.org/publishedOn" );
    
    /** <p>The publisher of the article in question.</p> */
    public static final OntProperty publisher = M_MODEL.createOntProperty( "http://schema.org/publisher" );
    
    /** <p>The publishing division which published the comic.</p> */
    public static final OntProperty publisherImprint = M_MODEL.createOntProperty( "http://schema.org/publisherImprint" );
    
    /** <p>The publishingPrinciples property indicates (typically via [[URL]]) a document 
     *  describing the editorial principles of an [[Organization]] (or individual, 
     *  e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, 
     *  e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. 
     *  [[NewsArticle]]) the principles are those of the party primarily responsible 
     *  for the creation of the [[CreativeWork]]. While such policies are most typically 
     *  expressed in natural language, sometimes related information (e.g. indicating 
     *  a [[funder]]) can be expressed using schema.org terminology.</p>
     */
    public static final OntProperty publishingPrinciples = M_MODEL.createOntProperty( "http://schema.org/publishingPrinciples" );
    
    /** <p>The date the item, e.g. vehicle, was purchased by the current owner.</p> */
    public static final OntProperty purchaseDate = M_MODEL.createOntProperty( "http://schema.org/purchaseDate" );
    
    /** <p>Optional. The maximum price the item can have and still qualify for this offer.</p> */
    public static final OntProperty purchasePriceLimit = M_MODEL.createOntProperty( "http://schema.org/purchasePriceLimit" );
    
    /** <p>Optional. The type of purchase the consumer must make in order to qualify 
     *  for this incentive.</p>
     */
    public static final OntProperty purchaseType = M_MODEL.createOntProperty( "http://schema.org/purchaseType" );
    
    /** <p>Specific qualifications required for this role or Occupation.</p> */
    public static final OntProperty qualifications = M_MODEL.createOntProperty( "http://schema.org/qualifications" );
    
    /** <p>Optional. The types of expenses that are covered by the incentive. For example 
     *  some incentives are only for the goods (tangible items) but the services (labor) 
     *  are excluded.</p>
     */
    public static final OntProperty qualifiedExpense = M_MODEL.createOntProperty( "http://schema.org/qualifiedExpense" );
    
    /** <p>Guidelines about quarantine rules, e.g. in the context of a pandemic.</p> */
    public static final OntProperty quarantineGuidelines = M_MODEL.createOntProperty( "http://schema.org/quarantineGuidelines" );
    
    /** <p>A sub property of instrument. The query used on this action.</p> */
    public static final OntProperty query = M_MODEL.createOntProperty( "http://schema.org/query" );
    
    /** <p>The task that a player-controlled character, or group of characters may complete 
     *  in order to gain a reward.</p>
     */
    public static final OntProperty quest = M_MODEL.createOntProperty( "http://schema.org/quest" );
    
    /** <p>A sub property of object. A question.</p> */
    public static final OntProperty question = M_MODEL.createOntProperty( "http://schema.org/question" );
    
    /** <p>Relates a property to a class that constitutes (one of) the expected type(s) 
     *  for values of the property.</p>
     */
    public static final OntProperty rangeIncludes = M_MODEL.createOntProperty( "http://schema.org/rangeIncludes" );
    
    /** <p>The count of total number of ratings.</p> */
    public static final OntProperty ratingCount = M_MODEL.createOntProperty( "http://schema.org/ratingCount" );
    
    /** <p>A short explanation (e.g. one to two sentences) providing background context 
     *  and other information that led to the conclusion expressed in the rating. 
     *  This is particularly applicable to ratings associated with "fact check" markup 
     *  using [[ClaimReview]].</p>
     */
    public static final OntProperty ratingExplanation = M_MODEL.createOntProperty( "http://schema.org/ratingExplanation" );
    
    /** <p>The rating for the content.
     *  
     *  Usage guidelines:
     *  
     *  * Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' 
     *  (U+0039)) rather than superficially similar Unicode symbols.
     *  * Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal 
     *  point. Avoid using these symbols as a readability separator.</p>
     */
    public static final OntProperty ratingValue = M_MODEL.createOntProperty( "http://schema.org/ratingValue" );
    
    public static final OntProperty label_PROP = M_MODEL.createOntProperty( "http://schema.org/rdfs:label" );
    
    /** <p>A person who reads (performs) the audiobook.</p> */
    public static final OntProperty readBy = M_MODEL.createOntProperty( "http://schema.org/readBy" );
    
    /** <p>Whether or not a property is mutable. Default is false. Specifying this for 
     *  a property that also has a value makes it act similar to a "hidden" input 
     *  in an HTML form.</p>
     */
    public static final OntProperty readonlyValue = M_MODEL.createOntProperty( "http://schema.org/readonlyValue" );
    
    /** <p>A sub property of participant. The real estate agent involved in the action.</p> */
    public static final OntProperty realEstateAgent = M_MODEL.createOntProperty( "http://schema.org/realEstateAgent" );
    
    /** <p>A sub property of instrument. The recipe/instructions used to perform the 
     *  action.</p>
     */
    public static final OntProperty recipe = M_MODEL.createOntProperty( "http://schema.org/recipe" );
    
    /** <p>The category of the recipe—for example, appetizer, entree, etc.</p> */
    public static final OntProperty recipeCategory = M_MODEL.createOntProperty( "http://schema.org/recipeCategory" );
    
    /** <p>The cuisine of the recipe (for example, French or Ethiopian).</p> */
    public static final OntProperty recipeCuisine = M_MODEL.createOntProperty( "http://schema.org/recipeCuisine" );
    
    /** <p>A single ingredient used in the recipe, e.g. sugar, flour or garlic.</p> */
    public static final OntProperty recipeIngredient = M_MODEL.createOntProperty( "http://schema.org/recipeIngredient" );
    
    /** <p>A step in making the recipe, in the form of a single item (document, video, 
     *  etc.) or an ordered list with HowToStep and/or HowToSection items.</p>
     */
    public static final OntProperty recipeInstructions = M_MODEL.createOntProperty( "http://schema.org/recipeInstructions" );
    
    /** <p>The quantity produced by the recipe (for example, number of people served, 
     *  number of servings, etc).</p>
     */
    public static final OntProperty recipeYield = M_MODEL.createOntProperty( "http://schema.org/recipeYield" );
    
    /** <p>A sub property of participant. The participant who is at the receiving end 
     *  of the action.</p>
     */
    public static final OntProperty recipient = M_MODEL.createOntProperty( "http://schema.org/recipient" );
    
    /** <p>An organization that acknowledges the validity, value or utility of a credential. 
     *  Note: recognition may include a process of quality assurance or accreditation.</p>
     */
    public static final OntProperty recognizedBy = M_MODEL.createOntProperty( "http://schema.org/recognizedBy" );
    
    /** <p>If applicable, the organization that officially recognizes this entity as 
     *  part of its endorsed system of medicine.</p>
     */
    public static final OntProperty recognizingAuthority = M_MODEL.createOntProperty( "http://schema.org/recognizingAuthority" );
    
    /** <p>Strength of the guideline's recommendation (e.g. 'class I').</p> */
    public static final OntProperty recommendationStrength = M_MODEL.createOntProperty( "http://schema.org/recommendationStrength" );
    
    /** <p>Recommended intake of this supplement for a given population as defined by 
     *  a specific recommending authority.</p>
     */
    public static final OntProperty recommendedIntake = M_MODEL.createOntProperty( "http://schema.org/recommendedIntake" );
    
    /** <p>The label that issued the release.</p> */
    public static final OntProperty recordLabel = M_MODEL.createOntProperty( "http://schema.org/recordLabel" );
    
    /** <p>An audio recording of the work.</p> */
    public static final OntProperty recordedAs = M_MODEL.createOntProperty( "http://schema.org/recordedAs" );
    
    /** <p>The Event where the CreativeWork was recorded. The CreativeWork may capture 
     *  all or part of the event.</p>
     */
    public static final OntProperty recordedAt = M_MODEL.createOntProperty( "http://schema.org/recordedAt" );
    
    /** <p>The CreativeWork that captured all or part of this Event.</p> */
    public static final OntProperty recordedIn = M_MODEL.createOntProperty( "http://schema.org/recordedIn" );
    
    /** <p>The composition this track is a recording of.</p> */
    public static final OntProperty recordingOf = M_MODEL.createOntProperty( "http://schema.org/recordingOf" );
    
    /** <p>The only way you get the money back in the event of default is the security. 
     *  Recourse is where you still have the opportunity to go back to the borrower 
     *  for the rest of the money.</p>
     */
    public static final OntProperty recourseLoan = M_MODEL.createOntProperty( "http://schema.org/recourseLoan" );
    
    /** <p>The reference quantity for which a certain price applies, e.g. 1 EUR per 4 
     *  kWh of electricity. This property is a replacement for unitOfMeasurement for 
     *  the advanced cases where the price does not relate to a standard unit.</p>
     */
    public static final OntProperty referenceQuantity = M_MODEL.createOntProperty( "http://schema.org/referenceQuantity" );
    
    /** <p>The Order(s) related to this Invoice. One or more Orders may be combined into 
     *  a single Invoice.</p>
     */
    public static final OntProperty referencesOrder = M_MODEL.createOntProperty( "http://schema.org/referencesOrder" );
    
    /** <p>A refund type, from an enumerated list.</p> */
    public static final OntProperty refundType = M_MODEL.createOntProperty( "http://schema.org/refundType" );
    
    /** <p>The anatomical or organ system drained by this vessel; generally refers to 
     *  a specific part of an organ.</p>
     */
    public static final OntProperty regionDrained = M_MODEL.createOntProperty( "http://schema.org/regionDrained" );
    
    /** <p>The regions where the media is allowed. If not specified, then it's assumed 
     *  to be allowed everywhere. Specify the countries in [ISO 3166 format](http://en.wikipedia.org/wiki/ISO_3166).</p>
     */
    public static final OntProperty regionsAllowed = M_MODEL.createOntProperty( "http://schema.org/regionsAllowed" );
    
    /** <p>Anatomical systems or structures that relate to the superficial anatomy.</p> */
    public static final OntProperty relatedAnatomy = M_MODEL.createOntProperty( "http://schema.org/relatedAnatomy" );
    
    /** <p>A medical condition associated with this anatomy.</p> */
    public static final OntProperty relatedCondition = M_MODEL.createOntProperty( "http://schema.org/relatedCondition" );
    
    /** <p>Any other drug related to this one, for example commonly-prescribed alternatives.</p> */
    public static final OntProperty relatedDrug = M_MODEL.createOntProperty( "http://schema.org/relatedDrug" );
    
    /** <p>A link related to this web page, for example to other related web pages.</p> */
    public static final OntProperty relatedLink = M_MODEL.createOntProperty( "http://schema.org/relatedLink" );
    
    /** <p>Related anatomical structure(s) that are not part of the system but relate 
     *  or connect to it, such as vascular bundles associated with an organ system.</p>
     */
    public static final OntProperty relatedStructure = M_MODEL.createOntProperty( "http://schema.org/relatedStructure" );
    
    /** <p>A medical therapy related to this anatomy.</p> */
    public static final OntProperty relatedTherapy = M_MODEL.createOntProperty( "http://schema.org/relatedTherapy" );
    
    /** <p>The most generic familial relation.</p> */
    public static final OntProperty relatedTo = M_MODEL.createOntProperty( "http://schema.org/relatedTo" );
    
    /** <p>The release date of a product or product model. This can be used to distinguish 
     *  the exact variant of a product.</p>
     */
    public static final OntProperty releaseDate = M_MODEL.createOntProperty( "http://schema.org/releaseDate" );
    
    /** <p>Description of what changed in this version.</p> */
    public static final OntProperty releaseNotes = M_MODEL.createOntProperty( "http://schema.org/releaseNotes" );
    
    /** <p>The album this is a release of.</p> */
    public static final OntProperty releaseOf = M_MODEL.createOntProperty( "http://schema.org/releaseOf" );
    
    /** <p>The place and time the release was issued, expressed as a PublicationEvent.</p> */
    public static final OntProperty releasedEvent = M_MODEL.createOntProperty( "http://schema.org/releasedEvent" );
    
    /** <p>The Occupation for the JobPosting.</p> */
    public static final OntProperty relevantOccupation = M_MODEL.createOntProperty( "http://schema.org/relevantOccupation" );
    
    /** <p>If applicable, a medical specialty in which this entity is relevant.</p> */
    public static final OntProperty relevantSpecialty = M_MODEL.createOntProperty( "http://schema.org/relevantSpecialty" );
    
    /** <p>The number of attendee places for an event that remain unallocated.</p> */
    public static final OntProperty remainingAttendeeCapacity = M_MODEL.createOntProperty( "http://schema.org/remainingAttendeeCapacity" );
    
    /** <p>Whether the terms for payment of interest can be renegotiated during the life 
     *  of the loan.</p>
     */
    public static final OntProperty renegotiableLoan = M_MODEL.createOntProperty( "http://schema.org/renegotiableLoan" );
    
    /** <p>Defines the number of times a recurring [[Event]] will take place.</p> */
    public static final OntProperty repeatCount = M_MODEL.createOntProperty( "http://schema.org/repeatCount" );
    
    /** <p>Defines the frequency at which [[Event]]s will occur according to a schedule 
     *  [[Schedule]]. The intervals between events should be defined as a [[Duration]] 
     *  of time.</p>
     */
    public static final OntProperty repeatFrequency = M_MODEL.createOntProperty( "http://schema.org/repeatFrequency" );
    
    /** <p>Number of times one should repeat the activity.</p> */
    public static final OntProperty repetitions = M_MODEL.createOntProperty( "http://schema.org/repetitions" );
    
    /** <p>A sub property of object. The object that is being replaced.</p> */
    public static final OntProperty replacee = M_MODEL.createOntProperty( "http://schema.org/replacee" );
    
    /** <p>A sub property of object. The object that replaces.</p> */
    public static final OntProperty replacer = M_MODEL.createOntProperty( "http://schema.org/replacer" );
    
    /** <p>The URL at which a reply may be posted to the specified UserComment.</p> */
    public static final OntProperty replyToUrl = M_MODEL.createOntProperty( "http://schema.org/replyToUrl" );
    
    /** <p>The number or other unique designator assigned to a Report by the publishing 
     *  organization.</p>
     */
    public static final OntProperty reportNumber = M_MODEL.createOntProperty( "http://schema.org/reportNumber" );
    
    /** <p>Indicates whether this image is representative of the content of the page.</p> */
    public static final OntProperty representativeOfPage = M_MODEL.createOntProperty( "http://schema.org/representativeOfPage" );
    
    /** <p>Assets required to secure loan or credit repayments. It may take form of third 
     *  party pledge, goods, financial instruments (cash, securities, etc.)</p>
     */
    public static final OntProperty requiredCollateral = M_MODEL.createOntProperty( "http://schema.org/requiredCollateral" );
    
    /** <p>Audiences defined by a person's gender.</p> */
    public static final OntProperty requiredGender = M_MODEL.createOntProperty( "http://schema.org/requiredGender" );
    
    /** <p>Audiences defined by a person's maximum age.</p> */
    public static final OntProperty requiredMaxAge = M_MODEL.createOntProperty( "http://schema.org/requiredMaxAge" );
    
    /** <p>Audiences defined by a person's minimum age.</p> */
    public static final OntProperty requiredMinAge = M_MODEL.createOntProperty( "http://schema.org/requiredMinAge" );
    
    /** <p>The required quantity of the item(s).</p> */
    public static final OntProperty requiredQuantity = M_MODEL.createOntProperty( "http://schema.org/requiredQuantity" );
    
    /** <p>Component dependency requirements for application. This includes runtime environments 
     *  and shared libraries that are not included in the application distribution 
     *  package, but required to run the application (examples: DirectX, Java or .NET 
     *  runtime).</p>
     */
    public static final OntProperty requirements = M_MODEL.createOntProperty( "http://schema.org/requirements" );
    
    /** <p>Indicates if use of the media require a subscription (either paid or free). 
     *  Allowed values are ```true``` or ```false``` (note that an earlier version 
     *  had 'yes', 'no').</p>
     */
    public static final OntProperty requiresSubscription = M_MODEL.createOntProperty( "http://schema.org/requiresSubscription" );
    
    /** <p>The thing -- flight, event, restaurant, etc. being reserved.</p> */
    public static final OntProperty reservationFor = M_MODEL.createOntProperty( "http://schema.org/reservationFor" );
    
    /** <p>A unique identifier for the reservation.</p> */
    public static final OntProperty reservationId = M_MODEL.createOntProperty( "http://schema.org/reservationId" );
    
    /** <p>The current status of the reservation.</p> */
    public static final OntProperty reservationStatus = M_MODEL.createOntProperty( "http://schema.org/reservationStatus" );
    
    /** <p>A ticket associated with the reservation.</p> */
    public static final OntProperty reservedTicket = M_MODEL.createOntProperty( "http://schema.org/reservedTicket" );
    
    /** <p>Responsibilities associated with this role or Occupation.</p> */
    public static final OntProperty responsibilities = M_MODEL.createOntProperty( "http://schema.org/responsibilities" );
    
    /** <p>How often one should break from the activity.</p> */
    public static final OntProperty restPeriods = M_MODEL.createOntProperty( "http://schema.org/restPeriods" );
    
    /** <p>Use [[MonetaryAmount]] to specify a fixed restocking fee for product returns, 
     *  or use [[Number]] to specify a percentage of the product price paid by the 
     *  customer.</p>
     */
    public static final OntProperty restockingFee = M_MODEL.createOntProperty( "http://schema.org/restockingFee" );
    
    /** <p>The result produced in the action. E.g. John wrote *a book*.</p> */
    public static final OntProperty result = M_MODEL.createOntProperty( "http://schema.org/result" );
    
    /** <p>A sub property of result. The Comment created or sent as a result of this 
     *  action.</p>
     */
    public static final OntProperty resultComment = M_MODEL.createOntProperty( "http://schema.org/resultComment" );
    
    /** <p>A sub property of result. The review that resulted in the performing of the 
     *  action.</p>
     */
    public static final OntProperty resultReview = M_MODEL.createOntProperty( "http://schema.org/resultReview" );
    
    /** <p>The type of return fees for purchased products (for any return reason).</p> */
    public static final OntProperty returnFees = M_MODEL.createOntProperty( "http://schema.org/returnFees" );
    
    /** <p>The method (from an enumeration) by which the customer obtains a return shipping 
     *  label for a product returned for any reason.</p>
     */
    public static final OntProperty returnLabelSource = M_MODEL.createOntProperty( "http://schema.org/returnLabelSource" );
    
    /** <p>The type of return method offered, specified from an enumeration.</p> */
    public static final OntProperty returnMethod = M_MODEL.createOntProperty( "http://schema.org/returnMethod" );
    
    /** <p>Specifies an applicable return policy (from an enumeration).</p> */
    public static final OntProperty returnPolicyCategory = M_MODEL.createOntProperty( "http://schema.org/returnPolicyCategory" );
    
    /** <p>The country where the product has to be sent to for returns, for example "Ireland" 
     *  using the [[name]] property of [[Country]]. You can also provide the two-letter 
     *  [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1). 
     *  Note that this can be different from the country where the product was originally 
     *  shipped from or sent to.</p>
     */
    public static final OntProperty returnPolicyCountry = M_MODEL.createOntProperty( "http://schema.org/returnPolicyCountry" );
    
    /** <p>Seasonal override of a return policy.</p> */
    public static final OntProperty returnPolicySeasonalOverride = M_MODEL.createOntProperty( "http://schema.org/returnPolicySeasonalOverride" );
    
    /** <p>Amount of shipping costs for product returns (for any reason). Applicable 
     *  when property [[returnFees]] equals [[ReturnShippingFees]].</p>
     */
    public static final OntProperty returnShippingFeesAmount = M_MODEL.createOntProperty( "http://schema.org/returnShippingFeesAmount" );
    
    /** <p>A review of the item.</p> */
    public static final OntProperty review = M_MODEL.createOntProperty( "http://schema.org/review" );
    
    /** <p>This Review or Rating is relevant to this part or facet of the itemReviewed.</p> */
    public static final OntProperty reviewAspect = M_MODEL.createOntProperty( "http://schema.org/reviewAspect" );
    
    /** <p>The actual body of the review.</p> */
    public static final OntProperty reviewBody = M_MODEL.createOntProperty( "http://schema.org/reviewBody" );
    
    /** <p>The count of total number of reviews.</p> */
    public static final OntProperty reviewCount = M_MODEL.createOntProperty( "http://schema.org/reviewCount" );
    
    /** <p>The rating given in this review. Note that reviews can themselves be rated. 
     *  The ```reviewRating``` applies to rating given by the review. The [[aggregateRating]] 
     *  property applies to the review itself, as a creative work.</p>
     */
    public static final OntProperty reviewRating = M_MODEL.createOntProperty( "http://schema.org/reviewRating" );
    
    /** <p>People or organizations that have reviewed the content on this web page for 
     *  accuracy and/or completeness.</p>
     */
    public static final OntProperty reviewedBy = M_MODEL.createOntProperty( "http://schema.org/reviewedBy" );
    
    /** <p>Review of the item.</p> */
    public static final OntProperty reviews = M_MODEL.createOntProperty( "http://schema.org/reviews" );
    
    /** <p>A modifiable or non-modifiable factor that increases the risk of a patient 
     *  contracting this condition, e.g. age, coexisting condition.</p>
     */
    public static final OntProperty riskFactor = M_MODEL.createOntProperty( "http://schema.org/riskFactor" );
    
    /** <p>Specific physiologic risks associated to the diet plan.</p> */
    public static final OntProperty risks = M_MODEL.createOntProperty( "http://schema.org/risks" );
    
    /** <p>A role played, performed or filled by a person or organization. For example, 
     *  the team of creators for a comic book might fill the roles named 'inker', 
     *  'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the 
     *  position named 'Quarterback'.</p>
     */
    public static final OntProperty roleName = M_MODEL.createOntProperty( "http://schema.org/roleName" );
    
    /** <p>The permitted total weight of cargo and installations (e.g. a roof rack) on 
     *  top of the vehicle.
     *  
     *  Typical unit code(s): KGM for kilogram, LBR for pound
     *  
     *  * Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] 
     *  node.
     *  * Note 2: You may also link to a [[QualitativeValue]] node that provides additional 
     *  information using [[valueReference]]
     *  * Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate 
     *  ranges.</p>
     */
    public static final OntProperty roofLoad = M_MODEL.createOntProperty( "http://schema.org/roofLoad" );
    
    /** <p>The response (yes, no, maybe) to the RSVP.</p> */
    public static final OntProperty rsvpResponse = M_MODEL.createOntProperty( "http://schema.org/rsvpResponse" );
    
    /** <p>The vasculature the lymphatic structure runs, or efferents, to.</p> */
    public static final OntProperty runsTo = M_MODEL.createOntProperty( "http://schema.org/runsTo" );
    
    /** <p>Runtime platform or script interpreter dependencies (example: Java v1, Python 
     *  2.3, .NET Framework 3.0).</p>
     */
    public static final OntProperty runtime = M_MODEL.createOntProperty( "http://schema.org/runtime" );
    
    /** <p>Runtime platform or script interpreter dependencies (example: Java v1, Python 
     *  2.3, .NET Framework 3.0).</p>
     */
    public static final OntProperty runtimePlatform = M_MODEL.createOntProperty( "http://schema.org/runtimePlatform" );
    
    /** <p>The RxCUI drug identifier from RXNORM.</p> */
    public static final OntProperty rxcui = M_MODEL.createOntProperty( "http://schema.org/rxcui" );
    
    /** <p>Any potential safety concern associated with the supplement. May include interactions 
     *  with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, 
     *  and documented efficacy of the supplement.</p>
     */
    public static final OntProperty safetyConsideration = M_MODEL.createOntProperty( "http://schema.org/safetyConsideration" );
    
    /** <p>The currency (coded using [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217)) 
     *  used for the main salary information in this job posting or for this employee.</p>
     */
    public static final OntProperty salaryCurrency = M_MODEL.createOntProperty( "http://schema.org/salaryCurrency" );
    
    /** <p>The expected salary upon completing the training.</p> */
    public static final OntProperty salaryUponCompletion = M_MODEL.createOntProperty( "http://schema.org/salaryUponCompletion" );
    
    /** <p>URL of a reference Web page that unambiguously indicates the item's identity. 
     *  E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.</p>
     */
    public static final OntProperty sameAs_PROP = M_MODEL.createOntProperty( "http://schema.org/sameAs" );
    
    /** <p>What type of code sample: full (compile ready) solution, code snippet, inline 
     *  code, scripts, template.</p>
     */
    public static final OntProperty sampleType = M_MODEL.createOntProperty( "http://schema.org/sampleType" );
    
    /** <p>The number of grams of saturated fat.</p> */
    public static final OntProperty saturatedFatContent = M_MODEL.createOntProperty( "http://schema.org/saturatedFatContent" );
    
    /** <p>Indicates the timezone for which the time(s) indicated in the [[Schedule]] 
     *  are given. The value provided should be among those listed in the IANA Time 
     *  Zone Database.</p>
     */
    public static final OntProperty scheduleTimezone = M_MODEL.createOntProperty( "http://schema.org/scheduleTimezone" );
    
    /** <p>The date the invoice is scheduled to be paid.</p> */
    public static final OntProperty scheduledPaymentDate = M_MODEL.createOntProperty( "http://schema.org/scheduledPaymentDate" );
    
    /** <p>The time the object is scheduled to.</p> */
    public static final OntProperty scheduledTime = M_MODEL.createOntProperty( "http://schema.org/scheduledTime" );
    
    /** <p>Indicates (by URL or string) a particular version of a schema used in some 
     *  CreativeWork. This property was created primarily to indicate the use of a 
     *  specific schema.org release, e.g. ```10.0``` as a simple string, or more explicitly 
     *  via URL, ```http://schema.org/docs/releases.html#v10.0```. There may be situations 
     *  in which other schemas might usefully be referenced this way, e.g. ```http://dublincore.org/specifications/dublin-core/dces/1999-07-02/``` 
     *  but this has not been carefully explored in the community.</p>
     */
    public static final OntProperty schemaVersion = M_MODEL.createOntProperty( "http://schema.org/schemaVersion" );
    
    /** <p>Information about school closures.</p> */
    public static final OntProperty schoolClosuresInfo = M_MODEL.createOntProperty( "http://schema.org/schoolClosuresInfo" );
    
    /** <p>The number of screens in the movie theater.</p> */
    public static final OntProperty screenCount = M_MODEL.createOntProperty( "http://schema.org/screenCount" );
    
    /** <p>A link to a screenshot image of the app.</p> */
    public static final OntProperty screenshot = M_MODEL.createOntProperty( "http://schema.org/screenshot" );
    
    /** <p>Indicates the date on which the current structured data was generated / published. 
     *  Typically used alongside [[sdPublisher]].</p>
     */
    public static final OntProperty sdDatePublished = M_MODEL.createOntProperty( "http://schema.org/sdDatePublished" );
    
    /** <p>A license document that applies to this structured data, typically indicated 
     *  by URL.</p>
     */
    public static final OntProperty sdLicense = M_MODEL.createOntProperty( "http://schema.org/sdLicense" );
    
    /** <p>Indicates the party responsible for generating and publishing the current 
     *  structured data markup, typically in cases where the structured data is derived 
     *  automatically from existing published content but published on a different 
     *  site. For example, student projects and open data initiatives often re-publish 
     *  existing content with more explicitly structured metadata. The [[sdPublisher]] 
     *  property helps make such practices more explicit.</p>
     */
    public static final OntProperty sdPublisher = M_MODEL.createOntProperty( "http://schema.org/sdPublisher" );
    
    /** <p>A season in a media series.</p> */
    public static final OntProperty season = M_MODEL.createOntProperty( "http://schema.org/season" );
    
    /** <p>Position of the season within an ordered group of seasons.</p> */
    public static final OntProperty seasonNumber = M_MODEL.createOntProperty( "http://schema.org/seasonNumber" );
    
    /** <p>Limited period during which these shipping conditions apply.</p> */
    public static final OntProperty seasonalOverride = M_MODEL.createOntProperty( "http://schema.org/seasonalOverride" );
    
    /** <p>A season in a media series.</p> */
    public static final OntProperty seasons = M_MODEL.createOntProperty( "http://schema.org/seasons" );
    
    /** <p>The location of the reserved seat (e.g., 27).</p> */
    public static final OntProperty seatNumber = M_MODEL.createOntProperty( "http://schema.org/seatNumber" );
    
    /** <p>The row location of the reserved seat (e.g., B).</p> */
    public static final OntProperty seatRow = M_MODEL.createOntProperty( "http://schema.org/seatRow" );
    
    /** <p>The section location of the reserved seat (e.g. Orchestra).</p> */
    public static final OntProperty seatSection = M_MODEL.createOntProperty( "http://schema.org/seatSection" );
    
    /** <p>The number of persons that can be seated (e.g. in a vehicle), both in terms 
     *  of the physical space available, and in terms of limitations set by law.
     *  
     *  Typical unit code(s): C62 for persons.</p>
     */
    public static final OntProperty seatingCapacity = M_MODEL.createOntProperty( "http://schema.org/seatingCapacity" );
    
    /** <p>The type/class of the seat.</p> */
    public static final OntProperty seatingType = M_MODEL.createOntProperty( "http://schema.org/seatingType" );
    
    /** <p>A preventative therapy used to prevent reoccurrence of the medical condition 
     *  after an initial episode of the condition.</p>
     */
    public static final OntProperty secondaryPrevention = M_MODEL.createOntProperty( "http://schema.org/secondaryPrevention" );
    
    /** <p>A description of any security clearance requirements of the job.</p> */
    public static final OntProperty securityClearanceRequirement = M_MODEL.createOntProperty( "http://schema.org/securityClearanceRequirement" );
    
    /** <p>The type of security screening the passenger is subject to.</p> */
    public static final OntProperty securityScreening = M_MODEL.createOntProperty( "http://schema.org/securityScreening" );
    
    /** <p>A pointer to products or services sought by the organization or person (demand).</p> */
    public static final OntProperty seeks = M_MODEL.createOntProperty( "http://schema.org/seeks" );
    
    /** <p>An entity which offers (sells / leases / lends / loans) the services / goods. 
     *  A seller may also be a provider.</p>
     */
    public static final OntProperty seller = M_MODEL.createOntProperty( "http://schema.org/seller" );
    
    /** <p>A sub property of participant. The participant who is at the sending end of 
     *  the action.</p>
     */
    public static final OntProperty sender = M_MODEL.createOntProperty( "http://schema.org/sender" );
    
    /** <p>A description of any sensory requirements and levels necessary to function 
     *  on the job, including hearing and vision. Defined terms such as those in O*net 
     *  may be used, but note that there is no way to specify the level of ability 
     *  as well as its nature when using a defined term.</p>
     */
    public static final OntProperty sensoryRequirement = M_MODEL.createOntProperty( "http://schema.org/sensoryRequirement" );
    
    /** <p>The neurological pathway extension that inputs and sends information to the 
     *  brain or spinal cord.</p>
     */
    public static final OntProperty sensoryUnit = M_MODEL.createOntProperty( "http://schema.org/sensoryUnit" );
    
    /** <p>The serial number or any alphanumeric identifier of a particular product. 
     *  When attached to an offer, it is a shortcut for the serial number of the product 
     *  included in the offer.</p>
     */
    public static final OntProperty serialNumber = M_MODEL.createOntProperty( "http://schema.org/serialNumber" );
    
    /** <p>A possible serious complication and/or serious side effect of this therapy. 
     *  Serious adverse outcomes include those that are life-threatening; result in 
     *  death, disability, or permanent damage; require hospitalization or prolong 
     *  existing hospitalization; cause congenital anomalies or birth defects; or 
     *  jeopardize the patient and may require medical or surgical intervention to 
     *  prevent one of the outcomes in this definition.</p>
     */
    public static final OntProperty seriousAdverseOutcome = M_MODEL.createOntProperty( "http://schema.org/seriousAdverseOutcome" );
    
    /** <p>Status of a game server.</p> */
    public static final OntProperty serverStatus = M_MODEL.createOntProperty( "http://schema.org/serverStatus" );
    
    /** <p>The cuisine of the restaurant.</p> */
    public static final OntProperty servesCuisine = M_MODEL.createOntProperty( "http://schema.org/servesCuisine" );
    
    /** <p>The geographic area where the service is provided.</p> */
    public static final OntProperty serviceArea = M_MODEL.createOntProperty( "http://schema.org/serviceArea" );
    
    /** <p>The audience eligible for this service.</p> */
    public static final OntProperty serviceAudience = M_MODEL.createOntProperty( "http://schema.org/serviceAudience" );
    
    /** <p>The location (e.g. civic structure, local business, etc.) where a person can 
     *  go to access the service.</p>
     */
    public static final OntProperty serviceLocation = M_MODEL.createOntProperty( "http://schema.org/serviceLocation" );
    
    /** <p>The operating organization, if different from the provider. This enables the 
     *  representation of services that are provided by an organization, but operated 
     *  by another organization like a subcontractor.</p>
     */
    public static final OntProperty serviceOperator = M_MODEL.createOntProperty( "http://schema.org/serviceOperator" );
    
    /** <p>The tangible thing generated by the service, e.g. a passport, permit, etc.</p> */
    public static final OntProperty serviceOutput = M_MODEL.createOntProperty( "http://schema.org/serviceOutput" );
    
    /** <p>The phone number to use to access the service.</p> */
    public static final OntProperty servicePhone = M_MODEL.createOntProperty( "http://schema.org/servicePhone" );
    
    /** <p>The address for accessing the service by mail.</p> */
    public static final OntProperty servicePostalAddress = M_MODEL.createOntProperty( "http://schema.org/servicePostalAddress" );
    
    /** <p>The number to access the service by text message.</p> */
    public static final OntProperty serviceSmsNumber = M_MODEL.createOntProperty( "http://schema.org/serviceSmsNumber" );
    
    /** <p>The type of service being offered, e.g. veterans' benefits, emergency relief, 
     *  etc.</p>
     */
    public static final OntProperty serviceType = M_MODEL.createOntProperty( "http://schema.org/serviceType" );
    
    /** <p>The website to access the service.</p> */
    public static final OntProperty serviceUrl = M_MODEL.createOntProperty( "http://schema.org/serviceUrl" );
    
    /** <p>The serving size, in terms of the number of volume or mass.</p> */
    public static final OntProperty servingSize = M_MODEL.createOntProperty( "http://schema.org/servingSize" );
    
    /** <p>The [SHA-2](https://en.wikipedia.org/wiki/SHA-2) SHA256 hash of the content 
     *  of the item. For example, a zero-length input has value 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'.</p>
     */
    public static final OntProperty sha256 = M_MODEL.createOntProperty( "http://schema.org/sha256" );
    
    /** <p>A CreativeWork such as an image, video, or audio clip shared as part of this 
     *  posting.</p>
     */
    public static final OntProperty sharedContent = M_MODEL.createOntProperty( "http://schema.org/sharedContent" );
    
    /** <p>The conditions (constraints, price) applicable to the [[ShippingService]].</p> */
    public static final OntProperty shippingConditions = M_MODEL.createOntProperty( "http://schema.org/shippingConditions" );
    
    /** <p>indicates (possibly multiple) shipping destinations. These can be defined 
     *  in several ways, e.g. postalCode ranges.</p>
     */
    public static final OntProperty shippingDestination = M_MODEL.createOntProperty( "http://schema.org/shippingDestination" );
    
    /** <p>Indicates information about the shipping policies and options associated with 
     *  an [[Offer]].</p>
     */
    public static final OntProperty shippingDetails = M_MODEL.createOntProperty( "http://schema.org/shippingDetails" );
    
    /** <p>Indicates the origin of a shipment, i.e. where it should be coming from.</p> */
    public static final OntProperty shippingOrigin = M_MODEL.createOntProperty( "http://schema.org/shippingOrigin" );
    
    /** <p>The shipping rate is the cost of shipping to the specified destination. Typically, 
     *  the maxValue and currency values (of the [[MonetaryAmount]]) are most appropriate.</p>
     */
    public static final OntProperty shippingRate = M_MODEL.createOntProperty( "http://schema.org/shippingRate" );
    
    /** <p>A sibling of the person.</p> */
    public static final OntProperty sibling = M_MODEL.createOntProperty( "http://schema.org/sibling" );
    
    /** <p>A sibling of the person.</p> */
    public static final OntProperty siblings = M_MODEL.createOntProperty( "http://schema.org/siblings" );
    
    /** <p>A sign detected by the test.</p> */
    public static final OntProperty signDetected = M_MODEL.createOntProperty( "http://schema.org/signDetected" );
    
    /** <p>A sign or symptom of this condition. Signs are objective or physically observable 
     *  manifestations of the medical condition while symptoms are the subjective 
     *  experience of the medical condition.</p>
     */
    public static final OntProperty signOrSymptom = M_MODEL.createOntProperty( "http://schema.org/signOrSymptom" );
    
    /** <p>The significance associated with the superficial anatomy; as an example, how 
     *  characteristics of the superficial anatomy can suggest underlying medical 
     *  conditions or courses of treatment.</p>
     */
    public static final OntProperty significance = M_MODEL.createOntProperty( "http://schema.org/significance" );
    
    /** <p>One of the more significant URLs on the page. Typically, these are the non-navigation 
     *  links that are clicked on the most.</p>
     */
    public static final OntProperty significantLink = M_MODEL.createOntProperty( "http://schema.org/significantLink" );
    
    /** <p>The most significant URLs on the page. Typically, these are the non-navigation 
     *  links that are clicked on the most.</p>
     */
    public static final OntProperty significantLinks = M_MODEL.createOntProperty( "http://schema.org/significantLinks" );
    
    /** <p>A standardized size of a product or creative work, specified either through 
     *  a simple textual string (for example 'XL', '32Wx34L'), a QuantitativeValue 
     *  with a unitCode, or a comprehensive and structured [[SizeSpecification]]; 
     *  in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties 
     *  may be more applicable.</p>
     */
    public static final OntProperty size = M_MODEL.createOntProperty( "http://schema.org/size" );
    
    /** <p>The size group (also known as "size type") for a product's size. Size groups 
     *  are common in the fashion industry to define size segments and suggested audiences 
     *  for wearable products. Multiple values can be combined, for example "men's 
     *  big and tall", "petite maternity" or "regular".</p>
     */
    public static final OntProperty sizeGroup = M_MODEL.createOntProperty( "http://schema.org/sizeGroup" );
    
    /** <p>The size system used to identify a product's size. Typically either a standard 
     *  (for example, "GS1" or "ISO-EN13402"), country code (for example "US" or "JP"), 
     *  or a measuring system (for example "Metric" or "Imperial").</p>
     */
    public static final OntProperty sizeSystem = M_MODEL.createOntProperty( "http://schema.org/sizeSystem" );
    
    /** <p>A statement of knowledge, skill, ability, task or any other assertion expressing 
     *  a competency that is either claimed by a person, an organization or desired 
     *  or required to fulfill a role or to work in an occupation.</p>
     */
    public static final OntProperty skills = M_MODEL.createOntProperty( "http://schema.org/skills" );
    
    /** <p>The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product 
     *  or service, or the product to which the offer refers.</p>
     */
    public static final OntProperty sku = M_MODEL.createOntProperty( "http://schema.org/sku" );
    
    /** <p>A slogan or motto associated with the item.</p> */
    public static final OntProperty slogan = M_MODEL.createOntProperty( "http://schema.org/slogan" );
    
    /** <p>A specification in form of a line notation for describing the structure of 
     *  chemical species using short ASCII strings. Double bond stereochemistry indicators 
     *  may need to be escaped in the string in formats where the backslash is an 
     *  escape character.</p>
     */
    public static final OntProperty smiles = M_MODEL.createOntProperty( "http://schema.org/smiles" );
    
    /** <p>Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, 
     *  hotel or hotel room.</p>
     */
    public static final OntProperty smokingAllowed = M_MODEL.createOntProperty( "http://schema.org/smokingAllowed" );
    
    /** <p>The number of milligrams of sodium.</p> */
    public static final OntProperty sodiumContent = M_MODEL.createOntProperty( "http://schema.org/sodiumContent" );
    
    /** <p>Additional content for a software application.</p> */
    public static final OntProperty softwareAddOn = M_MODEL.createOntProperty( "http://schema.org/softwareAddOn" );
    
    /** <p>Software application help.</p> */
    public static final OntProperty softwareHelp = M_MODEL.createOntProperty( "http://schema.org/softwareHelp" );
    
    /** <p>Component dependency requirements for application. This includes runtime environments 
     *  and shared libraries that are not included in the application distribution 
     *  package, but required to run the application (examples: DirectX, Java or .NET 
     *  runtime).</p>
     */
    public static final OntProperty softwareRequirements = M_MODEL.createOntProperty( "http://schema.org/softwareRequirements" );
    
    /** <p>Version of the software instance.</p> */
    public static final OntProperty softwareVersion = M_MODEL.createOntProperty( "http://schema.org/softwareVersion" );
    
    public static final OntProperty source = M_MODEL.createOntProperty( "http://schema.org/source" );
    
    /** <p>The Organization on whose behalf the creator was working.</p> */
    public static final OntProperty sourceOrganization = M_MODEL.createOntProperty( "http://schema.org/sourceOrganization" );
    
    /** <p>The neurological pathway that originates the neurons.</p> */
    public static final OntProperty sourcedFrom = M_MODEL.createOntProperty( "http://schema.org/sourcedFrom" );
    
    /** <p>The "spatial" property can be used in cases when more specific properties 
     *  (e.g. [[locationCreated]], [[spatialCoverage]], [[contentLocation]]) are not 
     *  known to be appropriate.</p>
     */
    public static final OntProperty spatial_PROP = M_MODEL.createOntProperty( "http://schema.org/spatial" );
    
    /** <p>The spatialCoverage of a CreativeWork indicates the place(s) which are the 
     *  focus of the content. It is a subproperty of contentLocation intended primarily 
     *  for more technical and detailed materials. For example with a Dataset, it 
     *  indicates areas that the dataset describes: a dataset of New York weather 
     *  would have spatialCoverage which was the place: the state of New York.</p>
     */
    public static final OntProperty spatialCoverage = M_MODEL.createOntProperty( "http://schema.org/spatialCoverage" );
    
    /** <p>Indicates sections of a Web page that are particularly 'speakable' in the 
     *  sense of being highlighted as being especially appropriate for text-to-speech 
     *  conversion. Other sections of a page may also be usefully spoken in particular 
     *  circumstances; the 'speakable' property serves to indicate the parts most 
     *  likely to be generally useful for speech. The *speakable* property can be 
     *  repeated an arbitrary number of times, with three kinds of possible 'content-locator' 
     *  values: 1.) *id-value* URL references - uses *id-value* of an element in the 
     *  page being annotated. The simplest use of *speakable* has (potentially relative) 
     *  URL values, referencing identified sections of the document concerned. 2.) 
     *  CSS Selectors - addresses content in the annotated page, e.g. via class attribute. 
     *  Use the [[cssSelector]] property. 3.) XPaths - addresses content via XPaths 
     *  (assuming an XML view of the content). Use the [[xpath]] property. For more 
     *  sophisticated markup of speakable sections beyond simple ID references, either 
     *  CSS selectors or XPath expressions to pick out document section(s) as speakable. 
     *  For this we define a supporting type, [[SpeakableSpecification]] which is 
     *  defined to be a possible value of the *speakable* property.</p>
     */
    public static final OntProperty speakable = M_MODEL.createOntProperty( "http://schema.org/speakable" );
    
    /** <p>Any special commitments associated with this job posting. Valid entries include 
     *  VeteranCommit, MilitarySpouseCommit, etc.</p>
     */
    public static final OntProperty specialCommitments = M_MODEL.createOntProperty( "http://schema.org/specialCommitments" );
    
    /** <p>The special opening hours of a certain place.
     *  
     *  Use this to explicitly override general opening hours brought in scope by 
     *  [[openingHoursSpecification]] or [[openingHours]].</p>
     */
    public static final OntProperty specialOpeningHoursSpecification = M_MODEL.createOntProperty( "http://schema.org/specialOpeningHoursSpecification" );
    
    /** <p>One of the domain specialities to which this web page's content applies.</p> */
    public static final OntProperty specialty = M_MODEL.createOntProperty( "http://schema.org/specialty" );
    
    /** <p>Form of markup used. eg. [SSML](https://www.w3.org/TR/speech-synthesis11) 
     *  or [IPA](https://www.wikidata.org/wiki/Property:P898).</p>
     */
    public static final OntProperty speechToTextMarkup = M_MODEL.createOntProperty( "http://schema.org/speechToTextMarkup" );
    
    /** <p>The speed range of the vehicle. If the vehicle is powered by an engine, the 
     *  upper limit of the speed range (indicated by [[maxValue]]) should be the maximum 
     *  speed achievable under regular conditions.
     *  
     *  Typical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT 
     *  for knot
     *  
     *  *Note 1: Use [[minValue]] and [[maxValue]] to indicate the range. Typically, 
     *  the minimal value is zero.
     *  * Note 2: There are many different ways of measuring the speed range. You 
     *  can link to information about how the given value has been determined using 
     *  the [[valueReference]] property.</p>
     */
    public static final OntProperty speed = M_MODEL.createOntProperty( "http://schema.org/speed" );
    
    /** <p>The (e.g. fictional) character, Person or Organization to whom the quotation 
     *  is attributed within the containing CreativeWork.</p>
     */
    public static final OntProperty spokenByCharacter = M_MODEL.createOntProperty( "http://schema.org/spokenByCharacter" );
    
    /** <p>A person or organization that supports a thing through a pledge, promise, 
     *  or financial contribution. E.g. a sponsor of a Medical Study or a corporate 
     *  sponsor of an event.</p>
     */
    public static final OntProperty sponsor = M_MODEL.createOntProperty( "http://schema.org/sponsor" );
    
    /** <p>A type of sport (e.g. Baseball).</p> */
    public static final OntProperty sport = M_MODEL.createOntProperty( "http://schema.org/sport" );
    
    /** <p>A sub property of location. The sports activity location where this action 
     *  occurred.</p>
     */
    public static final OntProperty sportsActivityLocation = M_MODEL.createOntProperty( "http://schema.org/sportsActivityLocation" );
    
    /** <p>A sub property of location. The sports event where this action occurred.</p> */
    public static final OntProperty sportsEvent = M_MODEL.createOntProperty( "http://schema.org/sportsEvent" );
    
    /** <p>A sub property of participant. The sports team that participated on this action.</p> */
    public static final OntProperty sportsTeam = M_MODEL.createOntProperty( "http://schema.org/sportsTeam" );
    
    /** <p>The person's spouse.</p> */
    public static final OntProperty spouse = M_MODEL.createOntProperty( "http://schema.org/spouse" );
    
    /** <p>The stage of the condition, if applicable.</p> */
    public static final OntProperty stage = M_MODEL.createOntProperty( "http://schema.org/stage" );
    
    /** <p>The stage represented as a number, e.g. 3.</p> */
    public static final OntProperty stageAsNumber = M_MODEL.createOntProperty( "http://schema.org/stageAsNumber" );
    
    /** <p>An official rating for a lodging business or food establishment, e.g. from 
     *  national associations or standards bodies. Use the author property to indicate 
     *  the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, 
     *  DEHOGA, WHR, or Hotelstars).</p>
     */
    public static final OntProperty starRating = M_MODEL.createOntProperty( "http://schema.org/starRating" );
    
    /** <p>The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).</p> */
    public static final OntProperty startDate = M_MODEL.createOntProperty( "http://schema.org/startDate" );
    
    /** <p>The start time of the clip expressed as the number of seconds from the beginning 
     *  of the work.</p>
     */
    public static final OntProperty startOffset = M_MODEL.createOntProperty( "http://schema.org/startOffset" );
    
    /** <p>The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), 
     *  the time that it is expected to start. For actions that span a period of time, 
     *  when the action was performed. E.g. John wrote a book from *January* to December. 
     *  For media, including audio and video, it's the time offset of the start of 
     *  a clip within a larger file.
     *  
     *  Note that Event uses startDate/endDate instead of startTime/endTime, even 
     *  when describing dates with times. This situation may be clarified in future 
     *  revisions.</p>
     */
    public static final OntProperty startTime = M_MODEL.createOntProperty( "http://schema.org/startTime" );
    
    /** <p>Indicates the kind of statistic represented by a [[StatisticalVariable]], 
     *  e.g. mean, count etc. The value of statType is a property, either from within 
     *  Schema.org (e.g. [[median]], [[marginOfError]], [[maxValue]], [[minValue]]) 
     *  or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org.</p>
     */
    public static final OntProperty statType = M_MODEL.createOntProperty( "http://schema.org/statType" );
    
    /** <p>The status of the study (enumerated).</p> */
    public static final OntProperty status = M_MODEL.createOntProperty( "http://schema.org/status" );
    
    /** <p>The position of the steering wheel or similar device (mostly for cars).</p> */
    public static final OntProperty steeringPosition = M_MODEL.createOntProperty( "http://schema.org/steeringPosition" );
    
    /** <p>A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.</p> */
    public static final OntProperty step = M_MODEL.createOntProperty( "http://schema.org/step" );
    
    /** <p>The stepValue attribute indicates the granularity that is expected (and required) 
     *  of the value in a PropertyValueSpecification.</p>
     */
    public static final OntProperty stepValue = M_MODEL.createOntProperty( "http://schema.org/stepValue" );
    
    /** <p>A single step item (as HowToStep, text, document, video, etc.) or a HowToSection 
     *  (originally misnamed 'steps'; 'step' is preferred).</p>
     */
    public static final OntProperty steps = M_MODEL.createOntProperty( "http://schema.org/steps" );
    
    /** <p>Storage requirements (free space required).</p> */
    public static final OntProperty storageRequirements = M_MODEL.createOntProperty( "http://schema.org/storageRequirements" );
    
    /** <p>The street address. For example, 1600 Amphitheatre Pkwy.</p> */
    public static final OntProperty streetAddress = M_MODEL.createOntProperty( "http://schema.org/streetAddress" );
    
    /** <p>The units of an active ingredient's strength, e.g. mg.</p> */
    public static final OntProperty strengthUnit = M_MODEL.createOntProperty( "http://schema.org/strengthUnit" );
    
    /** <p>The value of an active ingredient's strength, e.g. 325.</p> */
    public static final OntProperty strengthValue = M_MODEL.createOntProperty( "http://schema.org/strengthValue" );
    
    /** <p>The name given to how bone physically connects to each other.</p> */
    public static final OntProperty structuralClass = M_MODEL.createOntProperty( "http://schema.org/structuralClass" );
    
    /** <p>A medical study or trial related to this entity.</p> */
    public static final OntProperty study = M_MODEL.createOntProperty( "http://schema.org/study" );
    
    /** <p>Specifics about the observational study design (enumerated).</p> */
    public static final OntProperty studyDesign = M_MODEL.createOntProperty( "http://schema.org/studyDesign" );
    
    /** <p>The location in which the study is taking/took place.</p> */
    public static final OntProperty studyLocation = M_MODEL.createOntProperty( "http://schema.org/studyLocation" );
    
    /** <p>A subject of the study, i.e. one of the medical conditions, therapies, devices, 
     *  drugs, etc. investigated by the study.</p>
     */
    public static final OntProperty studySubject = M_MODEL.createOntProperty( "http://schema.org/studySubject" );
    
    /** <p>An Event that is part of this event. For example, a conference event includes 
     *  many presentations, each of which is a subEvent of the conference.</p>
     */
    public static final OntProperty subEvent = M_MODEL.createOntProperty( "http://schema.org/subEvent" );
    
    /** <p>Events that are a part of this event. For example, a conference event includes 
     *  many presentations, each subEvents of the conference.</p>
     */
    public static final OntProperty subEvents = M_MODEL.createOntProperty( "http://schema.org/subEvents" );
    
    /** <p>A relationship between two organizations where the first includes the second, 
     *  e.g., as a subsidiary. See also: the more specific 'department' property.</p>
     */
    public static final OntProperty subOrganization = M_MODEL.createOntProperty( "http://schema.org/subOrganization" );
    
    /** <p>The individual reservations included in the package. Typically a repeated 
     *  property.</p>
     */
    public static final OntProperty subReservation = M_MODEL.createOntProperty( "http://schema.org/subReservation" );
    
    /** <p>The substage, e.g. 'a' for Stage IIIa.</p> */
    public static final OntProperty subStageSuffix = M_MODEL.createOntProperty( "http://schema.org/subStageSuffix" );
    
    /** <p>Component (sub-)structure(s) that comprise this anatomical structure.</p> */
    public static final OntProperty subStructure = M_MODEL.createOntProperty( "http://schema.org/subStructure" );
    
    /** <p>A component test of the panel.</p> */
    public static final OntProperty subTest = M_MODEL.createOntProperty( "http://schema.org/subTest" );
    
    /** <p>Identifies a [[Trip]] that is a subTrip of this Trip. For example Day 1, Day 
     *  2, etc. of a multi-day trip.</p>
     */
    public static final OntProperty subTrip = M_MODEL.createOntProperty( "http://schema.org/subTrip" );
    
    /** <p>A CreativeWork or Event about this Thing.</p> */
    public static final OntProperty subjectOf = M_MODEL.createOntProperty( "http://schema.org/subjectOf" );
    
    /** <p>Languages in which subtitles/captions are available, in [IETF BCP 47 standard 
     *  format](http://tools.ietf.org/html/bcp47).</p>
     */
    public static final OntProperty subtitleLanguage = M_MODEL.createOntProperty( "http://schema.org/subtitleLanguage" );
    
    /** <p>A pointer from a newer variant of a product to its previous, often discontinued 
     *  predecessor.</p>
     */
    public static final OntProperty successorOf = M_MODEL.createOntProperty( "http://schema.org/successorOf" );
    
    /** <p>The number of grams of sugar.</p> */
    public static final OntProperty sugarContent = M_MODEL.createOntProperty( "http://schema.org/sugarContent" );
    
    /** <p>The age or age range for the intended audience or person, for example 3-12 
     *  months for infants, 1-5 years for toddlers.</p>
     */
    public static final OntProperty suggestedAge = M_MODEL.createOntProperty( "http://schema.org/suggestedAge" );
    
    /** <p>An answer (possibly one of several, possibly incorrect) to a Question, e.g. 
     *  on a Question/Answer site.</p>
     */
    public static final OntProperty suggestedAnswer = M_MODEL.createOntProperty( "http://schema.org/suggestedAnswer" );
    
    /** <p>The suggested gender of the intended person or audience, for example "male", 
     *  "female", or "unisex".</p>
     */
    public static final OntProperty suggestedGender = M_MODEL.createOntProperty( "http://schema.org/suggestedGender" );
    
    /** <p>Maximum recommended age in years for the audience or user.</p> */
    public static final OntProperty suggestedMaxAge = M_MODEL.createOntProperty( "http://schema.org/suggestedMaxAge" );
    
    /** <p>A suggested range of body measurements for the intended audience or person, 
     *  for example inseam between 32 and 34 inches or height between 170 and 190 
     *  cm. Typically found on a size chart for wearable products.</p>
     */
    public static final OntProperty suggestedMeasurement = M_MODEL.createOntProperty( "http://schema.org/suggestedMeasurement" );
    
    /** <p>Minimum recommended age in years for the audience or user.</p> */
    public static final OntProperty suggestedMinAge = M_MODEL.createOntProperty( "http://schema.org/suggestedMinAge" );
    
    /** <p>Indicates a dietary restriction or guideline for which this recipe or menu 
     *  item is suitable, e.g. diabetic, halal etc.</p>
     */
    public static final OntProperty suitableForDiet = M_MODEL.createOntProperty( "http://schema.org/suitableForDiet" );
    
    /** <p>An event that this event is a part of. For example, a collection of individual 
     *  music performances might each have a music festival as their superEvent.</p>
     */
    public static final OntProperty superEvent = M_MODEL.createOntProperty( "http://schema.org/superEvent" );
    
    /** <p>Relates a term (i.e. a property, class or enumeration) to one that supersedes 
     *  it.</p>
     */
    public static final OntProperty supersededBy = M_MODEL.createOntProperty( "http://schema.org/supersededBy" );
    
    /** <p>A sub-property of instrument. A supply consumed when performing instructions 
     *  or a direction.</p>
     */
    public static final OntProperty supply = M_MODEL.createOntProperty( "http://schema.org/supply" );
    
    /** <p>The area to which the artery supplies blood.</p> */
    public static final OntProperty supplyTo = M_MODEL.createOntProperty( "http://schema.org/supplyTo" );
    
    /** <p>Supporting data for a SoftwareApplication.</p> */
    public static final OntProperty supportingData = M_MODEL.createOntProperty( "http://schema.org/supportingData" );
    
    /** <p>A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, 
     *  etc.</p>
     */
    public static final OntProperty surface = M_MODEL.createOntProperty( "http://schema.org/surface" );
    
    /** <p>Indicates (typically several) Syllabus entities that lay out what each section 
     *  of the overall course will cover.</p>
     */
    public static final OntProperty syllabusSections = M_MODEL.createOntProperty( "http://schema.org/syllabusSections" );
    
    /** <p>Indicates a target EntryPoint, or url, for an Action.</p> */
    public static final OntProperty target = M_MODEL.createOntProperty( "http://schema.org/target" );
    
    /** <p>A sub property of object. The collection target of the action.</p> */
    public static final OntProperty targetCollection = M_MODEL.createOntProperty( "http://schema.org/targetCollection" );
    
    /** <p>The description of a node in an established educational framework.</p> */
    public static final OntProperty targetDescription = M_MODEL.createOntProperty( "http://schema.org/targetDescription" );
    
    /** <p>The name of a node in an established educational framework.</p> */
    public static final OntProperty targetName = M_MODEL.createOntProperty( "http://schema.org/targetName" );
    
    /** <p>Type of app development: phone, Metro style, desktop, XBox, etc.</p> */
    public static final OntProperty targetPlatform = M_MODEL.createOntProperty( "http://schema.org/targetPlatform" );
    
    /** <p>Characteristics of the population for which this is intended, or which typically 
     *  uses it, e.g. 'adults'.</p>
     */
    public static final OntProperty targetPopulation = M_MODEL.createOntProperty( "http://schema.org/targetPopulation" );
    
    /** <p>Target Operating System / Product to which the code applies. If applies to 
     *  several versions, just the product name can be used.</p>
     */
    public static final OntProperty targetProduct = M_MODEL.createOntProperty( "http://schema.org/targetProduct" );
    
    /** <p>The URL of a node in an established educational framework.</p> */
    public static final OntProperty targetUrl = M_MODEL.createOntProperty( "http://schema.org/targetUrl" );
    
    /** <p>The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US 
     *  or the CIF/NIF in Spain.</p>
     */
    public static final OntProperty taxID = M_MODEL.createOntProperty( "http://schema.org/taxID" );
    
    /** <p>The taxonomic rank of this taxon given preferably as a URI from a controlled 
     *  vocabulary – typically the ranks from TDWG TaxonRank ontology or equivalent 
     *  Wikidata URIs.</p>
     */
    public static final OntProperty taxonRank = M_MODEL.createOntProperty( "http://schema.org/taxonRank" );
    
    /** <p>The taxonomic grouping of the organism that expresses, encodes, or in some 
     *  way related to the BioChemEntity.</p>
     */
    public static final OntProperty taxonomicRange = M_MODEL.createOntProperty( "http://schema.org/taxonomicRange" );
    
    /** <p>The item being described is intended to help a person learn the competency 
     *  or learning outcome defined by the referenced term.</p>
     */
    public static final OntProperty teaches = M_MODEL.createOntProperty( "http://schema.org/teaches" );
    
    /** <p>The telephone number.</p> */
    public static final OntProperty telephone = M_MODEL.createOntProperty( "http://schema.org/telephone" );
    
    /** <p>The "temporal" property can be used in cases where more specific properties 
     *  (e.g. [[temporalCoverage]], [[dateCreated]], [[dateModified]], [[datePublished]]) 
     *  are not known to be appropriate.</p>
     */
    public static final OntProperty temporal_PROP = M_MODEL.createOntProperty( "http://schema.org/temporal" );
    
    /** <p>The temporalCoverage of a CreativeWork indicates the period that the content 
     *  applies to, i.e. that it describes, either as a DateTime or as a textual string 
     *  indicating a time period in [ISO 8601 time interval format](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals). 
     *  In the case of a Dataset it will typically indicate the relevant time period 
     *  in a precise notation (e.g. for a 2011 census dataset, the year 2011 would 
     *  be written "2011/2012"). Other forms of content, e.g. ScholarlyArticle, Book, 
     *  TVSeries or TVEpisode, may indicate their temporalCoverage in broader terms 
     *  - textually or via well-known URL. Written works such as books may sometimes 
     *  have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be 
     *  indicated in ISO 8601 interval format format via "1939/1945". Open-ended date 
     *  ranges can be written with ".." in place of the end date. For example, "2015-11/.." 
     *  indicates a range beginning in November 2015 and with no specified final date. 
     *  This is tentative and might be updated in future when ISO 8601 is officially 
     *  updated.</p>
     */
    public static final OntProperty temporalCoverage = M_MODEL.createOntProperty( "http://schema.org/temporalCoverage" );
    
    /** <p>A code that identifies this [[DefinedTerm]] within a [[DefinedTermSet]].</p> */
    public static final OntProperty termCode = M_MODEL.createOntProperty( "http://schema.org/termCode" );
    
    /** <p>The amount of time in a term as defined by the institution. A term is a length 
     *  of time where students take one or more classes. Semesters and quarters are 
     *  common units for term.</p>
     */
    public static final OntProperty termDuration = M_MODEL.createOntProperty( "http://schema.org/termDuration" );
    
    /** <p>Human-readable terms of service documentation.</p> */
    public static final OntProperty termsOfService = M_MODEL.createOntProperty( "http://schema.org/termsOfService" );
    
    /** <p>The number of times terms of study are offered per year. Semesters and quarters 
     *  are common units for term. For example, if the student can only take 2 semesters 
     *  for the program in one year, then termsPerYear should be 2.</p>
     */
    public static final OntProperty termsPerYear = M_MODEL.createOntProperty( "http://schema.org/termsPerYear" );
    
    /** <p>The textual content of this CreativeWork.</p> */
    public static final OntProperty text = M_MODEL.createOntProperty( "http://schema.org/text" );
    
    /** <p>Text value being annotated.</p> */
    public static final OntProperty textValue = M_MODEL.createOntProperty( "http://schema.org/textValue" );
    
    /** <p>Thumbnail image for an image or video.</p> */
    public static final OntProperty thumbnail = M_MODEL.createOntProperty( "http://schema.org/thumbnail" );
    
    /** <p>A thumbnail image relevant to the Thing.</p> */
    public static final OntProperty thumbnailUrl = M_MODEL.createOntProperty( "http://schema.org/thumbnailUrl" );
    
    /** <p>The exchange traded instrument associated with a Corporation object. The tickerSymbol 
     *  is expressed as an exchange and an instrument name separated by a space character. 
     *  For the exchange component of the tickerSymbol attribute, we recommend using 
     *  the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO 
     *  15022.</p>
     */
    public static final OntProperty tickerSymbol = M_MODEL.createOntProperty( "http://schema.org/tickerSymbol" );
    
    /** <p>The unique identifier for the ticket.</p> */
    public static final OntProperty ticketNumber = M_MODEL.createOntProperty( "http://schema.org/ticketNumber" );
    
    /** <p>Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.</p> */
    public static final OntProperty ticketToken = M_MODEL.createOntProperty( "http://schema.org/ticketToken" );
    
    /** <p>The seat associated with the ticket.</p> */
    public static final OntProperty ticketedSeat = M_MODEL.createOntProperty( "http://schema.org/ticketedSeat" );
    
    /** <p>The time of day the program normally runs. For example, "evenings".</p> */
    public static final OntProperty timeOfDay = M_MODEL.createOntProperty( "http://schema.org/timeOfDay" );
    
    /** <p>Approximate or typical time it usually takes to work with or through the content 
     *  of this work for the typical or target audience.</p>
     */
    public static final OntProperty timeRequired = M_MODEL.createOntProperty( "http://schema.org/timeRequired" );
    
    /** <p>The expected length of time to complete the program if attending full-time.</p> */
    public static final OntProperty timeToComplete = M_MODEL.createOntProperty( "http://schema.org/timeToComplete" );
    
    /** <p>The type of tissue sample required for the test.</p> */
    public static final OntProperty tissueSample = M_MODEL.createOntProperty( "http://schema.org/tissueSample" );
    
    /** <p>The title of the job.</p> */
    public static final OntProperty title_PROP = M_MODEL.createOntProperty( "http://schema.org/title" );
    
    /** <p>An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] 
     *  representing at the most general/abstract level, a work of film or television. 
     *  For example, the motion picture known as "Ghostbusters" has a titleEIDR of 
     *  "10.5240/7EC7-228A-510A-053E-CBB8-J". This title (or work) may have several 
     *  variants, which EIDR calls "edits". See [[editEIDR]]. Since schema.org types 
     *  like [[Movie]], [[TVEpisode]], [[TVSeason]], and [[TVSeries]] can be used 
     *  for both works and their multiple expressions, it is possible to use [[titleEIDR]] 
     *  alone (for a general description), or alongside [[editEIDR]] for a more edit-specific 
     *  description.</p>
     */
    public static final OntProperty titleEIDR = M_MODEL.createOntProperty( "http://schema.org/titleEIDR" );
    
    /** <p>A sub property of location. The final location of the object or the agent 
     *  after the action.</p>
     */
    public static final OntProperty toLocation = M_MODEL.createOntProperty( "http://schema.org/toLocation" );
    
    /** <p>A sub property of recipient. The recipient who was directly sent the message.</p> */
    public static final OntProperty toRecipient = M_MODEL.createOntProperty( "http://schema.org/toRecipient" );
    
    /** <p>A [[HyperTocEntry]] can have a [[tocContinuation]] indicated, which is another 
     *  [[HyperTocEntry]] that would be the default next item to play or render.</p>
     */
    public static final OntProperty tocContinuation = M_MODEL.createOntProperty( "http://schema.org/tocContinuation" );
    
    /** <p>Indicates a [[HyperTocEntry]] in a [[HyperToc]].</p> */
    public static final OntProperty tocEntry = M_MODEL.createOntProperty( "http://schema.org/tocEntry" );
    
    /** <p>The permitted vertical load (TWR) of a trailer attached to the vehicle. Also 
     *  referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR).
     *  
     *  Typical unit code(s): KGM for kilogram, LBR for pound
     *  
     *  * Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] 
     *  node.
     *  * Note 2: You may also link to a [[QualitativeValue]] node that provides additional 
     *  information using [[valueReference]].
     *  * Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate 
     *  ranges.</p>
     */
    public static final OntProperty tongueWeight = M_MODEL.createOntProperty( "http://schema.org/tongueWeight" );
    
    /** <p>A sub property of instrument. An object used (but not consumed) when performing 
     *  instructions or a direction.</p>
     */
    public static final OntProperty tool = M_MODEL.createOntProperty( "http://schema.org/tool" );
    
    /** <p>The torque (turning force) of the vehicle's engine.
     *  
     *  Typical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, 
     *  or F48 for pound-force per inch
     *  
     *  * Note 1: You can link to information about how the given value has been determined 
     *  (e.g. reference RPM) using the [[valueReference]] property.
     *  * Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.</p>
     */
    public static final OntProperty torque = M_MODEL.createOntProperty( "http://schema.org/torque" );
    
    /** <p>The total number of students that have enrolled in the history of the course.</p> */
    public static final OntProperty totalHistoricalEnrollment = M_MODEL.createOntProperty( "http://schema.org/totalHistoricalEnrollment" );
    
    /** <p>The number of positions open for this job posting. Use a positive integer. 
     *  Do not use if the number of positions is unclear or not known.</p>
     */
    public static final OntProperty totalJobOpenings = M_MODEL.createOntProperty( "http://schema.org/totalJobOpenings" );
    
    /** <p>The total amount due.</p> */
    public static final OntProperty totalPaymentDue = M_MODEL.createOntProperty( "http://schema.org/totalPaymentDue" );
    
    /** <p>The total price for the reservation or ticket, including applicable taxes, 
     *  shipping, etc.
     *  
     *  Usage guidelines:
     *  
     *  * Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' 
     *  (U+0039)) rather than superficially similar Unicode symbols.
     *  * Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal 
     *  point. Avoid using these symbols as a readability separator.</p>
     */
    public static final OntProperty totalPrice = M_MODEL.createOntProperty( "http://schema.org/totalPrice" );
    
    /** <p>The total time required to perform instructions or a direction (including 
     *  time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).</p>
     */
    public static final OntProperty totalTime = M_MODEL.createOntProperty( "http://schema.org/totalTime" );
    
    /** <p>A page providing information on how to book a tour of some [[Place]], such 
     *  as an [[Accommodation]] or [[ApartmentComplex]] in a real estate setting, 
     *  as well as other kinds of tours as appropriate.</p>
     */
    public static final OntProperty tourBookingPage = M_MODEL.createOntProperty( "http://schema.org/tourBookingPage" );
    
    /** <p>Attraction suitable for type(s) of tourist. E.g. children, visitors from a 
     *  particular country, etc.</p>
     */
    public static final OntProperty touristType = M_MODEL.createOntProperty( "http://schema.org/touristType" );
    
    /** <p>A music recording (track)&amp;#x2014;usually a single song. If an ItemList 
     *  is given, the list should contain items of type MusicRecording.</p>
     */
    public static final OntProperty track = M_MODEL.createOntProperty( "http://schema.org/track" );
    
    /** <p>Shipper tracking number.</p> */
    public static final OntProperty trackingNumber = M_MODEL.createOntProperty( "http://schema.org/trackingNumber" );
    
    /** <p>Tracking url for the parcel delivery.</p> */
    public static final OntProperty trackingUrl = M_MODEL.createOntProperty( "http://schema.org/trackingUrl" );
    
    /** <p>A music recording (track)&amp;#x2014;usually a single song.</p> */
    public static final OntProperty tracks = M_MODEL.createOntProperty( "http://schema.org/tracks" );
    
    /** <p>The trailer of a movie or TV/radio series, season, episode, etc.</p> */
    public static final OntProperty trailer = M_MODEL.createOntProperty( "http://schema.org/trailer" );
    
    /** <p>The permitted weight of a trailer attached to the vehicle.
     *  
     *  Typical unit code(s): KGM for kilogram, LBR for pound
     *  * Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] 
     *  node.
     *  * Note 2: You may also link to a [[QualitativeValue]] node that provides additional 
     *  information using [[valueReference]].
     *  * Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate 
     *  ranges.</p>
     */
    public static final OntProperty trailerWeight = M_MODEL.createOntProperty( "http://schema.org/trailerWeight" );
    
    /** <p>The name of the train (e.g. The Orient Express).</p> */
    public static final OntProperty trainName = M_MODEL.createOntProperty( "http://schema.org/trainName" );
    
    /** <p>The unique identifier for the train.</p> */
    public static final OntProperty trainNumber = M_MODEL.createOntProperty( "http://schema.org/trainNumber" );
    
    /** <p>The estimated salary earned while in the program.</p> */
    public static final OntProperty trainingSalary = M_MODEL.createOntProperty( "http://schema.org/trainingSalary" );
    
    /** <p>The number of grams of trans fat.</p> */
    public static final OntProperty transFatContent = M_MODEL.createOntProperty( "http://schema.org/transFatContent" );
    
    /** <p>If this MediaObject is an AudioObject or VideoObject, the transcript of that 
     *  object.</p>
     */
    public static final OntProperty transcript = M_MODEL.createOntProperty( "http://schema.org/transcript" );
    
    /** <p>The typical delay the order has been sent for delivery and the goods reach 
     *  the final customer. In the context of [[ShippingDeliveryTime]], use the [[QuantitativeValue]]. 
     *  Typical properties: minValue, maxValue, unitCode (d for DAY). In the context 
     *  of [[ShippingConditions]], use the [[ServicePeriod]]. It has a duration (as 
     *  a [[QuantitativeValue]]) and also business days and a cut-off time.</p>
     */
    public static final OntProperty transitTime = M_MODEL.createOntProperty( "http://schema.org/transitTime" );
    
    /** <p>The work that this work has been translated from. E.g. 物种起源 is a translationOf 
     *  “On the Origin of Species”.</p>
     */
    public static final OntProperty translationOfWork = M_MODEL.createOntProperty( "http://schema.org/translationOfWork" );
    
    /** <p>Organization or person who adapts a creative work to different languages, 
     *  regional differences and technical requirements of a target market, or that 
     *  translates during some event.</p>
     */
    public static final OntProperty translator = M_MODEL.createOntProperty( "http://schema.org/translator" );
    
    /** <p>How the disease spreads, either as a route or vector, for example 'direct 
     *  contact', 'Aedes aegypti', etc.</p>
     */
    public static final OntProperty transmissionMethod = M_MODEL.createOntProperty( "http://schema.org/transmissionMethod" );
    
    /** <p>Information about travel bans, e.g. in the context of a pandemic.</p> */
    public static final OntProperty travelBans = M_MODEL.createOntProperty( "http://schema.org/travelBans" );
    
    /** <p>Specifics about the trial design (enumerated).</p> */
    public static final OntProperty trialDesign = M_MODEL.createOntProperty( "http://schema.org/trialDesign" );
    
    /** <p>The anatomical or organ system that the vein flows into; a larger structure 
     *  that the vein connects to.</p>
     */
    public static final OntProperty tributary = M_MODEL.createOntProperty( "http://schema.org/tributary" );
    
    /** <p>The location of origin of the trip, prior to any destination(s).</p> */
    public static final OntProperty tripOrigin = M_MODEL.createOntProperty( "http://schema.org/tripOrigin" );
    
    /** <p>The type of bed to which the BedDetail refers, i.e. the type of bed available 
     *  in the quantity indicated by quantity.</p>
     */
    public static final OntProperty typeOfBed = M_MODEL.createOntProperty( "http://schema.org/typeOfBed" );
    
    /** <p>The product that this structured value is referring to.</p> */
    public static final OntProperty typeOfGood = M_MODEL.createOntProperty( "http://schema.org/typeOfGood" );
    
    /** <p>The typical expected age range, e.g. '7-9', '11-'.</p> */
    public static final OntProperty typicalAgeRange = M_MODEL.createOntProperty( "http://schema.org/typicalAgeRange" );
    
    /** <p>The number of credits or units a full-time student would be expected to take 
     *  in 1 term however 'term' is defined by the institution.</p>
     */
    public static final OntProperty typicalCreditsPerTerm = M_MODEL.createOntProperty( "http://schema.org/typicalCreditsPerTerm" );
    
    /** <p>A medical test typically performed given this condition.</p> */
    public static final OntProperty typicalTest = M_MODEL.createOntProperty( "http://schema.org/typicalTest" );
    
    /** <p>The person or organization the reservation or ticket is for.</p> */
    public static final OntProperty underName = M_MODEL.createOntProperty( "http://schema.org/underName" );
    
    /** <p>The unit of measurement given using the UN/CEFACT Common Code (3 characters) 
     *  or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix 
     *  followed by a colon.</p>
     */
    public static final OntProperty unitCode = M_MODEL.createOntProperty( "http://schema.org/unitCode" );
    
    /** <p>A string or text indicating the unit of measurement. Useful if you cannot 
     *  provide a standard unit code for &lt;a href='unitCode'&gt;unitCode&lt;/a&gt;.</p>
     */
    public static final OntProperty unitText = M_MODEL.createOntProperty( "http://schema.org/unitText" );
    
    /** <p>For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement 
     *  about policy on use of unnamed sources and the decision process required.</p>
     */
    public static final OntProperty unnamedSourcesPolicy = M_MODEL.createOntProperty( "http://schema.org/unnamedSourcesPolicy" );
    
    /** <p>The number of grams of unsaturated fat.</p> */
    public static final OntProperty unsaturatedFatContent = M_MODEL.createOntProperty( "http://schema.org/unsaturatedFatContent" );
    
    /** <p>Date (including time if available) when this media object was uploaded to 
     *  this site.</p>
     */
    public static final OntProperty uploadDate = M_MODEL.createOntProperty( "http://schema.org/uploadDate" );
    
    /** <p>The number of upvotes this question, answer or comment has received from the 
     *  community.</p>
     */
    public static final OntProperty upvoteCount = M_MODEL.createOntProperty( "http://schema.org/upvoteCount" );
    
    /** <p>URL of the item.</p> */
    public static final OntProperty url = M_MODEL.createOntProperty( "http://schema.org/url" );
    
    /** <p>An url template (RFC6570) that will be used to construct the target of the 
     *  execution of the action.</p>
     */
    public static final OntProperty urlTemplate = M_MODEL.createOntProperty( "http://schema.org/urlTemplate" );
    
    /** <p>A &lt;a href="https://en.wikipedia.org/wiki/National_Provider_Identifier"&gt;National 
     *  Provider Identifier&lt;/a&gt; (NPI) is a unique 10-digit identification number 
     *  issued to health care providers in the United States by the Centers for Medicare 
     *  and Medicaid Services.</p>
     */
    public static final OntProperty usNPI = M_MODEL.createOntProperty( "http://schema.org/usNPI" );
    
    /** <p>The schema.org [[usageInfo]] property indicates further information about 
     *  a [[CreativeWork]]. This property is applicable both to works that are freely 
     *  available and to those that require payment or other transactions. It can 
     *  reference additional information, e.g. community expectations on preferred 
     *  linking and citation conventions, as well as purchasing details. For something 
     *  that can be commercially licensed, usageInfo can provide detailed, resource-specific 
     *  information about licensing options. This property can be used alongside the 
     *  license property which indicates license(s) applicable to some piece of content. 
     *  The usageInfo property can provide information about other licensing options, 
     *  e.g. acquiring commercial usage rights for an image that is also available 
     *  under non-commercial creative commons licenses.</p>
     */
    public static final OntProperty usageInfo = M_MODEL.createOntProperty( "http://schema.org/usageInfo" );
    
    /** <p>A condition the test is used to diagnose.</p> */
    public static final OntProperty usedToDiagnose = M_MODEL.createOntProperty( "http://schema.org/usedToDiagnose" );
    
    /** <p>The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.</p> */
    public static final OntProperty userInteractionCount = M_MODEL.createOntProperty( "http://schema.org/userInteractionCount" );
    
    /** <p>Device used to perform the test.</p> */
    public static final OntProperty usesDevice = M_MODEL.createOntProperty( "http://schema.org/usesDevice" );
    
    /** <p>The standard for interpreting the Plan ID. The preferred is "HIOS". See the 
     *  Centers for Medicare &amp; Medicaid Services for more details.</p>
     */
    public static final OntProperty usesHealthPlanIdStandard = M_MODEL.createOntProperty( "http://schema.org/usesHealthPlanIdStandard" );
    
    /** <p>Text of an utterances (spoken words, lyrics etc.) that occurs at a certain 
     *  section of a media object, represented as a [[HyperTocEntry]].</p>
     */
    public static final OntProperty utterances = M_MODEL.createOntProperty( "http://schema.org/utterances" );
    
    /** <p>The duration of validity of a permit or similar thing.</p> */
    public static final OntProperty validFor = M_MODEL.createOntProperty( "http://schema.org/validFor" );
    
    /** <p>The membership program tier an Offer (or a PriceSpecification, OfferShippingDetails, 
     *  or MerchantReturnPolicy under an Offer) is valid for.</p>
     */
    public static final OntProperty validForMemberTier = M_MODEL.createOntProperty( "http://schema.org/validForMemberTier" );
    
    /** <p>The date when the item becomes valid.</p> */
    public static final OntProperty validFrom = M_MODEL.createOntProperty( "http://schema.org/validFrom" );
    
    /** <p>The geographic area where the item is valid. Applies for example to a [[Permit]], 
     *  a [[Certification]], or an [[EducationalOccupationalCredential]].</p>
     */
    public static final OntProperty validIn = M_MODEL.createOntProperty( "http://schema.org/validIn" );
    
    /** <p>The date after when the item is not valid. For example the end of an offer, 
     *  salary period, or a period of opening hours.</p>
     */
    public static final OntProperty validThrough = M_MODEL.createOntProperty( "http://schema.org/validThrough" );
    
    /** <p>The date when the item is no longer valid.</p> */
    public static final OntProperty validUntil = M_MODEL.createOntProperty( "http://schema.org/validUntil" );
    
    /** <p>The value of a [[QuantitativeValue]] (including [[Observation]]) or property 
     *  value node.
     *  
     *  * For [[QuantitativeValue]] and [[MonetaryAmount]], the recommended type for 
     *  values is 'Number'.
     *  * For [[PropertyValue]], it can be 'Text', 'Number', 'Boolean', or 'StructuredValue'.
     *  * Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' 
     *  (U+0039)) rather than superficially similar Unicode symbols.
     *  * Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal 
     *  point. Avoid using these symbols as a readability separator.</p>
     */
    public static final OntProperty value = M_MODEL.createOntProperty( "http://schema.org/value" );
    
    /** <p>Specifies whether the applicable value-added tax (VAT) is included in the 
     *  price specification or not.</p>
     */
    public static final OntProperty valueAddedTaxIncluded = M_MODEL.createOntProperty( "http://schema.org/valueAddedTaxIncluded" );
    
    /** <p>Specifies the allowed range for number of characters in a literal value.</p> */
    public static final OntProperty valueMaxLength = M_MODEL.createOntProperty( "http://schema.org/valueMaxLength" );
    
    /** <p>Specifies the minimum allowed range for number of characters in a literal 
     *  value.</p>
     */
    public static final OntProperty valueMinLength = M_MODEL.createOntProperty( "http://schema.org/valueMinLength" );
    
    /** <p>Indicates the name of the PropertyValueSpecification to be used in URL templates 
     *  and form encoding in a manner analogous to HTML's input@name.</p>
     */
    public static final OntProperty valueName = M_MODEL.createOntProperty( "http://schema.org/valueName" );
    
    /** <p>Specifies a regular expression for testing literal values according to the 
     *  HTML spec.</p>
     */
    public static final OntProperty valuePattern = M_MODEL.createOntProperty( "http://schema.org/valuePattern" );
    
    /** <p>A secondary value that provides additional information on the original value, 
     *  e.g. a reference temperature or a type of measurement.</p>
     */
    public static final OntProperty valueReference = M_MODEL.createOntProperty( "http://schema.org/valueReference" );
    
    /** <p>Whether the property must be filled in to complete the action. Default is 
     *  false.</p>
     */
    public static final OntProperty valueRequired = M_MODEL.createOntProperty( "http://schema.org/valueRequired" );
    
    /** <p>The variableMeasured property can indicate (repeated as necessary) the variables 
     *  that are measured in some dataset, either described as text or as pairs of 
     *  identifier and description using PropertyValue, or more explicitly as a [[StatisticalVariable]].</p>
     */
    public static final OntProperty variableMeasured = M_MODEL.createOntProperty( "http://schema.org/variableMeasured" );
    
    /** <p>A description of the variant cover for the issue, if the issue is a variant 
     *  printing. For example, "Bryan Hitch Variant Cover" or "2nd Printing Variant".</p>
     */
    public static final OntProperty variantCover = M_MODEL.createOntProperty( "http://schema.org/variantCover" );
    
    /** <p>Indicates the property or properties by which the variants in a [[ProductGroup]] 
     *  vary, e.g. their size, color etc. Schema.org properties can be referenced 
     *  by their short name e.g. "color"; terms defined elsewhere can be referenced 
     *  with their URIs.</p>
     */
    public static final OntProperty variesBy = M_MODEL.createOntProperty( "http://schema.org/variesBy" );
    
    /** <p>The Value-added Tax ID of the organization or person.</p> */
    public static final OntProperty vatID = M_MODEL.createOntProperty( "http://schema.org/vatID" );
    
    /** <p>A short text indicating the configuration of the vehicle, e.g. '5dr hatchback 
     *  ST 2.5 MT 225 hp' or 'limited edition'.</p>
     */
    public static final OntProperty vehicleConfiguration = M_MODEL.createOntProperty( "http://schema.org/vehicleConfiguration" );
    
    /** <p>Information about the engine or engines of the vehicle.</p> */
    public static final OntProperty vehicleEngine = M_MODEL.createOntProperty( "http://schema.org/vehicleEngine" );
    
    /** <p>The Vehicle Identification Number (VIN) is a unique serial number used by 
     *  the automotive industry to identify individual motor vehicles.</p>
     */
    public static final OntProperty vehicleIdentificationNumber = M_MODEL.createOntProperty( "http://schema.org/vehicleIdentificationNumber" );
    
    /** <p>The color or color combination of the interior of the vehicle.</p> */
    public static final OntProperty vehicleInteriorColor = M_MODEL.createOntProperty( "http://schema.org/vehicleInteriorColor" );
    
    /** <p>The type or material of the interior of the vehicle (e.g. synthetic fabric, 
     *  leather, wood, etc.). While most interior types are characterized by the material 
     *  used, an interior type can also be based on vehicle usage or target audience.</p>
     */
    public static final OntProperty vehicleInteriorType = M_MODEL.createOntProperty( "http://schema.org/vehicleInteriorType" );
    
    /** <p>The release date of a vehicle model (often used to differentiate versions 
     *  of the same make and model).</p>
     */
    public static final OntProperty vehicleModelDate = M_MODEL.createOntProperty( "http://schema.org/vehicleModelDate" );
    
    /** <p>The number of passengers that can be seated in the vehicle, both in terms 
     *  of the physical space available, and in terms of limitations set by law.
     *  
     *  Typical unit code(s): C62 for persons.</p>
     */
    public static final OntProperty vehicleSeatingCapacity = M_MODEL.createOntProperty( "http://schema.org/vehicleSeatingCapacity" );
    
    /** <p>Indicates whether the vehicle has been used for special purposes, like commercial 
     *  rental, driving school, or as a taxi. The legislation in many countries requires 
     *  this information to be revealed when offering a car for sale.</p>
     */
    public static final OntProperty vehicleSpecialUsage = M_MODEL.createOntProperty( "http://schema.org/vehicleSpecialUsage" );
    
    /** <p>The type of component used for transmitting the power from a rotating power 
     *  source to the wheels or other relevant component(s) ("gearbox" for cars).</p>
     */
    public static final OntProperty vehicleTransmission = M_MODEL.createOntProperty( "http://schema.org/vehicleTransmission" );
    
    /** <p>'vendor' is an earlier term for 'seller'.</p> */
    public static final OntProperty vendor = M_MODEL.createOntProperty( "http://schema.org/vendor" );
    
    /** <p>Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] 
     *  or other fact-checking [[Organization]].</p>
     */
    public static final OntProperty verificationFactCheckingPolicy = M_MODEL.createOntProperty( "http://schema.org/verificationFactCheckingPolicy" );
    
    /** <p>The version of the CreativeWork embodied by a specified resource.</p> */
    public static final OntProperty version = M_MODEL.createOntProperty( "http://schema.org/version" );
    
    /** <p>An embedded video object.</p> */
    public static final OntProperty video = M_MODEL.createOntProperty( "http://schema.org/video" );
    
    /** <p>The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).</p> */
    public static final OntProperty videoFormat = M_MODEL.createOntProperty( "http://schema.org/videoFormat" );
    
    /** <p>The frame size of the video.</p> */
    public static final OntProperty videoFrameSize = M_MODEL.createOntProperty( "http://schema.org/videoFrameSize" );
    
    /** <p>The quality of the video.</p> */
    public static final OntProperty videoQuality = M_MODEL.createOntProperty( "http://schema.org/videoQuality" );
    
    /** <p>Identifies the volume of publication or multi-part work; for example, "iii" 
     *  or "2".</p>
     */
    public static final OntProperty volumeNumber = M_MODEL.createOntProperty( "http://schema.org/volumeNumber" );
    
    /** <p>Any FDA or other warnings about the drug (text or URL).</p> */
    public static final OntProperty warning = M_MODEL.createOntProperty( "http://schema.org/warning" );
    
    /** <p>The warranty promise(s) included in the offer.</p> */
    public static final OntProperty warranty = M_MODEL.createOntProperty( "http://schema.org/warranty" );
    
    /** <p>The warranty promise(s) included in the offer.</p> */
    public static final OntProperty warrantyPromise = M_MODEL.createOntProperty( "http://schema.org/warrantyPromise" );
    
    /** <p>The scope of the warranty promise.</p> */
    public static final OntProperty warrantyScope = M_MODEL.createOntProperty( "http://schema.org/warrantyScope" );
    
    /** <p>The time when a passenger can check into the flight online.</p> */
    public static final OntProperty webCheckinTime = M_MODEL.createOntProperty( "http://schema.org/webCheckinTime" );
    
    /** <p>The URL for a feed, e.g. associated with a podcast series, blog, or series 
     *  of date-stamped updates. This is usually RSS or Atom.</p>
     */
    public static final OntProperty webFeed = M_MODEL.createOntProperty( "http://schema.org/webFeed" );
    
    /** <p>The weight of the product or person.</p> */
    public static final OntProperty weight = M_MODEL.createOntProperty( "http://schema.org/weight" );
    
    /** <p>Fraction of the weight that is used to compute the shipping price.</p> */
    public static final OntProperty weightPercentage = M_MODEL.createOntProperty( "http://schema.org/weightPercentage" );
    
    /** <p>The permitted total weight of the loaded vehicle, including passengers and 
     *  cargo and the weight of the empty vehicle.
     *  
     *  Typical unit code(s): KGM for kilogram, LBR for pound
     *  
     *  * Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] 
     *  node.
     *  * Note 2: You may also link to a [[QualitativeValue]] node that provides additional 
     *  information using [[valueReference]].
     *  * Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate 
     *  ranges.</p>
     */
    public static final OntProperty weightTotal = M_MODEL.createOntProperty( "http://schema.org/weightTotal" );
    
    /** <p>The distance between the centers of the front and rear wheels.
     *  
     *  Typical unit code(s): CMT for centimeters, MTR for meters, INH for inches, 
     *  FOT for foot/feet.</p>
     */
    public static final OntProperty wheelbase = M_MODEL.createOntProperty( "http://schema.org/wheelbase" );
    
    /** <p>The width of the item.</p> */
    public static final OntProperty width = M_MODEL.createOntProperty( "http://schema.org/width" );
    
    /** <p>A sub property of participant. The winner of the action.</p> */
    public static final OntProperty winner = M_MODEL.createOntProperty( "http://schema.org/winner" );
    
    /** <p>The number of words in the text of the CreativeWork such as an Article, Book, 
     *  etc.</p>
     */
    public static final OntProperty wordCount = M_MODEL.createOntProperty( "http://schema.org/wordCount" );
    
    /** <p>Example/instance/realization/derivation of the concept of this creative work. 
     *  E.g. the paperback edition, first edition, or e-book.</p>
     */
    public static final OntProperty workExample = M_MODEL.createOntProperty( "http://schema.org/workExample" );
    
    /** <p>A work featured in some event, e.g. exhibited in an ExhibitionEvent. Specific 
     *  subproperties are available for workPerformed (e.g. a play), or a workPresented 
     *  (a Movie at a ScreeningEvent).</p>
     */
    public static final OntProperty workFeatured = M_MODEL.createOntProperty( "http://schema.org/workFeatured" );
    
    /** <p>The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).</p> */
    public static final OntProperty workHours = M_MODEL.createOntProperty( "http://schema.org/workHours" );
    
    /** <p>A contact location for a person's place of work.</p> */
    public static final OntProperty workLocation = M_MODEL.createOntProperty( "http://schema.org/workLocation" );
    
    /** <p>A work performed in some event, for example a play performed in a TheaterEvent.</p> */
    public static final OntProperty workPerformed = M_MODEL.createOntProperty( "http://schema.org/workPerformed" );
    
    /** <p>The movie presented during this event.</p> */
    public static final OntProperty workPresented = M_MODEL.createOntProperty( "http://schema.org/workPresented" );
    
    /** <p>A work that is a translation of the content of this work. E.g. 西遊記 has an 
     *  English workTranslation “Journey to the West”, a German workTranslation “Monkeys 
     *  Pilgerfahrt” and a Vietnamese translation Tây du ký bình khảo.</p>
     */
    public static final OntProperty workTranslation = M_MODEL.createOntProperty( "http://schema.org/workTranslation" );
    
    /** <p>Quantitative measure of the physiologic output of the exercise; also referred 
     *  to as energy expenditure.</p>
     */
    public static final OntProperty workload = M_MODEL.createOntProperty( "http://schema.org/workload" );
    
    /** <p>Organizations that the person works for.</p> */
    public static final OntProperty worksFor = M_MODEL.createOntProperty( "http://schema.org/worksFor" );
    
    /** <p>The lowest value allowed in this rating system.</p> */
    public static final OntProperty worstRating = M_MODEL.createOntProperty( "http://schema.org/worstRating" );
    
    /** <p>An XPath, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the 
     *  latter case, multiple matches within a page can constitute a single conceptual 
     *  "Web page element".</p>
     */
    public static final OntProperty xpath = M_MODEL.createOntProperty( "http://schema.org/xpath" );
    
    /** <p>The year an [[Accommodation]] was constructed. This corresponds to the [YearBuilt 
     *  field in RESO](https://ddwiki.reso.org/display/DDW17/YearBuilt+Field).</p>
     */
    public static final OntProperty yearBuilt = M_MODEL.createOntProperty( "http://schema.org/yearBuilt" );
    
    /** <p>The size of the business in annual revenue.</p> */
    public static final OntProperty yearlyRevenue = M_MODEL.createOntProperty( "http://schema.org/yearlyRevenue" );
    
    /** <p>The age of the business.</p> */
    public static final OntProperty yearsInOperation = M_MODEL.createOntProperty( "http://schema.org/yearsInOperation" );
    
    /** <p>The quantity that results by performing instructions. For example, a paper 
     *  airplane, 10 personalized candles.</p>
     */
    public static final OntProperty yield = M_MODEL.createOntProperty( "http://schema.org/yield" );
    
    public static final OntProperty first = M_MODEL.createOntProperty( "http://www.w3.org/1999/02/22-rdf-syntax-ns#first" );
    
    public static final OntProperty object_PROP = M_MODEL.createOntProperty( "http://www.w3.org/1999/02/22-rdf-syntax-ns#object" );
    
    public static final OntProperty predicate = M_MODEL.createOntProperty( "http://www.w3.org/1999/02/22-rdf-syntax-ns#predicate" );
    
    public static final OntProperty rest = M_MODEL.createOntProperty( "http://www.w3.org/1999/02/22-rdf-syntax-ns#rest" );
    
    public static final OntProperty subject = M_MODEL.createOntProperty( "http://www.w3.org/1999/02/22-rdf-syntax-ns#subject" );
    
    public static final OntProperty type = M_MODEL.createOntProperty( "http://www.w3.org/1999/02/22-rdf-syntax-ns#type" );
    
    public static final OntProperty comment_PROP = M_MODEL.createOntProperty( "http://www.w3.org/2000/01/rdf-schema#comment" );
    
    public static final OntProperty domain = M_MODEL.createOntProperty( "http://www.w3.org/2000/01/rdf-schema#domain" );
    
    public static final OntProperty isDefinedBy = M_MODEL.createOntProperty( "http://www.w3.org/2000/01/rdf-schema#isDefinedBy" );
    
    public static final OntProperty label_PROP1 = M_MODEL.createOntProperty( "http://www.w3.org/2000/01/rdf-schema#label" );
    
    public static final OntProperty range = M_MODEL.createOntProperty( "http://www.w3.org/2000/01/rdf-schema#range" );
    
    public static final OntProperty seeAlso = M_MODEL.createOntProperty( "http://www.w3.org/2000/01/rdf-schema#seeAlso" );
    
    public static final OntProperty subClassOf = M_MODEL.createOntProperty( "http://www.w3.org/2000/01/rdf-schema#subClassOf" );
    
    public static final OntProperty subPropertyOf = M_MODEL.createOntProperty( "http://www.w3.org/2000/01/rdf-schema#subPropertyOf" );
    
    public static final OntProperty backwardCompatibleWith = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#backwardCompatibleWith" );
    
    public static final OntProperty equivalentClass = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#equivalentClass" );
    
    public static final OntProperty equivalentProperty = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#equivalentProperty" );
    
    public static final OntProperty imports = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#imports" );
    
    public static final OntProperty incompatibleWith = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#incompatibleWith" );
    
    public static final OntProperty intersectionOf = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#intersectionOf" );
    
    public static final OntProperty onProperty = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#onProperty" );
    
    public static final OntProperty oneOf = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#oneOf" );
    
    public static final OntProperty priorVersion = M_MODEL.createOntProperty( "http://www.w3.org/2002/07/owl#priorVersion" );
    
    public static final OntProperty closeMatch = M_MODEL.createOntProperty( "http://www.w3.org/2004/02/skos/core#closeMatch" );
    
    public static final OntProperty exactMatch = M_MODEL.createOntProperty( "http://www.w3.org/2004/02/skos/core#exactMatch" );
    
    public static final OntClass __ = M_MODEL.createClass( "http://purl.bioontology.org/ontology/SNOMEDCT/105590001" );
    
    public static final OntClass ___CLASS = M_MODEL.createClass( "http://purl.bioontology.org/ontology/SNOMEDCT/116154003" );
    
    public static final OntClass ___CLASS1 = M_MODEL.createClass( "http://purl.bioontology.org/ontology/SNOMEDCT/277132007" );
    
    public static final OntClass ___CLASS2 = M_MODEL.createClass( "http://purl.bioontology.org/ontology/SNOMEDCT/387713003" );
    
    public static final OntClass ___CLASS3 = M_MODEL.createClass( "http://purl.bioontology.org/ontology/SNOMEDCT/410942007" );
    
    public static final OntClass ___CLASS4 = M_MODEL.createClass( "http://purl.bioontology.org/ontology/SNOMEDCT/50731006" );
    
    public static final OntClass ___CLASS5 = M_MODEL.createClass( "http://purl.bioontology.org/ontology/SNOMEDCT/51114001" );
    
    public static final OntClass ___CLASS6 = M_MODEL.createClass( "http://purl.bioontology.org/ontology/SNOMEDCT/63653004" );
    
    public static final OntClass Dataset = M_MODEL.createClass( "http://purl.org/dc/dcmitype/Dataset" );
    
    public static final OntClass Event = M_MODEL.createClass( "http://purl.org/dc/dcmitype/Event" );
    
    public static final OntClass Image = M_MODEL.createClass( "http://purl.org/dc/dcmitype/Image" );
    
    public static final OntClass Text = M_MODEL.createClass( "http://purl.org/dc/dcmitype/Text" );
    
    public static final OntClass Issue = M_MODEL.createClass( "http://purl.org/ontology/bibo/Issue" );
    
    public static final OntClass Periodical = M_MODEL.createClass( "http://purl.org/ontology/bibo/Periodical" );
    
    public static final OntClass Dataset_CLASS = M_MODEL.createClass( "http://rdfs.org/ns/void#Dataset" );
    
    /** <p>A 3D model represents some kind of 3D content, which may have [[encoding]]s 
     *  in one or more [[MediaObject]]s. Many 3D formats are available (e.g. see [Wikipedia](https://en.wikipedia.org/wiki/Category:3D_graphics_file_formats)); 
     *  specific encoding formats can be represented using the [[encodingFormat]] 
     *  property applied to the relevant [[MediaObject]]. For the case of a single 
     *  file published after Zip compression, the convention of appending '+zip' to 
     *  the [[encodingFormat]] can be used. Geospatial, AR/VR, artistic/animation, 
     *  gaming, engineering and scientific content can all be represented using [[3DModel]].</p>
     */
    public static final OntClass DModel = M_MODEL.createClass( "http://schema.org/3DModel" );
    
    /** <p>A radio channel that uses AM.</p> */
    public static final OntClass AMRadioChannel = M_MODEL.createClass( "http://schema.org/AMRadioChannel" );
    
    /** <p>Reference documentation for application programming interfaces (APIs).</p> */
    public static final OntClass APIReference = M_MODEL.createClass( "http://schema.org/APIReference" );
    
    /** <p>Web page type: About page.</p> */
    public static final OntClass AboutPage = M_MODEL.createClass( "http://schema.org/AboutPage" );
    
    /** <p>The act of committing to/adopting an object.
     *  
     *  Related actions:
     *  
     *  * [[RejectAction]]: The antonym of AcceptAction.</p>
     */
    public static final OntClass AcceptAction = M_MODEL.createClass( "http://schema.org/AcceptAction" );
    
    /** <p>An accommodation is a place that can accommodate human beings, e.g. a hotel 
     *  room, a camping pitch, or a meeting room. Many accommodations are for overnight 
     *  stays, but this is not a mandatory requirement. For more specific types of 
     *  accommodations not defined in schema.org, one can use [[additionalType]] with 
     *  external vocabularies. &lt;br /&gt;&lt;br /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated 
     *  document on the use of schema.org for marking up hotels and other forms of 
     *  accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass Accommodation = M_MODEL.createClass( "http://schema.org/Accommodation" );
    
    /** <p>Accountancy business.
     *  
     *  As a [[LocalBusiness]] it can be described as a [[provider]] of one or more 
     *  [[Service]]s).</p>
     */
    public static final OntClass AccountingService = M_MODEL.createClass( "http://schema.org/AccountingService" );
    
    /** <p>The act of accomplishing something via previous efforts. It is an instantaneous 
     *  action rather than an ongoing process.</p>
     */
    public static final OntClass AchieveAction = M_MODEL.createClass( "http://schema.org/AchieveAction" );
    
    /** <p>An action performed by a direct agent and indirect participants upon a direct 
     *  object. Optionally happens at a location with the help of an inanimate instrument. 
     *  The execution of the action may produce a result. Specific action sub-type 
     *  documentation specifies the exact expectation of each argument/role.
     *  
     *  See also [blog post](http://blog.schema.org/2014/04/announcing-schemaorg-actions.html) 
     *  and [Actions overview document](http://schema.org/docs/actions.html).</p>
     */
    public static final OntClass Action = M_MODEL.createClass( "http://schema.org/Action" );
    
    /** <p>A set of requirements that must be fulfilled in order to perform an Action.</p> */
    public static final OntClass ActionAccessSpecification = M_MODEL.createClass( "http://schema.org/ActionAccessSpecification" );
    
    /** <p>The status of an Action.</p> */
    public static final OntClass ActionStatusType = M_MODEL.createClass( "http://schema.org/ActionStatusType" );
    
    /** <p>The act of starting or activating a device or application (e.g. starting a 
     *  timer or turning on a flashlight).</p>
     */
    public static final OntClass ActivateAction = M_MODEL.createClass( "http://schema.org/ActivateAction" );
    
    /** <p>The act of editing by adding an object to a collection.</p> */
    public static final OntClass AddAction = M_MODEL.createClass( "http://schema.org/AddAction" );
    
    /** <p>A geographical region, typically under the jurisdiction of a particular government.</p> */
    public static final OntClass AdministrativeArea = M_MODEL.createClass( "http://schema.org/AdministrativeArea" );
    
    /** <p>An adult entertainment establishment.</p> */
    public static final OntClass AdultEntertainment = M_MODEL.createClass( "http://schema.org/AdultEntertainment" );
    
    /** <p>Enumeration of considerations that make a product relevant or potentially 
     *  restricted for adults only.</p>
     */
    public static final OntClass AdultOrientedEnumeration = M_MODEL.createClass( "http://schema.org/AdultOrientedEnumeration" );
    
    /** <p>An [[Article]] that an external entity has paid to place or to produce to 
     *  its specifications. Includes [advertorials](https://en.wikipedia.org/wiki/Advertorial), 
     *  sponsored content, native advertising and other paid content.</p>
     */
    public static final OntClass AdvertiserContentArticle = M_MODEL.createClass( "http://schema.org/AdvertiserContentArticle" );
    
    /** <p>When a single product is associated with multiple offers (for example, the 
     *  same pair of shoes is offered by different merchants), then AggregateOffer 
     *  can be used.
     *  
     *  Note: AggregateOffers are normally expected to associate multiple offers that 
     *  all share the same defined [[businessFunction]] value, or default to http://purl.org/goodrelations/v1#Sell 
     *  if businessFunction is not explicitly defined.</p>
     */
    public static final OntClass AggregateOffer = M_MODEL.createClass( "http://schema.org/AggregateOffer" );
    
    /** <p>The average rating based on multiple ratings or reviews.</p> */
    public static final OntClass AggregateRating = M_MODEL.createClass( "http://schema.org/AggregateRating" );
    
    /** <p>The act of expressing a consistency of opinion with the object. An agent agrees 
     *  to/about an object (a proposition, topic or theme) with participants.</p>
     */
    public static final OntClass AgreeAction = M_MODEL.createClass( "http://schema.org/AgreeAction" );
    
    /** <p>An organization that provides flights for passengers.</p> */
    public static final OntClass Airline = M_MODEL.createClass( "http://schema.org/Airline" );
    
    /** <p>An airport.</p> */
    public static final OntClass Airport = M_MODEL.createClass( "http://schema.org/Airport" );
    
    /** <p>An intangible item that describes an alignment between a learning resource 
     *  and a node in an educational framework. Should not be used where the nature 
     *  of the alignment can be described using a simple property, for example to 
     *  express that a resource [[teaches]] or [[assesses]] a competency.</p>
     */
    public static final OntClass AlignmentObject = M_MODEL.createClass( "http://schema.org/AlignmentObject" );
    
    /** <p>The act of organizing tasks/objects/events by associating resources to it.</p> */
    public static final OntClass AllocateAction = M_MODEL.createClass( "http://schema.org/AllocateAction" );
    
    /** <p>A creative work with a visual storytelling format intended to be viewed online, 
     *  particularly on mobile devices.</p>
     */
    public static final OntClass AmpStory = M_MODEL.createClass( "http://schema.org/AmpStory" );
    
    /** <p>An amusement park.</p> */
    public static final OntClass AmusementPark = M_MODEL.createClass( "http://schema.org/AmusementPark" );
    
    /** <p>An AnalysisNewsArticle is a [[NewsArticle]] that, while based on factual reporting, 
     *  incorporates the expertise of the author/producer, offering interpretations 
     *  and conclusions.</p>
     */
    public static final OntClass AnalysisNewsArticle = M_MODEL.createClass( "http://schema.org/AnalysisNewsArticle" );
    
    /** <p>Any part of the human body, typically a component of an anatomical system. 
     *  Organs, tissues, and cells are all anatomical structures.</p>
     */
    public static final OntClass AnatomicalStructure = M_MODEL.createClass( "http://schema.org/AnatomicalStructure" );
    
    /** <p>An anatomical system is a group of anatomical structures that work together 
     *  to perform a certain task. Anatomical systems, such as organ systems, are 
     *  one organizing principle of anatomy, and can include circulatory, digestive, 
     *  endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, 
     *  respiratory, skeletal, urinary, vestibular, and other systems.</p>
     */
    public static final OntClass AnatomicalSystem = M_MODEL.createClass( "http://schema.org/AnatomicalSystem" );
    
    /** <p>Animal shelter.</p> */
    public static final OntClass AnimalShelter = M_MODEL.createClass( "http://schema.org/AnimalShelter" );
    
    /** <p>An answer offered to a question; perhaps correct, perhaps opinionated or wrong.</p> */
    public static final OntClass Answer = M_MODEL.createClass( "http://schema.org/Answer" );
    
    /** <p>An apartment (in American English) or flat (in British English) is a self-contained 
     *  housing unit (a type of residential real estate) that occupies only part of 
     *  a building (source: Wikipedia, the free encyclopedia, see &lt;a href="http://en.wikipedia.org/wiki/Apartment"&gt;http://en.wikipedia.org/wiki/Apartment&lt;/a&gt;).</p>
     */
    public static final OntClass Apartment = M_MODEL.createClass( "http://schema.org/Apartment" );
    
    /** <p>Residence type: Apartment complex.</p> */
    public static final OntClass ApartmentComplex = M_MODEL.createClass( "http://schema.org/ApartmentComplex" );
    
    /** <p>The act of inserting at the end if an ordered collection.</p> */
    public static final OntClass AppendAction = M_MODEL.createClass( "http://schema.org/AppendAction" );
    
    /** <p>The act of registering to an organization/service without the guarantee to 
     *  receive it.
     *  
     *  Related actions:
     *  
     *  * [[RegisterAction]]: Unlike RegisterAction, ApplyAction has no guarantees 
     *  that the application will be accepted.</p>
     */
    public static final OntClass ApplyAction = M_MODEL.createClass( "http://schema.org/ApplyAction" );
    
    /** <p>An indication for a medical therapy that has been formally specified or approved 
     *  by a regulatory body that regulates use of the therapy; for example, the US 
     *  FDA approves indications for most drugs in the US.</p>
     */
    public static final OntClass ApprovedIndication = M_MODEL.createClass( "http://schema.org/ApprovedIndication" );
    
    /** <p>Aquarium.</p> */
    public static final OntClass Aquarium = M_MODEL.createClass( "http://schema.org/Aquarium" );
    
    /** <p>An intangible type to be applied to any archive content, carrying with it 
     *  a set of properties required to describe archival items and collections.</p>
     */
    public static final OntClass ArchiveComponent = M_MODEL.createClass( "http://schema.org/ArchiveComponent" );
    
    /** <p>An organization with archival holdings. An organization which keeps and preserves 
     *  archival material and typically makes it accessible to the public.</p>
     */
    public static final OntClass ArchiveOrganization = M_MODEL.createClass( "http://schema.org/ArchiveOrganization" );
    
    /** <p>The act of arriving at a place. An agent arrives at a destination from a fromLocation, 
     *  optionally with participants.</p>
     */
    public static final OntClass ArriveAction = M_MODEL.createClass( "http://schema.org/ArriveAction" );
    
    /** <p>An art gallery.</p> */
    public static final OntClass ArtGallery = M_MODEL.createClass( "http://schema.org/ArtGallery" );
    
    /** <p>A type of blood vessel that specifically carries blood away from the heart.</p> */
    public static final OntClass Artery = M_MODEL.createClass( "http://schema.org/Artery" );
    
    /** <p>An article, such as a news article or piece of investigative report. Newspapers 
     *  and magazines have articles of many different types and this is intended to 
     *  cover them all.
     *  
     *  See also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).</p>
     */
    public static final OntClass Article = M_MODEL.createClass( "http://schema.org/Article" );
    
    /** <p>The act of posing a question / favor to someone.
     *  
     *  Related actions:
     *  
     *  * [[ReplyAction]]: Appears generally as a response to AskAction.</p>
     */
    public static final OntClass AskAction = M_MODEL.createClass( "http://schema.org/AskAction" );
    
    /** <p>A [[NewsArticle]] expressing an open call by a [[NewsMediaOrganization]] asking 
     *  the public for input, insights, clarifications, anecdotes, documentation, 
     *  etc., on an issue, for reporting purposes.</p>
     */
    public static final OntClass AskPublicNewsArticle = M_MODEL.createClass( "http://schema.org/AskPublicNewsArticle" );
    
    /** <p>The act of forming one's opinion, reaction or sentiment.</p> */
    public static final OntClass AssessAction = M_MODEL.createClass( "http://schema.org/AssessAction" );
    
    /** <p>The act of allocating an action/event/task to some destination (someone or 
     *  something).</p>
     */
    public static final OntClass AssignAction = M_MODEL.createClass( "http://schema.org/AssignAction" );
    
    /** <p>A collection or bound volume of maps, charts, plates or tables, physical or 
     *  in media form illustrating any subject.</p>
     */
    public static final OntClass Atlas = M_MODEL.createClass( "http://schema.org/Atlas" );
    
    /** <p>Professional service: Attorney. 
     *  
     *  This type is deprecated - [[LegalService]] is more inclusive and less ambiguous.</p>
     */
    public static final OntClass Attorney = M_MODEL.createClass( "http://schema.org/Attorney" );
    
    /** <p>Intended audience for an item, i.e. the group for whom the item was created.</p> */
    public static final OntClass Audience = M_MODEL.createClass( "http://schema.org/Audience" );
    
    /** <p>An audio file.</p> */
    public static final OntClass AudioObject = M_MODEL.createClass( "http://schema.org/AudioObject" );
    
    /** <p>A specific and exact (byte-for-byte) version of an [[AudioObject]]. Two byte-for-byte 
     *  identical files, for the purposes of this type, considered identical. If they 
     *  have different embedded metadata the files will differ. Different external 
     *  facts about the files, e.g. creator or dateCreated that aren't represented 
     *  in their actual content, do not affect this notion of identity.</p>
     */
    public static final OntClass AudioObjectSnapshot = M_MODEL.createClass( "http://schema.org/AudioObjectSnapshot" );
    
    /** <p>An audiobook.</p> */
    public static final OntClass Audiobook = M_MODEL.createClass( "http://schema.org/Audiobook" );
    
    /** <p>The act of granting permission to an object.</p> */
    public static final OntClass AuthorizeAction = M_MODEL.createClass( "http://schema.org/AuthorizeAction" );
    
    /** <p>Auto body shop.</p> */
    public static final OntClass AutoBodyShop = M_MODEL.createClass( "http://schema.org/AutoBodyShop" );
    
    /** <p>An car dealership.</p> */
    public static final OntClass AutoDealer = M_MODEL.createClass( "http://schema.org/AutoDealer" );
    
    /** <p>An auto parts store.</p> */
    public static final OntClass AutoPartsStore = M_MODEL.createClass( "http://schema.org/AutoPartsStore" );
    
    /** <p>A car rental business.</p> */
    public static final OntClass AutoRental = M_MODEL.createClass( "http://schema.org/AutoRental" );
    
    /** <p>Car repair business.</p> */
    public static final OntClass AutoRepair = M_MODEL.createClass( "http://schema.org/AutoRepair" );
    
    /** <p>A car wash business.</p> */
    public static final OntClass AutoWash = M_MODEL.createClass( "http://schema.org/AutoWash" );
    
    /** <p>ATM/cash machine.</p> */
    public static final OntClass AutomatedTeller = M_MODEL.createClass( "http://schema.org/AutomatedTeller" );
    
    /** <p>Car repair, sales, or parts.</p> */
    public static final OntClass AutomotiveBusiness = M_MODEL.createClass( "http://schema.org/AutomotiveBusiness" );
    
    /** <p>A [[NewsArticle]] providing historical context, definition and detail on a 
     *  specific topic (aka "explainer" or "backgrounder"). For example, an in-depth 
     *  article or frequently-asked-questions ([FAQ](https://en.wikipedia.org/wiki/FAQ)) 
     *  document on topics such as Climate Change or the European Union. Other kinds 
     *  of background material from a non-news setting are often described using [[Book]] 
     *  or [[Article]], in particular [[ScholarlyArticle]]. See also [[NewsArticle]] 
     *  for related vocabulary from a learning/education perspective.</p>
     */
    public static final OntClass BackgroundNewsArticle = M_MODEL.createClass( "http://schema.org/BackgroundNewsArticle" );
    
    /** <p>A bakery.</p> */
    public static final OntClass Bakery = M_MODEL.createClass( "http://schema.org/Bakery" );
    
    /** <p>A product or service offered by a bank whereby one may deposit, withdraw or 
     *  transfer money and in some cases be paid interest.</p>
     */
    public static final OntClass BankAccount = M_MODEL.createClass( "http://schema.org/BankAccount" );
    
    /** <p>Bank or credit union.</p> */
    public static final OntClass BankOrCreditUnion = M_MODEL.createClass( "http://schema.org/BankOrCreditUnion" );
    
    /** <p>A bar or pub.</p> */
    public static final OntClass BarOrPub = M_MODEL.createClass( "http://schema.org/BarOrPub" );
    
    /** <p>An image of a visual machine-readable code such as a barcode or QR code.</p> */
    public static final OntClass Barcode = M_MODEL.createClass( "http://schema.org/Barcode" );
    
    /** <p>Beach.</p> */
    public static final OntClass Beach = M_MODEL.createClass( "http://schema.org/Beach" );
    
    /** <p>Beauty salon.</p> */
    public static final OntClass BeautySalon = M_MODEL.createClass( "http://schema.org/BeautySalon" );
    
    /** <p>Bed and breakfast. &lt;br /&gt;&lt;br /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated 
     *  document on the use of schema.org for marking up hotels and other forms of 
     *  accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass BedAndBreakfast = M_MODEL.createClass( "http://schema.org/BedAndBreakfast" );
    
    /** <p>An entity holding detailed information about the available bed types, e.g. 
     *  the quantity of twin beds for a hotel room. For the single case of just one 
     *  bed of a certain type, you can use bed directly with a text. See also [[BedType]] 
     *  (under development).</p>
     */
    public static final OntClass BedDetails = M_MODEL.createClass( "http://schema.org/BedDetails" );
    
    /** <p>A type of bed. This is used for indicating the bed or beds available in an 
     *  accommodation.</p>
     */
    public static final OntClass BedType = M_MODEL.createClass( "http://schema.org/BedType" );
    
    /** <p>The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.
     *  
     *  Related actions:
     *  
     *  * [[FollowAction]]: Unlike FollowAction, BefriendAction implies that the connection 
     *  is reciprocal.</p>
     */
    public static final OntClass BefriendAction = M_MODEL.createClass( "http://schema.org/BefriendAction" );
    
    /** <p>A bike store.</p> */
    public static final OntClass BikeStore = M_MODEL.createClass( "http://schema.org/BikeStore" );
    
    /** <p>Any biological, chemical, or biochemical thing. For example: a protein; a 
     *  gene; a chemical; a synthetic chemical.</p>
     */
    public static final OntClass BioChemEntity = M_MODEL.createClass( "http://schema.org/BioChemEntity" );
    
    /** <p>A [blog](https://en.wikipedia.org/wiki/Blog), sometimes known as a "weblog". 
     *  Note that the individual posts ([[BlogPosting]]s) in a [[Blog]] are often 
     *  colloquially referred to by the same term.</p>
     */
    public static final OntClass Blog = M_MODEL.createClass( "http://schema.org/Blog" );
    
    /** <p>A blog post.</p> */
    public static final OntClass BlogPosting = M_MODEL.createClass( "http://schema.org/BlogPosting" );
    
    /** <p>A medical test performed on a sample of a patient's blood.</p> */
    public static final OntClass BloodTest = M_MODEL.createClass( "http://schema.org/BloodTest" );
    
    /** <p>A type of boarding policy used by an airline.</p> */
    public static final OntClass BoardingPolicyType = M_MODEL.createClass( "http://schema.org/BoardingPolicyType" );
    
    /** <p>A reservation for boat travel. Note: This type is for information about actual 
     *  reservations, e.g. in confirmation emails or HTML pages with individual confirmations 
     *  of reservations. For offers of tickets, use [[Offer]].</p>
     */
    public static final OntClass BoatReservation = M_MODEL.createClass( "http://schema.org/BoatReservation" );
    
    /** <p>A terminal for boats, ships, and other water vessels.</p> */
    public static final OntClass BoatTerminal = M_MODEL.createClass( "http://schema.org/BoatTerminal" );
    
    /** <p>A trip on a commercial ferry line.</p> */
    public static final OntClass BoatTrip = M_MODEL.createClass( "http://schema.org/BoatTrip" );
    
    /** <p>Enumerates types (or dimensions) of a person's body measurements, for example 
     *  for fitting of clothes.</p>
     */
    public static final OntClass BodyMeasurementTypeEnumeration = M_MODEL.createClass( "http://schema.org/BodyMeasurementTypeEnumeration" );
    
    /** <p>A body of water, such as a sea, ocean, or lake.</p> */
    public static final OntClass BodyOfWater = M_MODEL.createClass( "http://schema.org/BodyOfWater" );
    
    /** <p>Rigid connective tissue that comprises up the skeletal structure of the human 
     *  body.</p>
     */
    public static final OntClass Bone = M_MODEL.createClass( "http://schema.org/Bone" );
    
    /** <p>A book.</p> */
    public static final OntClass Book = M_MODEL.createClass( "http://schema.org/Book" );
    
    /** <p>The publication format of the book.</p> */
    public static final OntClass BookFormatType = M_MODEL.createClass( "http://schema.org/BookFormatType" );
    
    /** <p>A series of books. Included books can be indicated with the hasPart property.</p> */
    public static final OntClass BookSeries = M_MODEL.createClass( "http://schema.org/BookSeries" );
    
    /** <p>A bookstore.</p> */
    public static final OntClass BookStore = M_MODEL.createClass( "http://schema.org/BookStore" );
    
    /** <p>An agent bookmarks/flags/labels/tags/marks an object.</p> */
    public static final OntClass BookmarkAction = M_MODEL.createClass( "http://schema.org/BookmarkAction" );
    
    /** <p>Boolean: True or False.</p> */
    public static final OntClass Boolean = M_MODEL.createClass( "http://schema.org/Boolean" );
    
    /** <p>The act of obtaining an object under an agreement to return it at a later 
     *  date. Reciprocal of LendAction.
     *  
     *  Related actions:
     *  
     *  * [[LendAction]]: Reciprocal of BorrowAction.</p>
     */
    public static final OntClass BorrowAction = M_MODEL.createClass( "http://schema.org/BorrowAction" );
    
    /** <p>A bowling alley.</p> */
    public static final OntClass BowlingAlley = M_MODEL.createClass( "http://schema.org/BowlingAlley" );
    
    /** <p>Any anatomical structure which pertains to the soft nervous tissue functioning 
     *  as the coordinating center of sensation and intellectual and nervous activity.</p>
     */
    public static final OntClass BrainStructure = M_MODEL.createClass( "http://schema.org/BrainStructure" );
    
    /** <p>A brand is a name used by an organization or business person for labeling 
     *  a product, product group, or similar.</p>
     */
    public static final OntClass Brand = M_MODEL.createClass( "http://schema.org/Brand" );
    
    /** <p>A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, 
     *  typically described using at least their URL and their name, and typically 
     *  ending with the current page.
     *  
     *  The [[position]] property is used to reconstruct the order of the items in 
     *  a BreadcrumbList. The convention is that a breadcrumb list has an [[itemListOrder]] 
     *  of [[ItemListOrderAscending]] (lower values listed first), and that the first 
     *  items in this list correspond to the "top" or beginning of the breadcrumb 
     *  trail, e.g. with a site or section homepage. The specific values of 'position' 
     *  are not assigned meaning for a BreadcrumbList, but they should be integers, 
     *  e.g. beginning with '1' for the first item in the list.</p>
     */
    public static final OntClass BreadcrumbList = M_MODEL.createClass( "http://schema.org/BreadcrumbList" );
    
    /** <p>Brewery.</p> */
    public static final OntClass Brewery = M_MODEL.createClass( "http://schema.org/Brewery" );
    
    /** <p>A bridge.</p> */
    public static final OntClass Bridge = M_MODEL.createClass( "http://schema.org/Bridge" );
    
    /** <p>A unique instance of a BroadcastService on a CableOrSatelliteService lineup.</p> */
    public static final OntClass BroadcastChannel = M_MODEL.createClass( "http://schema.org/BroadcastChannel" );
    
    /** <p>An over the air or online broadcast event.</p> */
    public static final OntClass BroadcastEvent = M_MODEL.createClass( "http://schema.org/BroadcastEvent" );
    
    /** <p>The frequency in MHz and the modulation used for a particular BroadcastService.</p> */
    public static final OntClass BroadcastFrequencySpecification = M_MODEL.createClass( "http://schema.org/BroadcastFrequencySpecification" );
    
    /** <p>A delivery service through which content is provided via broadcast over the 
     *  air or online.</p>
     */
    public static final OntClass BroadcastService = M_MODEL.createClass( "http://schema.org/BroadcastService" );
    
    /** <p>An account that allows an investor to deposit funds and place investment orders 
     *  with a licensed broker or brokerage firm.</p>
     */
    public static final OntClass BrokerageAccount = M_MODEL.createClass( "http://schema.org/BrokerageAccount" );
    
    /** <p>A Buddhist temple.</p> */
    public static final OntClass BuddhistTemple = M_MODEL.createClass( "http://schema.org/BuddhistTemple" );
    
    /** <p>A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. 
     *  Coaches are luxury buses, usually in service for long distance travel.</p>
     */
    public static final OntClass BusOrCoach = M_MODEL.createClass( "http://schema.org/BusOrCoach" );
    
    /** <p>A reservation for bus travel. 
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations. For offers 
     *  of tickets, use [[Offer]].</p>
     */
    public static final OntClass BusReservation = M_MODEL.createClass( "http://schema.org/BusReservation" );
    
    /** <p>A bus station.</p> */
    public static final OntClass BusStation = M_MODEL.createClass( "http://schema.org/BusStation" );
    
    /** <p>A bus stop.</p> */
    public static final OntClass BusStop = M_MODEL.createClass( "http://schema.org/BusStop" );
    
    /** <p>A trip on a commercial bus line.</p> */
    public static final OntClass BusTrip = M_MODEL.createClass( "http://schema.org/BusTrip" );
    
    /** <p>A set of characteristics belonging to businesses, e.g. who compose an item's 
     *  target audience.</p>
     */
    public static final OntClass BusinessAudience = M_MODEL.createClass( "http://schema.org/BusinessAudience" );
    
    /** <p>A business entity type is a conceptual entity representing the legal form, 
     *  the size, the main line of business, the position in the value chain, or any 
     *  combination thereof, of an organization or business person.
     *  
     *  Commonly used values:
     *  
     *  * http://purl.org/goodrelations/v1#Business
     *  * http://purl.org/goodrelations/v1#Enduser
     *  * http://purl.org/goodrelations/v1#PublicInstitution
     *  * http://purl.org/goodrelations/v1#Reseller</p>
     */
    public static final OntClass BusinessEntityType = M_MODEL.createClass( "http://schema.org/BusinessEntityType" );
    
    /** <p>Event type: Business event.</p> */
    public static final OntClass BusinessEvent = M_MODEL.createClass( "http://schema.org/BusinessEvent" );
    
    /** <p>The business function specifies the type of activity or access (i.e., the 
     *  bundle of rights) offered by the organization or business person through the 
     *  offer. Typical are sell, rental or lease, maintenance or repair, manufacture 
     *  / produce, recycle / dispose, engineering / construction, or installation. 
     *  Proprietary specifications of access rights are also instances of this class.
     *  
     *  Commonly used values:
     *  
     *  * http://purl.org/goodrelations/v1#ConstructionInstallation
     *  * http://purl.org/goodrelations/v1#Dispose
     *  * http://purl.org/goodrelations/v1#LeaseOut
     *  * http://purl.org/goodrelations/v1#Maintain
     *  * http://purl.org/goodrelations/v1#ProvideService
     *  * http://purl.org/goodrelations/v1#Repair
     *  * http://purl.org/goodrelations/v1#Sell
     *  * http://purl.org/goodrelations/v1#Buy</p>
     */
    public static final OntClass BusinessFunction = M_MODEL.createClass( "http://schema.org/BusinessFunction" );
    
    /** <p>The act of giving money to a seller in exchange for goods or services rendered. 
     *  An agent buys an object, product, or service from a seller for a price. Reciprocal 
     *  of SellAction.</p>
     */
    public static final OntClass BuyAction = M_MODEL.createClass( "http://schema.org/BuyAction" );
    
    /** <p>A CDCPMDRecord is a data structure representing a record in a CDC tabular 
     *  data format used for hospital data reporting. See [documentation](/docs/cdc-covid.html) 
     *  for details, and the linked CDC materials for authoritative definitions used 
     *  as the source here.</p>
     */
    public static final OntClass CDCPMDRecord = M_MODEL.createClass( "http://schema.org/CDCPMDRecord" );
    
    /** <p>A service which provides access to media programming like TV or radio. Access 
     *  may be via cable or satellite.</p>
     */
    public static final OntClass CableOrSatelliteService = M_MODEL.createClass( "http://schema.org/CableOrSatelliteService" );
    
    /** <p>A cafe or coffee shop.</p> */
    public static final OntClass CafeOrCoffeeShop = M_MODEL.createClass( "http://schema.org/CafeOrCoffeeShop" );
    
    /** <p>A camping site, campsite, or [[Campground]] is a place used for overnight 
     *  stay in the outdoors, typically containing individual [[CampingPitch]] locations. 
     *  
     *  
     *   In British English a campsite is an area, usually divided into a number of 
     *  pitches, where people can camp overnight using tents or camper vans or caravans; 
     *  this British English use of the word is synonymous with the American English 
     *  expression campground. In American English the term campsite generally means 
     *  an area where an individual, family, group, or military unit can pitch a tent 
     *  or park a camper; a campground may contain many campsites (source: Wikipedia, 
     *  see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite)).
     *  
     *   See also the dedicated [document on the use of schema.org for marking up 
     *  hotels and other forms of accommodations](/docs/hotels.html).</p>
     */
    public static final OntClass Campground = M_MODEL.createClass( "http://schema.org/Campground" );
    
    /** <p>A [[CampingPitch]] is an individual place for overnight stay in the outdoors, 
     *  typically being part of a larger camping site, or [[Campground]].
     *  
     *   In British English a campsite, or campground, is an area, usually divided 
     *  into a number of pitches, where people can camp overnight using tents or camper 
     *  vans or caravans; this British English use of the word is synonymous with 
     *  the American English expression campground. In American English the term campsite 
     *  generally means an area where an individual, family, group, or military unit 
     *  can pitch a tent or park a camper; a campground may contain many campsites. 
     *  (Source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite).)
     *  
     *   See also the dedicated [document on the use of schema.org for marking up 
     *  hotels and other forms of accommodations](/docs/hotels.html).</p>
     */
    public static final OntClass CampingPitch = M_MODEL.createClass( "http://schema.org/CampingPitch" );
    
    /** <p>A canal, like the Panama Canal.</p> */
    public static final OntClass Canal = M_MODEL.createClass( "http://schema.org/Canal" );
    
    /** <p>The act of asserting that a future event/action is no longer going to happen.
     *  
     *  Related actions:
     *  
     *  * [[ConfirmAction]]: The antonym of CancelAction.</p>
     */
    public static final OntClass CancelAction = M_MODEL.createClass( "http://schema.org/CancelAction" );
    
    /** <p>A car is a wheeled, self-powered motor vehicle used for transportation.</p> */
    public static final OntClass Car = M_MODEL.createClass( "http://schema.org/Car" );
    
    /** <p>A value indicating a special usage of a car, e.g. commercial rental, driving 
     *  school, or as a taxi.</p>
     */
    public static final OntClass CarUsageType = M_MODEL.createClass( "http://schema.org/CarUsageType" );
    
    /** <p>A casino.</p> */
    public static final OntClass Casino = M_MODEL.createClass( "http://schema.org/Casino" );
    
    /** <p>A Category Code.</p> */
    public static final OntClass CategoryCode = M_MODEL.createClass( "http://schema.org/CategoryCode" );
    
    /** <p>A set of Category Code values.</p> */
    public static final OntClass CategoryCodeSet = M_MODEL.createClass( "http://schema.org/CategoryCodeSet" );
    
    /** <p>A Catholic church.</p> */
    public static final OntClass CatholicChurch = M_MODEL.createClass( "http://schema.org/CatholicChurch" );
    
    /** <p>A graveyard.</p> */
    public static final OntClass Cemetery = M_MODEL.createClass( "http://schema.org/Cemetery" );
    
    /** <p>A Certification is an official and authoritative statement about a subject, 
     *  for example a product, service, person, or organization. A certification is 
     *  typically issued by an indendent certification body, for example a professional 
     *  organization or government. It formally attests certain characteristics about 
     *  the subject, for example Organizations can be ISO certified, Food products 
     *  can be certified Organic or Vegan, a Person can be a certified professional, 
     *  a Place can be certified for food processing. There are certifications for 
     *  many domains: regulatory, organizational, recycling, food, efficiency, educational, 
     *  ecological, etc. A certification is a form of credential, as are accreditations 
     *  and licenses. Mapped from the [gs1:CertificationDetails](https://www.gs1.org/voc/CertificationDetails) 
     *  class in the GS1 Web Vocabulary.</p>
     */
    public static final OntClass Certification = M_MODEL.createClass( "http://schema.org/Certification" );
    
    /** <p>Enumerates the different statuses of a Certification (Active and Inactive).</p> */
    public static final OntClass CertificationStatusEnumeration = M_MODEL.createClass( "http://schema.org/CertificationStatusEnumeration" );
    
    /** <p>One of the sections into which a book is divided. A chapter usually has a 
     *  section number or a name.</p>
     */
    public static final OntClass Chapter = M_MODEL.createClass( "http://schema.org/Chapter" );
    
    /** <p>An agent inspects, determines, investigates, inquires, or examines an object's 
     *  accuracy, quality, condition, or state.</p>
     */
    public static final OntClass CheckAction = M_MODEL.createClass( "http://schema.org/CheckAction" );
    
    /** <p>The act of an agent communicating (service provider, social media, etc) their 
     *  arrival by registering/confirming for a previously reserved service (e.g. 
     *  flight check-in) or at a place (e.g. hotel), possibly resulting in a result 
     *  (boarding pass, etc).
     *  
     *  Related actions:
     *  
     *  * [[CheckOutAction]]: The antonym of CheckInAction.
     *  * [[ArriveAction]]: Unlike ArriveAction, CheckInAction implies that the agent 
     *  is informing/confirming the start of a previously reserved service.
     *  * [[ConfirmAction]]: Unlike ConfirmAction, CheckInAction implies that the 
     *  agent is informing/confirming the *start* of a previously reserved service 
     *  rather than its validity/existence.</p>
     */
    public static final OntClass CheckInAction = M_MODEL.createClass( "http://schema.org/CheckInAction" );
    
    /** <p>The act of an agent communicating (service provider, social media, etc) their 
     *  departure of a previously reserved service (e.g. flight check-in) or place 
     *  (e.g. hotel).
     *  
     *  Related actions:
     *  
     *  * [[CheckInAction]]: The antonym of CheckOutAction.
     *  * [[DepartAction]]: Unlike DepartAction, CheckOutAction implies that the agent 
     *  is informing/confirming the end of a previously reserved service.
     *  * [[CancelAction]]: Unlike CancelAction, CheckOutAction implies that the agent 
     *  is informing/confirming the end of a previously reserved service.</p>
     */
    public static final OntClass CheckOutAction = M_MODEL.createClass( "http://schema.org/CheckOutAction" );
    
    /** <p>Web page type: Checkout page.</p> */
    public static final OntClass CheckoutPage = M_MODEL.createClass( "http://schema.org/CheckoutPage" );
    
    /** <p>A chemical substance is 'a portion of matter of constant composition, composed 
     *  of molecular entities of the same type or of different types' (source: [ChEBI:59999](https://www.ebi.ac.uk/chebi/searchId.do?chebiId=59999)).</p>
     */
    public static final OntClass ChemicalSubstance = M_MODEL.createClass( "http://schema.org/ChemicalSubstance" );
    
    /** <p>A Childcare center.</p> */
    public static final OntClass ChildCare = M_MODEL.createClass( "http://schema.org/ChildCare" );
    
    /** <p>Event type: Children's event.</p> */
    public static final OntClass ChildrensEvent = M_MODEL.createClass( "http://schema.org/ChildrensEvent" );
    
    /** <p>The act of expressing a preference from a set of options or a large or unbounded 
     *  set of choices/options.</p>
     */
    public static final OntClass ChooseAction = M_MODEL.createClass( "http://schema.org/ChooseAction" );
    
    /** <p>A church.</p> */
    public static final OntClass Church = M_MODEL.createClass( "http://schema.org/Church" );
    
    /** <p>A city or town.</p> */
    public static final OntClass City = M_MODEL.createClass( "http://schema.org/City" );
    
    /** <p>A city hall.</p> */
    public static final OntClass CityHall = M_MODEL.createClass( "http://schema.org/CityHall" );
    
    /** <p>A public structure, such as a town hall or concert hall.</p> */
    public static final OntClass CivicStructure = M_MODEL.createClass( "http://schema.org/CivicStructure" );
    
    /** <p>A [[Claim]] in Schema.org represents a specific, factually-oriented claim 
     *  that could be the [[itemReviewed]] in a [[ClaimReview]]. The content of a 
     *  claim can be summarized with the [[text]] property. Variations on well known 
     *  claims can have their common identity indicated via [[sameAs]] links, and 
     *  summarized with a [[name]]. Ideally, a [[Claim]] description includes enough 
     *  contextual information to minimize the risk of ambiguity or inclarity. In 
     *  practice, many claims are better understood in the context in which they appear 
     *  or the interpretations provided by claim reviews. Beyond [[ClaimReview]], 
     *  the Claim type can be associated with related creative works - for example 
     *  a [[ScholarlyArticle]] or [[Question]] might be [[about]] some [[Claim]]. 
     *  At this time, Schema.org does not define any types of relationship between 
     *  claims. This is a natural area for future exploration.</p>
     */
    public static final OntClass Claim = M_MODEL.createClass( "http://schema.org/Claim" );
    
    /** <p>A fact-checking review of claims made (or reported) in some creative work 
     *  (referenced via itemReviewed).</p>
     */
    public static final OntClass ClaimReview = M_MODEL.createClass( "http://schema.org/ClaimReview" );
    
    /** <p>A class, also often called a 'Type'; equivalent to rdfs:Class.</p> */
    public static final OntClass Class = M_MODEL.createClass( "http://schema.org/Class" );
    
    /** <p>A short TV or radio program or a segment/part of a program.</p> */
    public static final OntClass Clip = M_MODEL.createClass( "http://schema.org/Clip" );
    
    /** <p>A clothing store.</p> */
    public static final OntClass ClothingStore = M_MODEL.createClass( "http://schema.org/ClothingStore" );
    
    /** <p>Computer programming source code. Example: Full (compile ready) solutions, 
     *  code snippet samples, scripts, templates.</p>
     */
    public static final OntClass Code = M_MODEL.createClass( "http://schema.org/Code" );
    
    /** <p>A collection of items, e.g. creative works or products.</p> */
    public static final OntClass Collection = M_MODEL.createClass( "http://schema.org/Collection" );
    
    /** <p>Web page type: Collection page.</p> */
    public static final OntClass CollectionPage = M_MODEL.createClass( "http://schema.org/CollectionPage" );
    
    /** <p>A college, university, or other third-level educational institution.</p> */
    public static final OntClass CollegeOrUniversity = M_MODEL.createClass( "http://schema.org/CollegeOrUniversity" );
    
    /** <p>A comedy club.</p> */
    public static final OntClass ComedyClub = M_MODEL.createClass( "http://schema.org/ComedyClub" );
    
    /** <p>Event type: Comedy event.</p> */
    public static final OntClass ComedyEvent = M_MODEL.createClass( "http://schema.org/ComedyEvent" );
    
    /** <p>The artwork on the cover of a comic.</p> */
    public static final OntClass ComicCoverArt = M_MODEL.createClass( "http://schema.org/ComicCoverArt" );
    
    /** <p>Individual comic issues are serially published as part of a larger series. 
     *  For the sake of consistency, even one-shot issues belong to a series comprised 
     *  of a single issue. All comic issues can be uniquely identified by: the combination 
     *  of the name and volume number of the series to which the issue belongs; the 
     *  issue number; and the variant description of the issue (if any).</p>
     */
    public static final OntClass ComicIssue = M_MODEL.createClass( "http://schema.org/ComicIssue" );
    
    /** <p>A sequential publication of comic stories under a unifying title, for example 
     *  "The Amazing Spider-Man" or "Groo the Wanderer".</p>
     */
    public static final OntClass ComicSeries = M_MODEL.createClass( "http://schema.org/ComicSeries" );
    
    /** <p>The term "story" is any indivisible, re-printable unit of a comic, including 
     *  the interior stories, covers, and backmatter. Most comics have at least two 
     *  stories: a cover (ComicCoverArt) and an interior story.</p>
     */
    public static final OntClass ComicStory = M_MODEL.createClass( "http://schema.org/ComicStory" );
    
    /** <p>A comment on an item - for example, a comment on a blog post. The comment's 
     *  content is expressed via the [[text]] property, and its topic via [[about]], 
     *  properties shared with all CreativeWorks.</p>
     */
    public static final OntClass Comment = M_MODEL.createClass( "http://schema.org/Comment" );
    
    /** <p>The act of generating a comment about a subject.</p> */
    public static final OntClass CommentAction = M_MODEL.createClass( "http://schema.org/CommentAction" );
    
    /** <p>The act of conveying information to another person via a communication medium 
     *  (instrument) such as speech, email, or telephone conversation.</p>
     */
    public static final OntClass CommunicateAction = M_MODEL.createClass( "http://schema.org/CommunicateAction" );
    
    /** <p>A [[CompleteDataFeed]] is a [[DataFeed]] whose standard representation includes 
     *  content for every item currently in the feed. This is the equivalent of Atom's 
     *  element as defined in Feed Paging and Archiving [RFC 5005](https://tools.ietf.org/html/rfc5005), 
     *  for example (and as defined for Atom), when using data from a feed that represents 
     *  a collection of items that varies over time (e.g. "Top Twenty Records") there 
     *  is no need to have newer entries mixed in alongside older, obsolete entries. 
     *  By marking this feed as a CompleteDataFeed, old entries can be safely discarded 
     *  when the feed is refreshed, since we can assume the feed has provided descriptions 
     *  for all current items.</p>
     */
    public static final OntClass CompleteDataFeed = M_MODEL.createClass( "http://schema.org/CompleteDataFeed" );
    
    /** <p>A compound price specification is one that bundles multiple prices that all 
     *  apply in combination for different dimensions of consumption. Use the name 
     *  property of the attached unit price specification for indicating the dimension 
     *  of a price component (e.g. "electricity" or "final cleaning").</p>
     */
    public static final OntClass CompoundPriceSpecification = M_MODEL.createClass( "http://schema.org/CompoundPriceSpecification" );
    
    /** <p>This type covers computer programming languages such as Scheme and Lisp, as 
     *  well as other language-like computer representations. Natural languages are 
     *  best represented with the [[Language]] type.</p>
     */
    public static final OntClass ComputerLanguage = M_MODEL.createClass( "http://schema.org/ComputerLanguage" );
    
    /** <p>A computer store.</p> */
    public static final OntClass ComputerStore = M_MODEL.createClass( "http://schema.org/ComputerStore" );
    
    /** <p>The act of notifying someone that a future event/action is going to happen 
     *  as expected.
     *  
     *  Related actions:
     *  
     *  * [[CancelAction]]: The antonym of ConfirmAction.</p>
     */
    public static final OntClass ConfirmAction = M_MODEL.createClass( "http://schema.org/ConfirmAction" );
    
    /** <p>A Consortium is a membership [[Organization]] whose members are typically 
     *  Organizations.</p>
     */
    public static final OntClass Consortium = M_MODEL.createClass( "http://schema.org/Consortium" );
    
    /** <p>The ConstraintNode type is provided to support usecases in which a node in 
     *  a structured data graph is described with properties which appear to describe 
     *  a single entity, but are being used in a situation where they serve a more 
     *  abstract purpose. A [[ConstraintNode]] can be described using [[constraintProperty]] 
     *  and [[numConstraints]]. These constraint properties can serve a variety of 
     *  purposes, and their values may sometimes be understood to indicate sets of 
     *  possible values rather than single, exact and specific values.</p>
     */
    public static final OntClass ConstraintNode = M_MODEL.createClass( "http://schema.org/ConstraintNode" );
    
    /** <p>The act of ingesting information/resources/food.</p> */
    public static final OntClass ConsumeAction = M_MODEL.createClass( "http://schema.org/ConsumeAction" );
    
    /** <p>Web page type: Contact page.</p> */
    public static final OntClass ContactPage = M_MODEL.createClass( "http://schema.org/ContactPage" );
    
    /** <p>A contact point&amp;#x2014;for example, a Customer Complaints department.</p> */
    public static final OntClass ContactPoint = M_MODEL.createClass( "http://schema.org/ContactPoint" );
    
    /** <p>Enumerated options related to a ContactPoint.</p> */
    public static final OntClass ContactPointOption = M_MODEL.createClass( "http://schema.org/ContactPointOption" );
    
    /** <p>One of the continents (for example, Europe or Africa).</p> */
    public static final OntClass Continent = M_MODEL.createClass( "http://schema.org/Continent" );
    
    /** <p>An agent controls a device or application.</p> */
    public static final OntClass ControlAction = M_MODEL.createClass( "http://schema.org/ControlAction" );
    
    /** <p>A convenience store.</p> */
    public static final OntClass ConvenienceStore = M_MODEL.createClass( "http://schema.org/ConvenienceStore" );
    
    /** <p>One or more messages between organizations or people on a particular topic. 
     *  Individual messages can be linked to the conversation with isPartOf or hasPart 
     *  properties.</p>
     */
    public static final OntClass Conversation = M_MODEL.createClass( "http://schema.org/Conversation" );
    
    /** <p>The act of producing/preparing food.</p> */
    public static final OntClass CookAction = M_MODEL.createClass( "http://schema.org/CookAction" );
    
    /** <p>Organization: A business corporation.</p> */
    public static final OntClass Corporation = M_MODEL.createClass( "http://schema.org/Corporation" );
    
    /** <p>A [[comment]] that corrects [[CreativeWork]].</p> */
    public static final OntClass CorrectionComment = M_MODEL.createClass( "http://schema.org/CorrectionComment" );
    
    /** <p>A country.</p> */
    public static final OntClass Country = M_MODEL.createClass( "http://schema.org/Country" );
    
    /** <p>A description of an educational course which may be offered as distinct instances 
     *  which take place at different times or take place at different locations, 
     *  or be offered through different media or modes of study. An educational course 
     *  is a sequence of one or more educational events and/or creative works which 
     *  aims to build knowledge, competence or ability of learners.</p>
     */
    public static final OntClass Course = M_MODEL.createClass( "http://schema.org/Course" );
    
    /** <p>An instance of a [[Course]] which is distinct from other instances because 
     *  it is offered at a different time or location or through different media or 
     *  modes of study or to a specific section of students.</p>
     */
    public static final OntClass CourseInstance = M_MODEL.createClass( "http://schema.org/CourseInstance" );
    
    /** <p>A courthouse.</p> */
    public static final OntClass Courthouse = M_MODEL.createClass( "http://schema.org/Courthouse" );
    
    /** <p>The artwork on the outer surface of a CreativeWork.</p> */
    public static final OntClass CoverArt = M_MODEL.createClass( "http://schema.org/CoverArt" );
    
    /** <p>A CovidTestingFacility is a [[MedicalClinic]] where testing for the COVID-19 
     *  Coronavirus disease is available. If the facility is being made available 
     *  from an established [[Pharmacy]], [[Hotel]], or other non-medical organization, 
     *  multiple types can be listed. This makes it easier to re-use existing schema.org 
     *  information about that place, e.g. contact info, address, opening hours. Note 
     *  that in an emergency, such information may not always be reliable.</p>
     */
    public static final OntClass CovidTestingFacility = M_MODEL.createClass( "http://schema.org/CovidTestingFacility" );
    
    /** <p>The act of deliberately creating/producing/generating/building a result out 
     *  of the agent.</p>
     */
    public static final OntClass CreateAction = M_MODEL.createClass( "http://schema.org/CreateAction" );
    
    /** <p>The most generic kind of creative work, including books, movies, photographs, 
     *  software programs, etc.</p>
     */
    public static final OntClass CreativeWork = M_MODEL.createClass( "http://schema.org/CreativeWork" );
    
    /** <p>A media season, e.g. TV, radio, video game etc.</p> */
    public static final OntClass CreativeWorkSeason = M_MODEL.createClass( "http://schema.org/CreativeWorkSeason" );
    
    /** <p>A CreativeWorkSeries in schema.org is a group of related items, typically 
     *  but not necessarily of the same kind. CreativeWorkSeries are usually organized 
     *  into some order, often chronological. Unlike [[ItemList]] which is a general 
     *  purpose data structure for lists of things, the emphasis with CreativeWorkSeries 
     *  is on published materials (written e.g. books and periodicals, or media such 
     *  as TV, radio and games).
     *  
     *  Specific subtypes are available for describing [[TVSeries]], [[RadioSeries]], 
     *  [[MovieSeries]], [[BookSeries]], [[Periodical]] and [[VideoGameSeries]]. In 
     *  each case, the [[hasPart]] / [[isPartOf]] properties can be used to relate 
     *  the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves 
     *  largely just to organize these more specific and practical subtypes.
     *  
     *  It is common for properties applicable to an item from the series to be usefully 
     *  applied to the containing group. Schema.org attempts to anticipate some of 
     *  these cases, but publishers should be free to apply properties of the series 
     *  parts to the series as a whole wherever they seem appropriate.</p>
     */
    public static final OntClass CreativeWorkSeries = M_MODEL.createClass( "http://schema.org/CreativeWorkSeries" );
    
    /** <p>A card payment method of a particular brand or name. Used to mark up a particular 
     *  payment method and/or the financial product/service that supplies the card 
     *  account.
     *  
     *  Commonly used values:
     *  
     *  * http://purl.org/goodrelations/v1#AmericanExpress
     *  * http://purl.org/goodrelations/v1#DinersClub
     *  * http://purl.org/goodrelations/v1#Discover
     *  * http://purl.org/goodrelations/v1#JCB
     *  * http://purl.org/goodrelations/v1#MasterCard
     *  * http://purl.org/goodrelations/v1#VISA</p>
     */
    public static final OntClass CreditCard = M_MODEL.createClass( "http://schema.org/CreditCard" );
    
    /** <p>A crematorium.</p> */
    public static final OntClass Crematorium = M_MODEL.createClass( "http://schema.org/Crematorium" );
    
    /** <p>A [[CriticReview]] is a more specialized form of Review written or published 
     *  by a source that is recognized for its reviewing activities. These can include 
     *  online columns, travel and food guides, TV and radio shows, blogs and other 
     *  independent Web sites. [[CriticReview]]s are typically more in-depth and professionally 
     *  written. For simpler, casually written user/visitor/viewer/customer reviews, 
     *  it is more appropriate to use the [[UserReview]] type. Review aggregator sites 
     *  such as Metacritic already separate out the site's user reviews from selected 
     *  critic reviews that originate from third-party sources.</p>
     */
    public static final OntClass CriticReview = M_MODEL.createClass( "http://schema.org/CriticReview" );
    
    /** <p>Text representing a CSS selector.</p> */
    public static final OntClass CssSelectorType = M_MODEL.createClass( "http://schema.org/CssSelectorType" );
    
    /** <p>A service to convert funds from one currency to another currency.</p> */
    public static final OntClass CurrencyConversionService = M_MODEL.createClass( "http://schema.org/CurrencyConversionService" );
    
    /** <p>An alternative, closely-related condition typically considered later in the 
     *  differential diagnosis process along with the signs that are used to distinguish 
     *  it.</p>
     */
    public static final OntClass DDxElement = M_MODEL.createClass( "http://schema.org/DDxElement" );
    
    /** <p>Event type: A social dance.</p> */
    public static final OntClass DanceEvent = M_MODEL.createClass( "http://schema.org/DanceEvent" );
    
    /** <p>A dance group&amp;#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.</p> */
    public static final OntClass DanceGroup = M_MODEL.createClass( "http://schema.org/DanceGroup" );
    
    /** <p>A collection of datasets.</p> */
    public static final OntClass DataCatalog = M_MODEL.createClass( "http://schema.org/DataCatalog" );
    
    /** <p>All or part of a [[Dataset]] in downloadable form.</p> */
    public static final OntClass DataDownload = M_MODEL.createClass( "http://schema.org/DataDownload" );
    
    /** <p>A single feed providing structured information about one or more entities 
     *  or topics.</p>
     */
    public static final OntClass DataFeed = M_MODEL.createClass( "http://schema.org/DataFeed" );
    
    /** <p>A single item within a larger data feed.</p> */
    public static final OntClass DataFeedItem = M_MODEL.createClass( "http://schema.org/DataFeedItem" );
    
    /** <p>The basic data types such as Integers, Strings, etc.</p> */
    public static final OntClass DataType = M_MODEL.createClass( "http://schema.org/DataType" );
    
    /** <p>A body of structured information describing some topic(s) of interest.</p> */
    public static final OntClass Dataset_CLASS1 = M_MODEL.createClass( "http://schema.org/Dataset" );
    
    /** <p>A date value in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).</p> */
    public static final OntClass Date = M_MODEL.createClass( "http://schema.org/Date" );
    
    /** <p>A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] 
     *  (see Chapter 5.4 of ISO 8601).</p>
     */
    public static final OntClass DateTime = M_MODEL.createClass( "http://schema.org/DateTime" );
    
    /** <p>A DatedMoneySpecification represents monetary values with optional start and 
     *  end dates. For example, this could represent an employee's salary over a specific 
     *  period of time. __Note:__ This type has been superseded by [[MonetaryAmount]], 
     *  use of that type is recommended.</p>
     */
    public static final OntClass DatedMoneySpecification = M_MODEL.createClass( "http://schema.org/DatedMoneySpecification" );
    
    /** <p>The day of the week, e.g. used to specify to which day the opening hours of 
     *  an OpeningHoursSpecification refer. Originally, URLs from [GoodRelations](http://purl.org/goodrelations/v1) 
     *  were used (for [[Monday]], [[Tuesday]], [[Wednesday]], [[Thursday]], [[Friday]], 
     *  [[Saturday]], [[Sunday]] plus a special entry for [[PublicHolidays]]); these 
     *  have now been integrated directly into schema.org.</p>
     */
    public static final OntClass DayOfWeek = M_MODEL.createClass( "http://schema.org/DayOfWeek" );
    
    /** <p>A day spa.</p> */
    public static final OntClass DaySpa = M_MODEL.createClass( "http://schema.org/DaySpa" );
    
    /** <p>The act of stopping or deactivating a device or application (e.g. stopping 
     *  a timer or turning off a flashlight).</p>
     */
    public static final OntClass DeactivateAction = M_MODEL.createClass( "http://schema.org/DeactivateAction" );
    
    /** <p>A defence establishment, such as an army or navy base.</p> */
    public static final OntClass DefenceEstablishment = M_MODEL.createClass( "http://schema.org/DefenceEstablishment" );
    
    /** <p>A DefinedRegion is a geographic area defined by potentially arbitrary (rather 
     *  than political, administrative or natural geographical) criteria. Properties 
     *  are provided for defining a region by reference to sets of postal codes. Examples: 
     *  a delivery destination when shopping. Region where regional pricing is configured. 
     *  Requirement 1: Country: US States: "NY", "CA" Requirement 2: Country: US PostalCode 
     *  Set: { [94000-94585], [97000, 97999], [13000, 13599]} { [12345, 12345], [78945, 
     *  78945], } Region = state, canton, prefecture, autonomous community...</p>
     */
    public static final OntClass DefinedRegion = M_MODEL.createClass( "http://schema.org/DefinedRegion" );
    
    /** <p>A word, name, acronym, phrase, etc. with a formal definition. Often used in 
     *  the context of category or subject classification, glossaries or dictionaries, 
     *  product or creative work types, etc. Use the name property for the term being 
     *  defined, use termCode if the term has an alpha-numeric code allocated, use 
     *  description to provide the definition of the term.</p>
     */
    public static final OntClass DefinedTerm = M_MODEL.createClass( "http://schema.org/DefinedTerm" );
    
    /** <p>A set of defined terms, for example a set of categories or a classification 
     *  scheme, a glossary, dictionary or enumeration.</p>
     */
    public static final OntClass DefinedTermSet = M_MODEL.createClass( "http://schema.org/DefinedTermSet" );
    
    /** <p>The act of editing a recipient by removing one of its objects.</p> */
    public static final OntClass DeleteAction = M_MODEL.createClass( "http://schema.org/DeleteAction" );
    
    /** <p>The price for the delivery of an offer using a particular delivery method.</p> */
    public static final OntClass DeliveryChargeSpecification = M_MODEL.createClass( "http://schema.org/DeliveryChargeSpecification" );
    
    /** <p>An event involving the delivery of an item.</p> */
    public static final OntClass DeliveryEvent = M_MODEL.createClass( "http://schema.org/DeliveryEvent" );
    
    /** <p>A delivery method is a standardized procedure for transferring the product 
     *  or service to the destination of fulfillment chosen by the customer. Delivery 
     *  methods are characterized by the means of transportation used, and by the 
     *  organization or group that is the contracting party for the sending organization 
     *  or person.
     *  
     *  Commonly used values:
     *  
     *  * http://purl.org/goodrelations/v1#DeliveryModeDirectDownload
     *  * http://purl.org/goodrelations/v1#DeliveryModeFreight
     *  * http://purl.org/goodrelations/v1#DeliveryModeMail
     *  * http://purl.org/goodrelations/v1#DeliveryModeOwnFleet
     *  * http://purl.org/goodrelations/v1#DeliveryModePickUp
     *  * http://purl.org/goodrelations/v1#DHL
     *  * http://purl.org/goodrelations/v1#FederalExpress
     *  * http://purl.org/goodrelations/v1#UPS</p>
     */
    public static final OntClass DeliveryMethod = M_MODEL.createClass( "http://schema.org/DeliveryMethod" );
    
    /** <p>A demand entity represents the public, not necessarily binding, not necessarily 
     *  exclusive, announcement by an organization or person to seek a certain type 
     *  of goods or services. For describing demand using this type, the very same 
     *  properties used for Offer apply.</p>
     */
    public static final OntClass Demand = M_MODEL.createClass( "http://schema.org/Demand" );
    
    /** <p>A dentist.</p> */
    public static final OntClass Dentist = M_MODEL.createClass( "http://schema.org/Dentist" );
    
    /** <p>The act of departing from a place. An agent departs from a fromLocation for 
     *  a destination, optionally with participants.</p>
     */
    public static final OntClass DepartAction = M_MODEL.createClass( "http://schema.org/DepartAction" );
    
    /** <p>A department store.</p> */
    public static final OntClass DepartmentStore = M_MODEL.createClass( "http://schema.org/DepartmentStore" );
    
    /** <p>A type of Bank Account with a main purpose of depositing funds to gain interest 
     *  or other benefits.</p>
     */
    public static final OntClass DepositAccount = M_MODEL.createClass( "http://schema.org/DepositAccount" );
    
    /** <p>A medical laboratory that offers on-site or off-site diagnostic services.</p> */
    public static final OntClass DiagnosticLab = M_MODEL.createClass( "http://schema.org/DiagnosticLab" );
    
    /** <p>A medical procedure intended primarily for diagnostic, as opposed to therapeutic, 
     *  purposes.</p>
     */
    public static final OntClass DiagnosticProcedure = M_MODEL.createClass( "http://schema.org/DiagnosticProcedure" );
    
    /** <p>A strategy of regulating the intake of food to achieve or maintain a specific 
     *  health-related goal.</p>
     */
    public static final OntClass Diet = M_MODEL.createClass( "http://schema.org/Diet" );
    
    /** <p>A product taken by mouth that contains a dietary ingredient intended to supplement 
     *  the diet. Dietary ingredients may include vitamins, minerals, herbs or other 
     *  botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars 
     *  and metabolites.</p>
     */
    public static final OntClass DietarySupplement = M_MODEL.createClass( "http://schema.org/DietarySupplement" );
    
    /** <p>An electronic file or document.</p> */
    public static final OntClass DigitalDocument = M_MODEL.createClass( "http://schema.org/DigitalDocument" );
    
    /** <p>A permission for a particular person or group to access a particular file.</p> */
    public static final OntClass DigitalDocumentPermission = M_MODEL.createClass( "http://schema.org/DigitalDocumentPermission" );
    
    /** <p>A type of permission which can be granted for accessing a digital document.</p> */
    public static final OntClass DigitalDocumentPermissionType = M_MODEL.createClass( "http://schema.org/DigitalDocumentPermissionType" );
    
    /** <p>Enumerates some common technology platforms, for use with properties such 
     *  as [[actionPlatform]]. It is not supposed to be comprehensive - when a suitable 
     *  code is not enumerated here, textual or URL values can be used instead. These 
     *  codes are at a fairly high level and do not deal with versioning and other 
     *  nuance. Additional codes can be suggested [in github](https://github.com/schemaorg/schemaorg/issues/3057).</p>
     */
    public static final OntClass DigitalPlatformEnumeration = M_MODEL.createClass( "http://schema.org/DigitalPlatformEnumeration" );
    
    /** <p>The act of expressing a difference of opinion with the object. An agent disagrees 
     *  to/about an object (a proposition, topic or theme) with participants.</p>
     */
    public static final OntClass DisagreeAction = M_MODEL.createClass( "http://schema.org/DisagreeAction" );
    
    /** <p>The act of discovering/finding an object.</p> */
    public static final OntClass DiscoverAction = M_MODEL.createClass( "http://schema.org/DiscoverAction" );
    
    /** <p>A posting to a discussion forum.</p> */
    public static final OntClass DiscussionForumPosting = M_MODEL.createClass( "http://schema.org/DiscussionForumPosting" );
    
    /** <p>The act of expressing a negative sentiment about the object. An agent dislikes 
     *  an object (a proposition, topic or theme) with participants.</p>
     */
    public static final OntClass DislikeAction = M_MODEL.createClass( "http://schema.org/DislikeAction" );
    
    /** <p>Properties that take Distances as values are of the form '&amp;lt;Number&amp;gt; 
     *  &amp;lt;Length unit of measure&amp;gt;'. E.g., '7 ft'.</p>
     */
    public static final OntClass Distance = M_MODEL.createClass( "http://schema.org/Distance" );
    
    /** <p>A distillery.</p> */
    public static final OntClass Distillery = M_MODEL.createClass( "http://schema.org/Distillery" );
    
    /** <p>The act of providing goods, services, or money without compensation, often 
     *  for philanthropic reasons.</p>
     */
    public static final OntClass DonateAction = M_MODEL.createClass( "http://schema.org/DonateAction" );
    
    /** <p>A specific dosing schedule for a drug or supplement.</p> */
    public static final OntClass DoseSchedule = M_MODEL.createClass( "http://schema.org/DoseSchedule" );
    
    /** <p>The act of downloading an object.</p> */
    public static final OntClass DownloadAction = M_MODEL.createClass( "http://schema.org/DownloadAction" );
    
    /** <p>The act of producing a visual/graphical representation of an object, typically 
     *  with a pen/pencil and paper as instruments.</p>
     */
    public static final OntClass DrawAction = M_MODEL.createClass( "http://schema.org/DrawAction" );
    
    /** <p>A picture or diagram made with a pencil, pen, or crayon rather than paint.</p> */
    public static final OntClass Drawing = M_MODEL.createClass( "http://schema.org/Drawing" );
    
    /** <p>The act of swallowing liquids.</p> */
    public static final OntClass DrinkAction = M_MODEL.createClass( "http://schema.org/DrinkAction" );
    
    /** <p>A value indicating which roadwheels will receive torque.</p> */
    public static final OntClass DriveWheelConfigurationValue = M_MODEL.createClass( "http://schema.org/DriveWheelConfigurationValue" );
    
    /** <p>A chemical or biologic substance, used as a medical therapy, that has a physiological 
     *  effect on an organism. Here the term drug is used interchangeably with the 
     *  term medicine although clinical knowledge makes a clear difference between 
     *  them.</p>
     */
    public static final OntClass Drug = M_MODEL.createClass( "http://schema.org/Drug" );
    
    /** <p>A class of medical drugs, e.g., statins. Classes can represent general pharmacological 
     *  class, common mechanisms of action, common physiological effects, etc.</p>
     */
    public static final OntClass DrugClass = M_MODEL.createClass( "http://schema.org/DrugClass" );
    
    /** <p>The cost per unit of a medical drug. Note that this type is not meant to represent 
     *  the price in an offer of a drug for sale; see the Offer type for that. This 
     *  type will typically be used to tag wholesale or average retail cost of a drug, 
     *  or maximum reimbursable cost. Costs of medical drugs vary widely depending 
     *  on how and where they are paid for, so while this type captures some of the 
     *  variables, costs should be used with caution by consumers of this schema's 
     *  markup.</p>
     */
    public static final OntClass DrugCost = M_MODEL.createClass( "http://schema.org/DrugCost" );
    
    /** <p>Enumerated categories of medical drug costs.</p> */
    public static final OntClass DrugCostCategory = M_MODEL.createClass( "http://schema.org/DrugCostCategory" );
    
    /** <p>The legal availability status of a medical drug.</p> */
    public static final OntClass DrugLegalStatus = M_MODEL.createClass( "http://schema.org/DrugLegalStatus" );
    
    /** <p>Categories that represent an assessment of the risk of fetal injury due to 
     *  a drug or pharmaceutical used as directed by the mother during pregnancy.</p>
     */
    public static final OntClass DrugPregnancyCategory = M_MODEL.createClass( "http://schema.org/DrugPregnancyCategory" );
    
    /** <p>Indicates whether this drug is available by prescription or over-the-counter.</p> */
    public static final OntClass DrugPrescriptionStatus = M_MODEL.createClass( "http://schema.org/DrugPrescriptionStatus" );
    
    /** <p>A specific strength in which a medical drug is available in a specific country.</p> */
    public static final OntClass DrugStrength = M_MODEL.createClass( "http://schema.org/DrugStrength" );
    
    /** <p>A dry-cleaning business.</p> */
    public static final OntClass DryCleaningOrLaundry = M_MODEL.createClass( "http://schema.org/DryCleaningOrLaundry" );
    
    /** <p>Quantity: Duration (use [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601)).</p> */
    public static final OntClass Duration = M_MODEL.createClass( "http://schema.org/Duration" );
    
    /** <p>Enumerates the EU energy efficiency classes A-G as well as A+, A++, and A+++ 
     *  as defined in EU directive 2017/1369.</p>
     */
    public static final OntClass EUEnergyEfficiencyEnumeration = M_MODEL.createClass( "http://schema.org/EUEnergyEfficiencyEnumeration" );
    
    /** <p>The act of swallowing solid objects.</p> */
    public static final OntClass EatAction = M_MODEL.createClass( "http://schema.org/EatAction" );
    
    /** <p>Event type: Education event.</p> */
    public static final OntClass EducationEvent = M_MODEL.createClass( "http://schema.org/EducationEvent" );
    
    /** <p>An EducationalAudience.</p> */
    public static final OntClass EducationalAudience = M_MODEL.createClass( "http://schema.org/EducationalAudience" );
    
    /** <p>An educational or occupational credential. A diploma, academic degree, certification, 
     *  qualification, badge, etc., that may be awarded to a person or other entity 
     *  that meets the requirements defined by the credentialer.</p>
     */
    public static final OntClass EducationalOccupationalCredential = M_MODEL.createClass( "http://schema.org/EducationalOccupationalCredential" );
    
    /** <p>A program offered by an institution which determines the learning progress 
     *  to achieve an outcome, usually a credential like a degree or certificate. 
     *  This would define a discrete set of opportunities (e.g., job, courses) that 
     *  together constitute a program with a clear start, end, set of requirements, 
     *  and transition to a new occupational opportunity (e.g., a job), or sometimes 
     *  a higher educational opportunity (e.g., an advanced degree).</p>
     */
    public static final OntClass EducationalOccupationalProgram = M_MODEL.createClass( "http://schema.org/EducationalOccupationalProgram" );
    
    /** <p>An educational organization.</p> */
    public static final OntClass EducationalOrganization = M_MODEL.createClass( "http://schema.org/EducationalOrganization" );
    
    /** <p>An electrician.</p> */
    public static final OntClass Electrician = M_MODEL.createClass( "http://schema.org/Electrician" );
    
    /** <p>An electronics store.</p> */
    public static final OntClass ElectronicsStore = M_MODEL.createClass( "http://schema.org/ElectronicsStore" );
    
    /** <p>An elementary school.</p> */
    public static final OntClass ElementarySchool = M_MODEL.createClass( "http://schema.org/ElementarySchool" );
    
    /** <p>An email message.</p> */
    public static final OntClass EmailMessage = M_MODEL.createClass( "http://schema.org/EmailMessage" );
    
    /** <p>An embassy.</p> */
    public static final OntClass Embassy = M_MODEL.createClass( "http://schema.org/Embassy" );
    
    /** <p>An emergency service, such as a fire station or ER.</p> */
    public static final OntClass EmergencyService = M_MODEL.createClass( "http://schema.org/EmergencyService" );
    
    /** <p>A subclass of OrganizationRole used to describe employee relationships.</p> */
    public static final OntClass EmployeeRole = M_MODEL.createClass( "http://schema.org/EmployeeRole" );
    
    /** <p>An aggregate rating of an Organization related to its role as an employer.</p> */
    public static final OntClass EmployerAggregateRating = M_MODEL.createClass( "http://schema.org/EmployerAggregateRating" );
    
    /** <p>An [[EmployerReview]] is a review of an [[Organization]] regarding its role 
     *  as an employer, written by a current or former employee of that organization.</p>
     */
    public static final OntClass EmployerReview = M_MODEL.createClass( "http://schema.org/EmployerReview" );
    
    /** <p>An employment agency.</p> */
    public static final OntClass EmploymentAgency = M_MODEL.createClass( "http://schema.org/EmploymentAgency" );
    
    /** <p>An agent approves/certifies/likes/supports/sanctions an object.</p> */
    public static final OntClass EndorseAction = M_MODEL.createClass( "http://schema.org/EndorseAction" );
    
    /** <p>An EndorsementRating is a rating that expresses some level of endorsement, 
     *  for example inclusion in a "critic's pick" blog, a "Like" or "+1" on a social 
     *  network. It can be considered the [[result]] of an [[EndorseAction]] in which 
     *  the [[object]] of the action is rated positively by some [[agent]]. As is 
     *  common elsewhere in schema.org, it is sometimes more useful to describe the 
     *  results of such an action without explicitly describing the [[Action]]. An 
     *  [[EndorsementRating]] may be part of a numeric scale or organized system, 
     *  but this is not required: having an explicit type for indicating a positive, 
     *  endorsement rating is particularly useful in the absence of numeric scales 
     *  as it helps consumers understand that the rating is broadly positive.</p>
     */
    public static final OntClass EndorsementRating = M_MODEL.createClass( "http://schema.org/EndorsementRating" );
    
    /** <p>Properties that take Energy as values are of the form '&amp;lt;Number&amp;gt; 
     *  &amp;lt;Energy unit of measure&amp;gt;'.</p>
     */
    public static final OntClass Energy = M_MODEL.createClass( "http://schema.org/Energy" );
    
    /** <p>EnergyConsumptionDetails represents information related to the energy efficiency 
     *  of a product that consumes energy. The information that can be provided is 
     *  based on international regulations such as for example [EU directive 2017/1369](https://eur-lex.europa.eu/eli/reg/2017/1369/oj) 
     *  for energy labeling and the [Energy labeling rule](https://www.ftc.gov/enforcement/rules/rulemaking-regulatory-reform-proceedings/energy-water-use-labeling-consumer) 
     *  under the Energy Policy and Conservation Act (EPCA) in the US.</p>
     */
    public static final OntClass EnergyConsumptionDetails = M_MODEL.createClass( "http://schema.org/EnergyConsumptionDetails" );
    
    /** <p>Enumerates energy efficiency levels (also known as "classes" or "ratings") 
     *  and certifications that are part of several international energy efficiency 
     *  standards.</p>
     */
    public static final OntClass EnergyEfficiencyEnumeration = M_MODEL.createClass( "http://schema.org/EnergyEfficiencyEnumeration" );
    
    /** <p>Used to indicate whether a product is EnergyStar certified.</p> */
    public static final OntClass EnergyStarEnergyEfficiencyEnumeration = M_MODEL.createClass( "http://schema.org/EnergyStarEnergyEfficiencyEnumeration" );
    
    /** <p>Information about the engine of the vehicle. A vehicle can have multiple engines 
     *  represented by multiple engine specification entities.</p>
     */
    public static final OntClass EngineSpecification = M_MODEL.createClass( "http://schema.org/EngineSpecification" );
    
    /** <p>A business providing entertainment.</p> */
    public static final OntClass EntertainmentBusiness = M_MODEL.createClass( "http://schema.org/EntertainmentBusiness" );
    
    /** <p>An entry point, within some Web-based protocol.</p> */
    public static final OntClass EntryPoint = M_MODEL.createClass( "http://schema.org/EntryPoint" );
    
    /** <p>Lists or enumerations—for example, a list of cuisines or music genres, etc.</p> */
    public static final OntClass Enumeration = M_MODEL.createClass( "http://schema.org/Enumeration" );
    
    /** <p>A media episode (e.g. TV, radio, video game) which can be part of a series 
     *  or season.</p>
     */
    public static final OntClass Episode = M_MODEL.createClass( "http://schema.org/Episode" );
    
    /** <p>An event happening at a certain time and location, such as a concert, lecture, 
     *  or festival. Ticketing information may be added via the [[offers]] property. 
     *  Repeated events may be structured as separate Event objects.</p>
     */
    public static final OntClass Event_CLASS = M_MODEL.createClass( "http://schema.org/Event" );
    
    /** <p>An EventAttendanceModeEnumeration value is one of potentially several modes 
     *  of organising an event, relating to whether it is online or offline.</p>
     */
    public static final OntClass EventAttendanceModeEnumeration = M_MODEL.createClass( "http://schema.org/EventAttendanceModeEnumeration" );
    
    /** <p>A reservation for an event like a concert, sporting event, or lecture.
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations. For offers 
     *  of tickets, use [[Offer]].</p>
     */
    public static final OntClass EventReservation = M_MODEL.createClass( "http://schema.org/EventReservation" );
    
    /** <p>A series of [[Event]]s. Included events can relate with the series using the 
     *  [[superEvent]] property. An EventSeries is a collection of events that share 
     *  some unifying characteristic. For example, "The Olympic Games" is a series, 
     *  which is repeated regularly. The "2012 London Olympics" can be presented both 
     *  as an [[Event]] in the series "Olympic Games", and as an [[EventSeries]] that 
     *  included a number of sporting competitions as Events. The nature of the association 
     *  between the events in an [[EventSeries]] can vary, but typical examples could 
     *  include a thematic event series (e.g. topical meetups or classes), or a series 
     *  of regular events that share a location, attendee group and/or organizers. 
     *  EventSeries has been defined as a kind of Event to make it easy for publishers 
     *  to use it in an Event context without worrying about which kinds of series 
     *  are really event-like enough to call an Event. In general an EventSeries may 
     *  seem more Event-like when the period of time is compact and when aspects such 
     *  as location are fixed, but it may also sometimes prove useful to describe 
     *  a longer-term series as an Event.</p>
     */
    public static final OntClass EventSeries = M_MODEL.createClass( "http://schema.org/EventSeries" );
    
    /** <p>EventStatusType is an enumeration type whose instances represent several states 
     *  that an Event may be in.</p>
     */
    public static final OntClass EventStatusType = M_MODEL.createClass( "http://schema.org/EventStatusType" );
    
    /** <p>An event venue.</p> */
    public static final OntClass EventVenue = M_MODEL.createClass( "http://schema.org/EventVenue" );
    
    /** <p>A structured value representing exchange rate.</p> */
    public static final OntClass ExchangeRateSpecification = M_MODEL.createClass( "http://schema.org/ExchangeRateSpecification" );
    
    /** <p>The act of participating in exertive activity for the purposes of improving 
     *  health and fitness.</p>
     */
    public static final OntClass ExerciseAction = M_MODEL.createClass( "http://schema.org/ExerciseAction" );
    
    /** <p>A gym.</p> */
    public static final OntClass ExerciseGym = M_MODEL.createClass( "http://schema.org/ExerciseGym" );
    
    /** <p>Fitness-related activity designed for a specific health-related purpose, including 
     *  defined exercise routines as well as activity prescribed by a clinician.</p>
     */
    public static final OntClass ExercisePlan = M_MODEL.createClass( "http://schema.org/ExercisePlan" );
    
    /** <p>Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, 
     *  ...</p>
     */
    public static final OntClass ExhibitionEvent = M_MODEL.createClass( "http://schema.org/ExhibitionEvent" );
    
    /** <p>A [[FAQPage]] is a [[WebPage]] presenting one or more "[Frequently asked questions](https://en.wikipedia.org/wiki/FAQ)" 
     *  (see also [[QAPage]]).</p>
     */
    public static final OntClass FAQPage = M_MODEL.createClass( "http://schema.org/FAQPage" );
    
    /** <p>A radio channel that uses FM.</p> */
    public static final OntClass FMRadioChannel = M_MODEL.createClass( "http://schema.org/FMRadioChannel" );
    
    /** <p>A fast-food restaurant.</p> */
    public static final OntClass FastFoodRestaurant = M_MODEL.createClass( "http://schema.org/FastFoodRestaurant" );
    
    /** <p>Event type: Festival.</p> */
    public static final OntClass Festival = M_MODEL.createClass( "http://schema.org/Festival" );
    
    /** <p>The act of capturing sound and moving images on film, video, or digitally.</p> */
    public static final OntClass FilmAction = M_MODEL.createClass( "http://schema.org/FilmAction" );
    
    /** <p>&lt;p&gt;Represents financial incentives for goods/services offered by an 
     *  organization (or individual).&lt;/p&gt; &lt;p&gt;Typically contains the [[name]] 
     *  of the incentive, the [[incentivizedItem]], the [[incentiveAmount]], the [[incentiveStatus]], 
     *  [[incentiveType]], the [[provider]] of the incentive, and [[eligibleWithSupplier]].&lt;/p&gt; 
     *  &lt;p&gt;Optionally contains criteria on whether the incentive is limited 
     *  based on [[purchaseType]], [[purchasePriceLimit]], [[incomeLimit]], and the 
     *  [[qualifiedExpense]].</p>
     */
    public static final OntClass FinancialIncentive = M_MODEL.createClass( "http://schema.org/FinancialIncentive" );
    
    /** <p>A product provided to consumers and businesses by financial institutions such 
     *  as banks, insurance companies, brokerage firms, consumer finance companies, 
     *  and investment companies which comprise the financial services industry.</p>
     */
    public static final OntClass FinancialProduct = M_MODEL.createClass( "http://schema.org/FinancialProduct" );
    
    /** <p>Financial services business.</p> */
    public static final OntClass FinancialService = M_MODEL.createClass( "http://schema.org/FinancialService" );
    
    /** <p>The act of finding an object.
     *  
     *  Related actions:
     *  
     *  * [[SearchAction]]: FindAction is generally lead by a SearchAction, but not 
     *  necessarily.</p>
     */
    public static final OntClass FindAction = M_MODEL.createClass( "http://schema.org/FindAction" );
    
    /** <p>A fire station. With firemen.</p> */
    public static final OntClass FireStation = M_MODEL.createClass( "http://schema.org/FireStation" );
    
    /** <p>An airline flight.</p> */
    public static final OntClass Flight = M_MODEL.createClass( "http://schema.org/Flight" );
    
    /** <p>A reservation for air travel.
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations. For offers 
     *  of tickets, use [[Offer]].</p>
     */
    public static final OntClass FlightReservation = M_MODEL.createClass( "http://schema.org/FlightReservation" );
    
    /** <p>Data type: Floating number.</p> */
    public static final OntClass Float = M_MODEL.createClass( "http://schema.org/Float" );
    
    /** <p>A FloorPlan is an explicit representation of a collection of similar accommodations, 
     *  allowing the provision of common information (room counts, sizes, layout diagrams) 
     *  and offers for rental or sale. In typical use, some [[ApartmentComplex]] has 
     *  an [[accommodationFloorPlan]] which is a [[FloorPlan]]. A FloorPlan is always 
     *  in the context of a particular place, either a larger [[ApartmentComplex]] 
     *  or a single [[Apartment]]. The visual/spatial aspects of a floor plan (i.e. 
     *  room layout, [see wikipedia](https://en.wikipedia.org/wiki/Floor_plan)) can 
     *  be indicated using [[image]].</p>
     */
    public static final OntClass FloorPlan = M_MODEL.createClass( "http://schema.org/FloorPlan" );
    
    /** <p>A florist.</p> */
    public static final OntClass Florist = M_MODEL.createClass( "http://schema.org/Florist" );
    
    /** <p>The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically 
     *  to get updates polled from.
     *  
     *  Related actions:
     *  
     *  * [[BefriendAction]]: Unlike BefriendAction, FollowAction implies that the 
     *  connection is *not* necessarily reciprocal.
     *  * [[SubscribeAction]]: Unlike SubscribeAction, FollowAction implies that the 
     *  follower acts as an active agent constantly/actively polling for updates.
     *  * [[RegisterAction]]: Unlike RegisterAction, FollowAction implies that the 
     *  agent is interested in continuing receiving updates from the object.
     *  * [[JoinAction]]: Unlike JoinAction, FollowAction implies that the agent is 
     *  interested in getting updates from the object.
     *  * [[TrackAction]]: Unlike TrackAction, FollowAction refers to the polling 
     *  of updates of all aspects of animate objects rather than the location of inanimate 
     *  objects (e.g. you track a package, but you don't follow it).</p>
     */
    public static final OntClass FollowAction = M_MODEL.createClass( "http://schema.org/FollowAction" );
    
    /** <p>A food-related business.</p> */
    public static final OntClass FoodEstablishment = M_MODEL.createClass( "http://schema.org/FoodEstablishment" );
    
    /** <p>A reservation to dine at a food-related business.
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations.</p>
     */
    public static final OntClass FoodEstablishmentReservation = M_MODEL.createClass( "http://schema.org/FoodEstablishmentReservation" );
    
    /** <p>Event type: Food event.</p> */
    public static final OntClass FoodEvent = M_MODEL.createClass( "http://schema.org/FoodEvent" );
    
    /** <p>A food service, like breakfast, lunch, or dinner.</p> */
    public static final OntClass FoodService = M_MODEL.createClass( "http://schema.org/FoodService" );
    
    /** <p>A type of product fulfillment.</p> */
    public static final OntClass FulfillmentTypeEnumeration = M_MODEL.createClass( "http://schema.org/FulfillmentTypeEnumeration" );
    
    /** <p>A FundingAgency is an organization that implements one or more [[FundingScheme]]s 
     *  and manages the granting process (via [[Grant]]s, typically [[MonetaryGrant]]s). 
     *  A funding agency is not always required for grant funding, e.g. philanthropic 
     *  giving, corporate sponsorship etc. Examples of funding agencies include ERC, 
     *  REA, NIH, Bill and Melinda Gates Foundation, ...</p>
     */
    public static final OntClass FundingAgency = M_MODEL.createClass( "http://schema.org/FundingAgency" );
    
    /** <p>A FundingScheme combines organizational, project and policy aspects of grant-based 
     *  funding that sets guidelines, principles and mechanisms to support other kinds 
     *  of projects and activities. Funding is typically organized via [[Grant]] funding. 
     *  Examples of funding schemes: Swiss Priority Programmes (SPPs); EU Framework 
     *  7 (FP7); Horizon 2020; the NIH-R01 Grant Program; Wellcome institutional strategic 
     *  support fund. For large scale public sector funding, the management and administration 
     *  of grant awards is often handled by other, dedicated, organizations - [[FundingAgency]]s 
     *  such as ERC, REA, ...</p>
     */
    public static final OntClass FundingScheme = M_MODEL.createClass( "http://schema.org/FundingScheme" );
    
    /** <p>A furniture store.</p> */
    public static final OntClass FurnitureStore = M_MODEL.createClass( "http://schema.org/FurnitureStore" );
    
    /** <p>The Game type represents things which are games. These are typically rule-governed 
     *  recreational activities, e.g. role-playing games in which players assume the 
     *  role of characters in a fictional setting.</p>
     */
    public static final OntClass Game = M_MODEL.createClass( "http://schema.org/Game" );
    
    /** <p>For a [[VideoGame]], such as used with a [[PlayGameAction]], an enumeration 
     *  of the kind of game availability offered.</p>
     */
    public static final OntClass GameAvailabilityEnumeration = M_MODEL.createClass( "http://schema.org/GameAvailabilityEnumeration" );
    
    /** <p>Indicates whether this game is multi-player, co-op or single-player.</p> */
    public static final OntClass GamePlayMode = M_MODEL.createClass( "http://schema.org/GamePlayMode" );
    
    /** <p>Server that provides game interaction in a multiplayer game.</p> */
    public static final OntClass GameServer = M_MODEL.createClass( "http://schema.org/GameServer" );
    
    /** <p>Status of a game server.</p> */
    public static final OntClass GameServerStatus = M_MODEL.createClass( "http://schema.org/GameServerStatus" );
    
    /** <p>A garden store.</p> */
    public static final OntClass GardenStore = M_MODEL.createClass( "http://schema.org/GardenStore" );
    
    /** <p>A gas station.</p> */
    public static final OntClass GasStation = M_MODEL.createClass( "http://schema.org/GasStation" );
    
    /** <p>Residence type: Gated community.</p> */
    public static final OntClass GatedResidenceCommunity = M_MODEL.createClass( "http://schema.org/GatedResidenceCommunity" );
    
    /** <p>An enumeration of genders.</p> */
    public static final OntClass GenderType = M_MODEL.createClass( "http://schema.org/GenderType" );
    
    /** <p>A discrete unit of inheritance which affects one or more biological traits 
     *  (Source: [https://en.wikipedia.org/wiki/Gene](https://en.wikipedia.org/wiki/Gene)). 
     *  Examples include FOXP2 (Forkhead box protein P2), SCARNA21 (small Cajal body-specific 
     *  RNA 21), A- (agouti genotype).</p>
     */
    public static final OntClass Gene = M_MODEL.createClass( "http://schema.org/Gene" );
    
    /** <p>A general contractor.</p> */
    public static final OntClass GeneralContractor = M_MODEL.createClass( "http://schema.org/GeneralContractor" );
    
    /** <p>A GeoCircle is a GeoShape representing a circular geographic area. As it is 
     *  a GeoShape it provides the simple textual property 'circle', but also allows 
     *  the combination of postalCode alongside geoRadius. The center of the circle 
     *  can be indicated via the 'geoMidpoint' property, or more approximately using 
     *  'address', 'postalCode'.</p>
     */
    public static final OntClass GeoCircle = M_MODEL.createClass( "http://schema.org/GeoCircle" );
    
    /** <p>The geographic coordinates of a place or event.</p> */
    public static final OntClass GeoCoordinates = M_MODEL.createClass( "http://schema.org/GeoCoordinates" );
    
    /** <p>The geographic shape of a place. A GeoShape can be described using several 
     *  properties whose values are based on latitude/longitude pairs. Either whitespace 
     *  or commas can be used to separate latitude and longitude; whitespace should 
     *  be used when writing a list of several such points.</p>
     */
    public static final OntClass GeoShape = M_MODEL.createClass( "http://schema.org/GeoShape" );
    
    /** <p>(Eventually to be defined as) a supertype of GeoShape designed to accommodate 
     *  definitions from Geo-Spatial best practices.</p>
     */
    public static final OntClass GeospatialGeometry = M_MODEL.createClass( "http://schema.org/GeospatialGeometry" );
    
    /** <p>The act of transferring ownership of an object to a destination. Reciprocal 
     *  of TakeAction.
     *  
     *  Related actions:
     *  
     *  * [[TakeAction]]: Reciprocal of GiveAction.
     *  * [[SendAction]]: Unlike SendAction, GiveAction implies that ownership is 
     *  being transferred (e.g. I may send my laptop to you, but that doesn't mean 
     *  I'm giving it to you).</p>
     */
    public static final OntClass GiveAction = M_MODEL.createClass( "http://schema.org/GiveAction" );
    
    /** <p>A golf course.</p> */
    public static final OntClass GolfCourse = M_MODEL.createClass( "http://schema.org/GolfCourse" );
    
    /** <p>GovernmentBenefitsType enumerates several kinds of government benefits to 
     *  support the COVID-19 situation. Note that this structure may not capture all 
     *  benefits offered.</p>
     */
    public static final OntClass GovernmentBenefitsType = M_MODEL.createClass( "http://schema.org/GovernmentBenefitsType" );
    
    /** <p>A government building.</p> */
    public static final OntClass GovernmentBuilding = M_MODEL.createClass( "http://schema.org/GovernmentBuilding" );
    
    /** <p>A government office&amp;#x2014;for example, an IRS or DMV office.</p> */
    public static final OntClass GovernmentOffice = M_MODEL.createClass( "http://schema.org/GovernmentOffice" );
    
    /** <p>A governmental organization or agency.</p> */
    public static final OntClass GovernmentOrganization = M_MODEL.createClass( "http://schema.org/GovernmentOrganization" );
    
    /** <p>A permit issued by a government agency.</p> */
    public static final OntClass GovernmentPermit = M_MODEL.createClass( "http://schema.org/GovernmentPermit" );
    
    /** <p>A service provided by a government organization, e.g. food stamps, veterans 
     *  benefits, etc.</p>
     */
    public static final OntClass GovernmentService = M_MODEL.createClass( "http://schema.org/GovernmentService" );
    
    /** <p>A grant, typically financial or otherwise quantifiable, of resources. Typically 
     *  a [[funder]] sponsors some [[MonetaryAmount]] to an [[Organization]] or [[Person]], 
     *  sometimes not necessarily via a dedicated or long-lived [[Project]], resulting 
     *  in one or more outputs, or [[fundedItem]]s. For financial sponsorship, indicate 
     *  the [[funder]] of a [[MonetaryGrant]]. For non-financial support, indicate 
     *  [[sponsor]] of [[Grant]]s of resources (e.g. office space). Grants support 
     *  activities directed towards some agreed collective goals, often but not always 
     *  organized as [[Project]]s. Long-lived projects are sometimes sponsored by 
     *  a variety of grants over time, but it is also common for a project to be associated 
     *  with a single grant. The amount of a [[Grant]] is represented using [[amount]] 
     *  as a [[MonetaryAmount]].</p>
     */
    public static final OntClass Grant = M_MODEL.createClass( "http://schema.org/Grant" );
    
    /** <p>A grocery store.</p> */
    public static final OntClass GroceryStore = M_MODEL.createClass( "http://schema.org/GroceryStore" );
    
    /** <p>[[Guide]] is a page or article that recommends specific products or services, 
     *  or aspects of a thing for a user to consider. A [[Guide]] may represent a 
     *  Buying Guide and detail aspects of products or services for a user to consider. 
     *  A [[Guide]] may represent a Product Guide and recommend specific products 
     *  or services. A [[Guide]] may represent a Ranked List and recommend specific 
     *  products or services with ranking.</p>
     */
    public static final OntClass Guide = M_MODEL.createClass( "http://schema.org/Guide" );
    
    /** <p>A business that provides Heating, Ventilation and Air Conditioning services.</p> */
    public static final OntClass HVACBusiness = M_MODEL.createClass( "http://schema.org/HVACBusiness" );
    
    /** <p>A [hackathon](https://en.wikipedia.org/wiki/Hackathon) event.</p> */
    public static final OntClass Hackathon = M_MODEL.createClass( "http://schema.org/Hackathon" );
    
    /** <p>A hair salon.</p> */
    public static final OntClass HairSalon = M_MODEL.createClass( "http://schema.org/HairSalon" );
    
    /** <p>A hardware store.</p> */
    public static final OntClass HardwareStore = M_MODEL.createClass( "http://schema.org/HardwareStore" );
    
    /** <p>Health and beauty.</p> */
    public static final OntClass HealthAndBeautyBusiness = M_MODEL.createClass( "http://schema.org/HealthAndBeautyBusiness" );
    
    /** <p>HealthAspectEnumeration enumerates several aspects of health content online, 
     *  each of which might be described using [[hasHealthAspect]] and [[HealthTopicContent]].</p>
     */
    public static final OntClass HealthAspectEnumeration = M_MODEL.createClass( "http://schema.org/HealthAspectEnumeration" );
    
    /** <p>A health club.</p> */
    public static final OntClass HealthClub = M_MODEL.createClass( "http://schema.org/HealthClub" );
    
    /** <p>A US-style health insurance plan, including PPOs, EPOs, and HMOs.</p> */
    public static final OntClass HealthInsurancePlan = M_MODEL.createClass( "http://schema.org/HealthInsurancePlan" );
    
    /** <p>A description of costs to the patient under a given network or formulary.</p> */
    public static final OntClass HealthPlanCostSharingSpecification = M_MODEL.createClass( "http://schema.org/HealthPlanCostSharingSpecification" );
    
    /** <p>For a given health insurance plan, the specification for costs and coverage 
     *  of prescription drugs.</p>
     */
    public static final OntClass HealthPlanFormulary = M_MODEL.createClass( "http://schema.org/HealthPlanFormulary" );
    
    /** <p>A US-style health insurance plan network.</p> */
    public static final OntClass HealthPlanNetwork = M_MODEL.createClass( "http://schema.org/HealthPlanNetwork" );
    
    /** <p>[[HealthTopicContent]] is [[WebContent]] that is about some aspect of a health 
     *  topic, e.g. a condition, its symptoms or treatments. Such content may be comprised 
     *  of several parts or sections and use different types of media. Multiple instances 
     *  of [[WebContent]] (and hence [[HealthTopicContent]]) can be related using 
     *  [[hasPart]] / [[isPartOf]] where there is some kind of content hierarchy, 
     *  and their content described with [[about]] and [[mentions]] e.g. building 
     *  upon the existing [[MedicalCondition]] vocabulary.</p>
     */
    public static final OntClass HealthTopicContent = M_MODEL.createClass( "http://schema.org/HealthTopicContent" );
    
    /** <p>A high school.</p> */
    public static final OntClass HighSchool = M_MODEL.createClass( "http://schema.org/HighSchool" );
    
    /** <p>A Hindu temple.</p> */
    public static final OntClass HinduTemple = M_MODEL.createClass( "http://schema.org/HinduTemple" );
    
    /** <p>A store that sells materials useful or necessary for various hobbies.</p> */
    public static final OntClass HobbyShop = M_MODEL.createClass( "http://schema.org/HobbyShop" );
    
    /** <p>A construction business.
     *  
     *  A HomeAndConstructionBusiness is a [[LocalBusiness]] that provides services 
     *  around homes and buildings.
     *  
     *  As a [[LocalBusiness]] it can be described as a [[provider]] of one or more 
     *  [[Service]]s).</p>
     */
    public static final OntClass HomeAndConstructionBusiness = M_MODEL.createClass( "http://schema.org/HomeAndConstructionBusiness" );
    
    /** <p>A home goods store.</p> */
    public static final OntClass HomeGoodsStore = M_MODEL.createClass( "http://schema.org/HomeGoodsStore" );
    
    /** <p>A hospital.</p> */
    public static final OntClass Hospital = M_MODEL.createClass( "http://schema.org/Hospital" );
    
    /** <p>A hostel - cheap accommodation, often in shared dormitories. &lt;br /&gt;&lt;br 
     *  /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated document on 
     *  the use of schema.org for marking up hotels and other forms of accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass Hostel = M_MODEL.createClass( "http://schema.org/Hostel" );
    
    /** <p>A hotel is an establishment that provides lodging paid on a short-term basis 
     *  (source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel). 
     *  &lt;br /&gt;&lt;br /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated 
     *  document on the use of schema.org for marking up hotels and other forms of 
     *  accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass Hotel = M_MODEL.createClass( "http://schema.org/Hotel" );
    
    /** <p>A hotel room is a single room in a hotel. &lt;br /&gt;&lt;br /&gt; See also 
     *  the &lt;a href="/docs/hotels.html"&gt;dedicated document on the use of schema.org 
     *  for marking up hotels and other forms of accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass HotelRoom = M_MODEL.createClass( "http://schema.org/HotelRoom" );
    
    /** <p>A house is a building or structure that has the ability to be occupied for 
     *  habitation by humans or other creatures (source: Wikipedia, the free encyclopedia, 
     *  see &lt;a href="http://en.wikipedia.org/wiki/House"&gt;http://en.wikipedia.org/wiki/House&lt;/a&gt;).</p>
     */
    public static final OntClass House = M_MODEL.createClass( "http://schema.org/House" );
    
    /** <p>A house painting service.</p> */
    public static final OntClass HousePainter = M_MODEL.createClass( "http://schema.org/HousePainter" );
    
    /** <p>Instructions that explain how to achieve a result by performing a sequence 
     *  of steps.</p>
     */
    public static final OntClass HowTo = M_MODEL.createClass( "http://schema.org/HowTo" );
    
    /** <p>A direction indicating a single action to do in the instructions for how to 
     *  achieve a result.</p>
     */
    public static final OntClass HowToDirection = M_MODEL.createClass( "http://schema.org/HowToDirection" );
    
    /** <p>An item used as either a tool or supply when performing the instructions for 
     *  how to achieve a result.</p>
     */
    public static final OntClass HowToItem = M_MODEL.createClass( "http://schema.org/HowToItem" );
    
    /** <p>A sub-grouping of steps in the instructions for how to achieve a result (e.g. 
     *  steps for making a pie crust within a pie recipe).</p>
     */
    public static final OntClass HowToSection = M_MODEL.createClass( "http://schema.org/HowToSection" );
    
    /** <p>A step in the instructions for how to achieve a result. It is an ordered list 
     *  with HowToDirection and/or HowToTip items.</p>
     */
    public static final OntClass HowToStep = M_MODEL.createClass( "http://schema.org/HowToStep" );
    
    /** <p>A supply consumed when performing the instructions for how to achieve a result.</p> */
    public static final OntClass HowToSupply = M_MODEL.createClass( "http://schema.org/HowToSupply" );
    
    /** <p>An explanation in the instructions for how to achieve a result. It provides 
     *  supplementary information about a technique, supply, author's preference, 
     *  etc. It can explain what could be done, or what should not be done, but doesn't 
     *  specify what should be done (see HowToDirection).</p>
     */
    public static final OntClass HowToTip = M_MODEL.createClass( "http://schema.org/HowToTip" );
    
    /** <p>A tool used (but not consumed) when performing instructions for how to achieve 
     *  a result.</p>
     */
    public static final OntClass HowToTool = M_MODEL.createClass( "http://schema.org/HowToTool" );
    
    /** <p>A HyperToc represents a hypertext table of contents for complex media objects, 
     *  such as [[VideoObject]], [[AudioObject]]. Items in the table of contents are 
     *  indicated using the [[tocEntry]] property, and typed [[HyperTocEntry]]. For 
     *  cases where the same larger work is split into multiple files, [[associatedMedia]] 
     *  can be used on individual [[HyperTocEntry]] items.</p>
     */
    public static final OntClass HyperToc = M_MODEL.createClass( "http://schema.org/HyperToc" );
    
    /** <p>A HyperToEntry is an item within a [[HyperToc]], which represents a hypertext 
     *  table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. 
     *  The media object itself is indicated using [[associatedMedia]]. Each section 
     *  of interest within that content can be described with a [[HyperTocEntry]], 
     *  with associated [[startOffset]] and [[endOffset]]. When several entries are 
     *  all from the same file, [[associatedMedia]] is used on the overarching [[HyperTocEntry]]; 
     *  if the content has been split into multiple files, they can be referenced 
     *  using [[associatedMedia]] on each [[HyperTocEntry]].</p>
     */
    public static final OntClass HyperTocEntry = M_MODEL.createClass( "http://schema.org/HyperTocEntry" );
    
    /** <p>&lt;a href="https://www.iptc.org/"&gt;IPTC&lt;/a&gt; "Digital Source" codes 
     *  for use with the [[digitalSourceType]] property, providing information about 
     *  the source for a digital media object. In general these codes are not declared 
     *  here to be mutually exclusive, although some combinations would be contradictory 
     *  if applied simultaneously, or might be considered mutually incompatible by 
     *  upstream maintainers of the definitions. See the IPTC &lt;a href="https://www.iptc.org/std/photometadata/documentation/userguide/"&gt;documentation&lt;/a&gt; 
     *  for &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;detailed 
     *  definitions&lt;/a&gt; of all terms.</p>
     */
    public static final OntClass IPTCDigitalSourceEnumeration = M_MODEL.createClass( "http://schema.org/IPTCDigitalSourceEnumeration" );
    
    /** <p>An ice cream shop.</p> */
    public static final OntClass IceCreamShop = M_MODEL.createClass( "http://schema.org/IceCreamShop" );
    
    /** <p>The act of intentionally disregarding the object. An agent ignores an object.</p> */
    public static final OntClass IgnoreAction = M_MODEL.createClass( "http://schema.org/IgnoreAction" );
    
    /** <p>Web page type: Image gallery page.</p> */
    public static final OntClass ImageGallery = M_MODEL.createClass( "http://schema.org/ImageGallery" );
    
    /** <p>An image file.</p> */
    public static final OntClass ImageObject = M_MODEL.createClass( "http://schema.org/ImageObject" );
    
    /** <p>A specific and exact (byte-for-byte) version of an [[ImageObject]]. Two byte-for-byte 
     *  identical files, for the purposes of this type, considered identical. If they 
     *  have different embedded metadata (e.g. XMP, EXIF) the files will differ. Different 
     *  external facts about the files, e.g. creator or dateCreated that aren't represented 
     *  in their actual content, do not affect this notion of identity.</p>
     */
    public static final OntClass ImageObjectSnapshot = M_MODEL.createClass( "http://schema.org/ImageObjectSnapshot" );
    
    /** <p>Any medical imaging modality typically used for diagnostic purposes.</p> */
    public static final OntClass ImagingTest = M_MODEL.createClass( "http://schema.org/ImagingTest" );
    
    /** <p>The types of expenses that are covered by the incentive. For example some 
     *  incentives are only for the goods (tangible items) but the services (labor) 
     *  are excluded.</p>
     */
    public static final OntClass IncentiveQualifiedExpenseType = M_MODEL.createClass( "http://schema.org/IncentiveQualifiedExpenseType" );
    
    /** <p>Enumerates a status for an incentive, such as whether it is active.</p> */
    public static final OntClass IncentiveStatus = M_MODEL.createClass( "http://schema.org/IncentiveStatus" );
    
    /** <p>Enumerates common financial incentives for products, including tax credits, 
     *  tax deductions, rebates and subsidies, etc.</p>
     */
    public static final OntClass IncentiveType = M_MODEL.createClass( "http://schema.org/IncentiveType" );
    
    /** <p>An individual medical practitioner. For their official address use [[address]], 
     *  for affiliations to hospitals use [[hospitalAffiliation]]. The [[practicesAt]] 
     *  property can be used to indicate [[MedicalOrganization]] hospitals, clinics, 
     *  pharmacies etc. where this physician practices.</p>
     */
    public static final OntClass IndividualPhysician = M_MODEL.createClass( "http://schema.org/IndividualPhysician" );
    
    /** <p>A single, identifiable product instance (e.g. a laptop with a particular serial 
     *  number).</p>
     */
    public static final OntClass IndividualProduct = M_MODEL.createClass( "http://schema.org/IndividualProduct" );
    
    /** <p>Classes of agents or pathogens that transmit infectious diseases. Enumerated 
     *  type.</p>
     */
    public static final OntClass InfectiousAgentClass = M_MODEL.createClass( "http://schema.org/InfectiousAgentClass" );
    
    /** <p>An infectious disease is a clinically evident human disease resulting from 
     *  the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic 
     *  bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered 
     *  an infectious disease, such pathogens are known to be able to cause this disease.</p>
     */
    public static final OntClass InfectiousDisease = M_MODEL.createClass( "http://schema.org/InfectiousDisease" );
    
    /** <p>The act of notifying someone of information pertinent to them, with no expectation 
     *  of a response.</p>
     */
    public static final OntClass InformAction = M_MODEL.createClass( "http://schema.org/InformAction" );
    
    /** <p>The act of adding at a specific location in an ordered collection.</p> */
    public static final OntClass InsertAction = M_MODEL.createClass( "http://schema.org/InsertAction" );
    
    /** <p>The act of installing an application.</p> */
    public static final OntClass InstallAction = M_MODEL.createClass( "http://schema.org/InstallAction" );
    
    /** <p>An Insurance agency.</p> */
    public static final OntClass InsuranceAgency = M_MODEL.createClass( "http://schema.org/InsuranceAgency" );
    
    /** <p>A utility class that serves as the umbrella for a number of 'intangible' things 
     *  such as quantities, structured values, etc.</p>
     */
    public static final OntClass Intangible = M_MODEL.createClass( "http://schema.org/Intangible" );
    
    /** <p>Data type: Integer.</p> */
    public static final OntClass Integer = M_MODEL.createClass( "http://schema.org/Integer" );
    
    /** <p>The act of interacting with another person or organization.</p> */
    public static final OntClass InteractAction = M_MODEL.createClass( "http://schema.org/InteractAction" );
    
    /** <p>A summary of how users have interacted with this CreativeWork. In most cases, 
     *  authors will use a subtype to specify the specific type of interaction.</p>
     */
    public static final OntClass InteractionCounter = M_MODEL.createClass( "http://schema.org/InteractionCounter" );
    
    /** <p>An internet cafe.</p> */
    public static final OntClass InternetCafe = M_MODEL.createClass( "http://schema.org/InternetCafe" );
    
    /** <p>A company or fund that gathers capital from a number of investors to create 
     *  a pool of money that is then re-invested into stocks, bonds and other assets.</p>
     */
    public static final OntClass InvestmentFund = M_MODEL.createClass( "http://schema.org/InvestmentFund" );
    
    /** <p>A type of financial product that typically requires the client to transfer 
     *  funds to a financial service in return for potential beneficial financial 
     *  return.</p>
     */
    public static final OntClass InvestmentOrDeposit = M_MODEL.createClass( "http://schema.org/InvestmentOrDeposit" );
    
    /** <p>The act of asking someone to attend an event. Reciprocal of RsvpAction.</p> */
    public static final OntClass InviteAction = M_MODEL.createClass( "http://schema.org/InviteAction" );
    
    /** <p>A statement of the money due for goods or services; a bill.</p> */
    public static final OntClass Invoice = M_MODEL.createClass( "http://schema.org/Invoice" );
    
    /** <p>A list of possible product availability options.</p> */
    public static final OntClass ItemAvailability = M_MODEL.createClass( "http://schema.org/ItemAvailability" );
    
    /** <p>A list of items of any sort&amp;#x2014;for example, Top 10 Movies About Weathermen, 
     *  or Top 100 Party Songs. Not to be confused with HTML lists, which are often 
     *  used only for formatting.</p>
     */
    public static final OntClass ItemList = M_MODEL.createClass( "http://schema.org/ItemList" );
    
    /** <p>Enumerated for values for itemListOrder for indicating how an ordered ItemList 
     *  is organized.</p>
     */
    public static final OntClass ItemListOrderType = M_MODEL.createClass( "http://schema.org/ItemListOrderType" );
    
    /** <p>A page devoted to a single item, such as a particular product or hotel.</p> */
    public static final OntClass ItemPage = M_MODEL.createClass( "http://schema.org/ItemPage" );
    
    /** <p>A jewelry store.</p> */
    public static final OntClass JewelryStore = M_MODEL.createClass( "http://schema.org/JewelryStore" );
    
    /** <p>A listing that describes a job opening in a certain organization.</p> */
    public static final OntClass JobPosting = M_MODEL.createClass( "http://schema.org/JobPosting" );
    
    /** <p>An agent joins an event/group with participants/friends at a location.
     *  
     *  Related actions:
     *  
     *  * [[RegisterAction]]: Unlike RegisterAction, JoinAction refers to joining 
     *  a group/team of people.
     *  * [[SubscribeAction]]: Unlike SubscribeAction, JoinAction does not imply that 
     *  you'll be receiving updates.
     *  * [[FollowAction]]: Unlike FollowAction, JoinAction does not imply that you'll 
     *  be polling for updates.</p>
     */
    public static final OntClass JoinAction = M_MODEL.createClass( "http://schema.org/JoinAction" );
    
    /** <p>The anatomical location at which two or more bones make contact.</p> */
    public static final OntClass Joint = M_MODEL.createClass( "http://schema.org/Joint" );
    
    /** <p>A lake (for example, Lake Pontrachain).</p> */
    public static final OntClass LakeBodyOfWater = M_MODEL.createClass( "http://schema.org/LakeBodyOfWater" );
    
    /** <p>A landform or physical feature. Landform elements include mountains, plains, 
     *  lakes, rivers, seascape and oceanic waterbody interface features such as bays, 
     *  peninsulas, seas and so forth, including sub-aqueous terrain features such 
     *  as submersed mountain ranges, volcanoes, and the great ocean basins.</p>
     */
    public static final OntClass Landform = M_MODEL.createClass( "http://schema.org/Landform" );
    
    /** <p>An historical landmark or building.</p> */
    public static final OntClass LandmarksOrHistoricalBuildings = M_MODEL.createClass( "http://schema.org/LandmarksOrHistoricalBuildings" );
    
    /** <p>Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language 
     *  code tags expressed in [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) 
     *  can be used via the [[alternateName]] property. The Language type previously 
     *  also covered programming languages such as Scheme and Lisp, which are now 
     *  best represented using [[ComputerLanguage]].</p>
     */
    public static final OntClass Language = M_MODEL.createClass( "http://schema.org/Language" );
    
    /** <p>The LearningResource type can be used to indicate [[CreativeWork]]s (whether 
     *  physical or digital) that have a particular and explicit orientation towards 
     *  learning, education, skill acquisition, and other educational purposes. [[LearningResource]] 
     *  is expected to be used as an addition to a primary type such as [[Book]], 
     *  [[VideoObject]], [[Product]] etc. [[EducationEvent]] serves a similar purpose 
     *  for event-like things (e.g. a [[Trip]]). A [[LearningResource]] may be created 
     *  as a result of an [[EducationEvent]], for example by recording one.</p>
     */
    public static final OntClass LearningResource = M_MODEL.createClass( "http://schema.org/LearningResource" );
    
    /** <p>An agent leaves an event / group with participants/friends at a location.
     *  
     *  Related actions:
     *  
     *  * [[JoinAction]]: The antonym of LeaveAction.
     *  * [[UnRegisterAction]]: Unlike UnRegisterAction, LeaveAction implies leaving 
     *  a group/team of people rather than a service.</p>
     */
    public static final OntClass LeaveAction = M_MODEL.createClass( "http://schema.org/LeaveAction" );
    
    /** <p>A list of possible statuses for the legal force of a legislation.</p> */
    public static final OntClass LegalForceStatus = M_MODEL.createClass( "http://schema.org/LegalForceStatus" );
    
    /** <p>A LegalService is a business that provides legally-oriented services, advice 
     *  and representation, e.g. law firms.
     *  
     *  As a [[LocalBusiness]] it can be described as a [[provider]] of one or more 
     *  [[Service]]s).</p>
     */
    public static final OntClass LegalService = M_MODEL.createClass( "http://schema.org/LegalService" );
    
    /** <p>A list of possible levels for the legal validity of a legislation.</p> */
    public static final OntClass LegalValueLevel = M_MODEL.createClass( "http://schema.org/LegalValueLevel" );
    
    /** <p>A legal document such as an act, decree, bill, etc. (enforceable or not) or 
     *  a component of a legal act (like an article).</p>
     */
    public static final OntClass Legislation = M_MODEL.createClass( "http://schema.org/Legislation" );
    
    /** <p>A specific object or file containing a Legislation. Note that the same Legislation 
     *  can be published in multiple files. For example, a digitally signed PDF, a 
     *  plain PDF and an HTML version.</p>
     */
    public static final OntClass LegislationObject = M_MODEL.createClass( "http://schema.org/LegislationObject" );
    
    /** <p>A legislative building&amp;#x2014;for example, the state capitol.</p> */
    public static final OntClass LegislativeBuilding = M_MODEL.createClass( "http://schema.org/LegislativeBuilding" );
    
    /** <p>The act of providing an object under an agreement that it will be returned 
     *  at a later date. Reciprocal of BorrowAction.
     *  
     *  Related actions:
     *  
     *  * [[BorrowAction]]: Reciprocal of LendAction.</p>
     */
    public static final OntClass LendAction = M_MODEL.createClass( "http://schema.org/LendAction" );
    
    /** <p>A library.</p> */
    public static final OntClass Library = M_MODEL.createClass( "http://schema.org/Library" );
    
    /** <p>A [[LibrarySystem]] is a collaborative system amongst several libraries.</p> */
    public static final OntClass LibrarySystem = M_MODEL.createClass( "http://schema.org/LibrarySystem" );
    
    /** <p>A process of care involving exercise, changes to diet, fitness routines, and 
     *  other lifestyle changes aimed at improving a health condition.</p>
     */
    public static final OntClass LifestyleModification = M_MODEL.createClass( "http://schema.org/LifestyleModification" );
    
    /** <p>A short band of tough, flexible, fibrous connective tissue that functions 
     *  to connect multiple bones, cartilages, and structurally support joints.</p>
     */
    public static final OntClass Ligament = M_MODEL.createClass( "http://schema.org/Ligament" );
    
    /** <p>The act of expressing a positive sentiment about the object. An agent likes 
     *  an object (a proposition, topic or theme) with participants.</p>
     */
    public static final OntClass LikeAction = M_MODEL.createClass( "http://schema.org/LikeAction" );
    
    /** <p>A Role that represents a Web link, e.g. as expressed via the 'url' property. 
     *  Its linkRelationship property can indicate URL-based and plain textual link 
     *  types, e.g. those in IANA link registry or others such as 'amphtml'. This 
     *  structure provides a placeholder where details from HTML's link element can 
     *  be represented outside of HTML, e.g. in JSON-LD feeds.</p>
     */
    public static final OntClass LinkRole = M_MODEL.createClass( "http://schema.org/LinkRole" );
    
    /** <p>A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.</p> */
    public static final OntClass LiquorStore = M_MODEL.createClass( "http://schema.org/LiquorStore" );
    
    /** <p>An list item, e.g. a step in a checklist or how-to description.</p> */
    public static final OntClass ListItem = M_MODEL.createClass( "http://schema.org/ListItem" );
    
    /** <p>The act of consuming audio content.</p> */
    public static final OntClass ListenAction = M_MODEL.createClass( "http://schema.org/ListenAction" );
    
    /** <p>Event type: Literary event.</p> */
    public static final OntClass LiteraryEvent = M_MODEL.createClass( "http://schema.org/LiteraryEvent" );
    
    /** <p>A [[LiveBlogPosting]] is a [[BlogPosting]] intended to provide a rolling textual 
     *  coverage of an ongoing event through continuous updates.</p>
     */
    public static final OntClass LiveBlogPosting = M_MODEL.createClass( "http://schema.org/LiveBlogPosting" );
    
    /** <p>A financial product for the loaning of an amount of money, or line of credit, 
     *  under agreed terms and charges.</p>
     */
    public static final OntClass LoanOrCredit = M_MODEL.createClass( "http://schema.org/LoanOrCredit" );
    
    /** <p>A particular physical business or branch of an organization. Examples of LocalBusiness 
     *  include a restaurant, a particular branch of a restaurant chain, a branch 
     *  of a bank, a medical practice, a club, a bowling alley, etc.</p>
     */
    public static final OntClass LocalBusiness = M_MODEL.createClass( "http://schema.org/LocalBusiness" );
    
    /** <p>Specifies a location feature by providing a structured value representing 
     *  a feature of an accommodation as a property-value pair of varying degrees 
     *  of formality.</p>
     */
    public static final OntClass LocationFeatureSpecification = M_MODEL.createClass( "http://schema.org/LocationFeatureSpecification" );
    
    /** <p>A locksmith.</p> */
    public static final OntClass Locksmith = M_MODEL.createClass( "http://schema.org/Locksmith" );
    
    /** <p>A lodging business, such as a motel, hotel, or inn.</p> */
    public static final OntClass LodgingBusiness = M_MODEL.createClass( "http://schema.org/LodgingBusiness" );
    
    /** <p>A reservation for lodging at a hotel, motel, inn, etc.
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations.</p>
     */
    public static final OntClass LodgingReservation = M_MODEL.createClass( "http://schema.org/LodgingReservation" );
    
    /** <p>The act of being defeated in a competitive activity.</p> */
    public static final OntClass LoseAction = M_MODEL.createClass( "http://schema.org/LoseAction" );
    
    /** <p>A type of blood vessel that specifically carries lymph fluid unidirectionally 
     *  toward the heart.</p>
     */
    public static final OntClass LymphaticVessel = M_MODEL.createClass( "http://schema.org/LymphaticVessel" );
    
    /** <p>A book, document, or piece of music written by hand rather than typed or printed.</p> */
    public static final OntClass Manuscript = M_MODEL.createClass( "http://schema.org/Manuscript" );
    
    /** <p>A map.</p> */
    public static final OntClass Map = M_MODEL.createClass( "http://schema.org/Map" );
    
    /** <p>An enumeration of several kinds of Map.</p> */
    public static final OntClass MapCategoryType = M_MODEL.createClass( "http://schema.org/MapCategoryType" );
    
    /** <p>The act of marrying a person.</p> */
    public static final OntClass MarryAction = M_MODEL.createClass( "http://schema.org/MarryAction" );
    
    /** <p>Properties that take Mass as values are of the form '&amp;lt;Number&amp;gt; 
     *  &amp;lt;Mass unit of measure&amp;gt;'. E.g., '7 kg'.</p>
     */
    public static final OntClass Mass = M_MODEL.createClass( "http://schema.org/Mass" );
    
    /** <p>A math solver which is capable of solving a subset of mathematical problems.</p> */
    public static final OntClass MathSolver = M_MODEL.createClass( "http://schema.org/MathSolver" );
    
    /** <p>The maximum dosing schedule considered safe for a drug or supplement as recommended 
     *  by an authority or by the drug/supplement's manufacturer. Capture the recommending 
     *  authority in the recognizingAuthority property of MedicalEntity.</p>
     */
    public static final OntClass MaximumDoseSchedule = M_MODEL.createClass( "http://schema.org/MaximumDoseSchedule" );
    
    /** <p>Enumeration(s) for use with [[measurementMethod]].</p> */
    public static final OntClass MeasurementMethodEnum = M_MODEL.createClass( "http://schema.org/MeasurementMethodEnum" );
    
    /** <p>Enumeration of common measurement types (or dimensions), for example "chest" 
     *  for a person, "inseam" for pants, "gauge" for screws, or "wheel" for bicycles.</p>
     */
    public static final OntClass MeasurementTypeEnumeration = M_MODEL.createClass( "http://schema.org/MeasurementTypeEnumeration" );
    
    /** <p>MediaEnumeration enumerations are lists of codes, labels etc. useful for describing 
     *  media objects. They may be reflections of externally developed lists, or created 
     *  at schema.org, or a combination.</p>
     */
    public static final OntClass MediaEnumeration = M_MODEL.createClass( "http://schema.org/MediaEnumeration" );
    
    /** <p>Web page type: Media gallery page. A mixed-media page that can contain media 
     *  such as images, videos, and other multimedia.</p>
     */
    public static final OntClass MediaGallery = M_MODEL.createClass( "http://schema.org/MediaGallery" );
    
    /** <p>Codes for use with the [[mediaAuthenticityCategory]] property, indicating 
     *  the authenticity of a media object (in the context of how it was published 
     *  or shared). In general these codes are not mutually exclusive, although some 
     *  combinations (such as 'original' versus 'transformed', 'edited' and 'staged') 
     *  would be contradictory if applied in the same [[MediaReview]]. Note that the 
     *  application of these codes is with regard to a piece of media shared or published 
     *  in a particular context.</p>
     */
    public static final OntClass MediaManipulationRatingEnumeration = M_MODEL.createClass( "http://schema.org/MediaManipulationRatingEnumeration" );
    
    /** <p>A media object, such as an image, video, audio, or text object embedded in 
     *  a web page or a downloadable dataset i.e. DataDownload. Note that a creative 
     *  work may have many media objects associated with it on the same web page. 
     *  For example, a page about a single song (MusicRecording) may have a music 
     *  video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).</p>
     */
    public static final OntClass MediaObject = M_MODEL.createClass( "http://schema.org/MediaObject" );
    
    /** <p>A [[MediaReview]] is a more specialized form of Review dedicated to the evaluation 
     *  of media content online, typically in the context of fact-checking and misinformation. 
     *  For more general reviews of media in the broader sense, use [[UserReview]], 
     *  [[CriticReview]] or other [[Review]] types. This definition is a work in progress. 
     *  While the [[MediaManipulationRatingEnumeration]] list reflects significant 
     *  community review amongst fact-checkers and others working to combat misinformation, 
     *  the specific structures for representing media objects, their versions and 
     *  publication context, are still evolving. Similarly, best practices for the 
     *  relationship between [[MediaReview]] and [[ClaimReview]] markup have not yet 
     *  been finalized.</p>
     */
    public static final OntClass MediaReview = M_MODEL.createClass( "http://schema.org/MediaReview" );
    
    /** <p>Represents an item or group of closely related items treated as a unit for 
     *  the sake of evaluation in a [[MediaReview]]. Authorship etc. apply to the 
     *  items rather than to the curation/grouping or reviewing party.</p>
     */
    public static final OntClass MediaReviewItem = M_MODEL.createClass( "http://schema.org/MediaReviewItem" );
    
    /** <p>A subscription which allows a user to access media including audio, video, 
     *  books, etc.</p>
     */
    public static final OntClass MediaSubscription = M_MODEL.createClass( "http://schema.org/MediaSubscription" );
    
    /** <p>Target audiences for medical web pages.</p> */
    public static final OntClass MedicalAudience = M_MODEL.createClass( "http://schema.org/MedicalAudience" );
    
    /** <p>Target audiences types for medical web pages. Enumerated type.</p> */
    public static final OntClass MedicalAudienceType = M_MODEL.createClass( "http://schema.org/MedicalAudienceType" );
    
    /** <p>A particular physical or virtual business of an organization for medical purposes. 
     *  Examples of MedicalBusiness include different businesses run by health professionals.</p>
     */
    public static final OntClass MedicalBusiness = M_MODEL.createClass( "http://schema.org/MedicalBusiness" );
    
    /** <p>The causative agent(s) that are responsible for the pathophysiologic process 
     *  that eventually results in a medical condition, symptom or sign. In this schema, 
     *  unless otherwise specified this is meant to be the proximate cause of the 
     *  medical condition, symptom or sign. The proximate cause is defined as the 
     *  causative agent that most directly results in the medical condition, symptom 
     *  or sign. For example, the HIV virus could be considered a cause of AIDS. Or 
     *  in a diagnostic context, if a patient fell and sustained a hip fracture and 
     *  two days later sustained a pulmonary embolism which eventuated in a cardiac 
     *  arrest, the cause of the cardiac arrest (the proximate cause) would be the 
     *  pulmonary embolism and not the fall. Medical causes can include cardiovascular, 
     *  chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, 
     *  hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, 
     *  nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, 
     *  pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical 
     *  conditions can be causes as well.</p>
     */
    public static final OntClass MedicalCause = M_MODEL.createClass( "http://schema.org/MedicalCause" );
    
    /** <p>A facility, often associated with a hospital or medical school, that is devoted 
     *  to the specific diagnosis and/or healthcare. Previously limited to outpatients 
     *  but with evolution it may be open to inpatients as well.</p>
     */
    public static final OntClass MedicalClinic = M_MODEL.createClass( "http://schema.org/MedicalClinic" );
    
    /** <p>A code for a medical entity.</p> */
    public static final OntClass MedicalCode = M_MODEL.createClass( "http://schema.org/MedicalCode" );
    
    /** <p>Any condition of the human body that affects the normal functioning of a person, 
     *  whether physically or mentally. Includes diseases, injuries, disabilities, 
     *  disorders, syndromes, etc.</p>
     */
    public static final OntClass MedicalCondition = M_MODEL.createClass( "http://schema.org/MedicalCondition" );
    
    /** <p>A stage of a medical condition, such as 'Stage IIIa'.</p> */
    public static final OntClass MedicalConditionStage = M_MODEL.createClass( "http://schema.org/MedicalConditionStage" );
    
    /** <p>A condition or factor that serves as a reason to withhold a certain medical 
     *  therapy. Contraindications can be absolute (there are no reasonable circumstances 
     *  for undertaking a course of action) or relative (the patient is at higher 
     *  risk of complications, but these risks may be outweighed by other considerations 
     *  or mitigated by other measures).</p>
     */
    public static final OntClass MedicalContraindication = M_MODEL.createClass( "http://schema.org/MedicalContraindication" );
    
    /** <p>Any object used in a medical capacity, such as to diagnose or treat a patient.</p> */
    public static final OntClass MedicalDevice = M_MODEL.createClass( "http://schema.org/MedicalDevice" );
    
    /** <p>Categories of medical devices, organized by the purpose or intended use of 
     *  the device.</p>
     */
    public static final OntClass MedicalDevicePurpose = M_MODEL.createClass( "http://schema.org/MedicalDevicePurpose" );
    
    /** <p>The most generic type of entity related to health and the practice of medicine.</p> */
    public static final OntClass MedicalEntity = M_MODEL.createClass( "http://schema.org/MedicalEntity" );
    
    /** <p>Enumerations related to health and the practice of medicine: A concept that 
     *  is used to attribute a quality to another concept, as a qualifier, a collection 
     *  of items or a listing of all of the elements of a set in medicine practice.</p>
     */
    public static final OntClass MedicalEnumeration = M_MODEL.createClass( "http://schema.org/MedicalEnumeration" );
    
    /** <p>Level of evidence for a medical guideline. Enumerated type.</p> */
    public static final OntClass MedicalEvidenceLevel = M_MODEL.createClass( "http://schema.org/MedicalEvidenceLevel" );
    
    /** <p>Any recommendation made by a standard society (e.g. ACC/AHA) or consensus 
     *  statement that denotes how to diagnose and treat a particular condition. Note: 
     *  this type should be used to tag the actual guideline recommendation; if the 
     *  guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle 
     *  to tag the overall article, not this type. Note also: the organization making 
     *  the recommendation should be captured in the recognizingAuthority base property 
     *  of MedicalEntity.</p>
     */
    public static final OntClass MedicalGuideline = M_MODEL.createClass( "http://schema.org/MedicalGuideline" );
    
    /** <p>A guideline contraindication that designates a process as harmful and where 
     *  quality of the data supporting the contraindication is sound.</p>
     */
    public static final OntClass MedicalGuidelineContraindication = M_MODEL.createClass( "http://schema.org/MedicalGuidelineContraindication" );
    
    /** <p>A guideline recommendation that is regarded as efficacious and where quality 
     *  of the data supporting the recommendation is sound.</p>
     */
    public static final OntClass MedicalGuidelineRecommendation = M_MODEL.createClass( "http://schema.org/MedicalGuidelineRecommendation" );
    
    /** <p>Any medical imaging modality typically used for diagnostic purposes. Enumerated 
     *  type.</p>
     */
    public static final OntClass MedicalImagingTechnique = M_MODEL.createClass( "http://schema.org/MedicalImagingTechnique" );
    
    /** <p>A condition or factor that indicates use of a medical therapy, including signs, 
     *  symptoms, risk factors, anatomical states, etc.</p>
     */
    public static final OntClass MedicalIndication = M_MODEL.createClass( "http://schema.org/MedicalIndication" );
    
    /** <p>A utility class that serves as the umbrella for a number of 'intangible' things 
     *  in the medical space.</p>
     */
    public static final OntClass MedicalIntangible = M_MODEL.createClass( "http://schema.org/MedicalIntangible" );
    
    /** <p>An observational study is a type of medical study that attempts to infer the 
     *  possible effect of a treatment through observation of a cohort of subjects 
     *  over a period of time. In an observational study, the assignment of subjects 
     *  into treatment groups versus control groups is outside the control of the 
     *  investigator. This is in contrast with controlled studies, such as the randomized 
     *  controlled trials represented by MedicalTrial, where each subject is randomly 
     *  assigned to a treatment group or a control group before the start of the treatment.</p>
     */
    public static final OntClass MedicalObservationalStudy = M_MODEL.createClass( "http://schema.org/MedicalObservationalStudy" );
    
    /** <p>Design models for observational medical studies. Enumerated type.</p> */
    public static final OntClass MedicalObservationalStudyDesign = M_MODEL.createClass( "http://schema.org/MedicalObservationalStudyDesign" );
    
    /** <p>A medical organization (physical or not), such as hospital, institution or 
     *  clinic.</p>
     */
    public static final OntClass MedicalOrganization = M_MODEL.createClass( "http://schema.org/MedicalOrganization" );
    
    /** <p>A process of care used in either a diagnostic, therapeutic, preventive or 
     *  palliative capacity that relies on invasive (surgical), non-invasive, or other 
     *  techniques.</p>
     */
    public static final OntClass MedicalProcedure = M_MODEL.createClass( "http://schema.org/MedicalProcedure" );
    
    /** <p>An enumeration that describes different types of medical procedures.</p> */
    public static final OntClass MedicalProcedureType = M_MODEL.createClass( "http://schema.org/MedicalProcedureType" );
    
    /** <p>A complex mathematical calculation requiring an online calculator, used to 
     *  assess prognosis. Note: use the url property of Thing to record any URLs for 
     *  online calculators.</p>
     */
    public static final OntClass MedicalRiskCalculator = M_MODEL.createClass( "http://schema.org/MedicalRiskCalculator" );
    
    /** <p>Any rule set or interactive tool for estimating the risk of developing a complication 
     *  or condition.</p>
     */
    public static final OntClass MedicalRiskEstimator = M_MODEL.createClass( "http://schema.org/MedicalRiskEstimator" );
    
    /** <p>A risk factor is anything that increases a person's likelihood of developing 
     *  or contracting a disease, medical condition, or complication.</p>
     */
    public static final OntClass MedicalRiskFactor = M_MODEL.createClass( "http://schema.org/MedicalRiskFactor" );
    
    /** <p>A simple system that adds up the number of risk factors to yield a score that 
     *  is associated with prognosis, e.g. CHAD score, TIMI risk score.</p>
     */
    public static final OntClass MedicalRiskScore = M_MODEL.createClass( "http://schema.org/MedicalRiskScore" );
    
    /** <p>A scholarly article in the medical domain.</p> */
    public static final OntClass MedicalScholarlyArticle = M_MODEL.createClass( "http://schema.org/MedicalScholarlyArticle" );
    
    /** <p>Any physical manifestation of a person's medical condition discoverable by 
     *  objective diagnostic tests or physical examination.</p>
     */
    public static final OntClass MedicalSign = M_MODEL.createClass( "http://schema.org/MedicalSign" );
    
    /** <p>Any feature associated or not with a medical condition. In medicine a symptom 
     *  is generally subjective while a sign is objective.</p>
     */
    public static final OntClass MedicalSignOrSymptom = M_MODEL.createClass( "http://schema.org/MedicalSignOrSymptom" );
    
    /** <p>Any specific branch of medical science or practice. Medical specialities include 
     *  clinical specialties that pertain to particular organ systems and their respective 
     *  disease states, as well as allied health specialties. Enumerated type.</p>
     */
    public static final OntClass MedicalSpecialty = M_MODEL.createClass( "http://schema.org/MedicalSpecialty" );
    
    /** <p>A medical study is an umbrella type covering all kinds of research studies 
     *  relating to human medicine or health, including observational studies and 
     *  interventional trials and registries, randomized, controlled or not. When 
     *  the specific type of study is known, use one of the extensions of this type, 
     *  such as MedicalTrial or MedicalObservationalStudy. Also, note that this type 
     *  should be used to mark up data that describes the study itself; to tag an 
     *  article that publishes the results of a study, use MedicalScholarlyArticle. 
     *  Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov 
     *  ID.</p>
     */
    public static final OntClass MedicalStudy = M_MODEL.createClass( "http://schema.org/MedicalStudy" );
    
    /** <p>The status of a medical study. Enumerated type.</p> */
    public static final OntClass MedicalStudyStatus = M_MODEL.createClass( "http://schema.org/MedicalStudyStatus" );
    
    /** <p>Any complaint sensed and expressed by the patient (therefore defined as subjective) 
     *  like stomachache, lower-back pain, or fatigue.</p>
     */
    public static final OntClass MedicalSymptom = M_MODEL.createClass( "http://schema.org/MedicalSymptom" );
    
    /** <p>Any medical test, typically performed for diagnostic purposes.</p> */
    public static final OntClass MedicalTest = M_MODEL.createClass( "http://schema.org/MedicalTest" );
    
    /** <p>Any collection of tests commonly ordered together.</p> */
    public static final OntClass MedicalTestPanel = M_MODEL.createClass( "http://schema.org/MedicalTestPanel" );
    
    /** <p>Any medical intervention designed to prevent, treat, and cure human diseases 
     *  and medical conditions, including both curative and palliative therapies. 
     *  Medical therapies are typically processes of care relying upon pharmacotherapy, 
     *  behavioral therapy, supportive therapy (with fluid or nutrition for example), 
     *  or detoxification (e.g. hemodialysis) aimed at improving or preventing a health 
     *  condition.</p>
     */
    public static final OntClass MedicalTherapy = M_MODEL.createClass( "http://schema.org/MedicalTherapy" );
    
    /** <p>A medical trial is a type of medical study that uses a scientific process 
     *  to compare the safety and efficacy of medical therapies or medical procedures. 
     *  In general, medical trials are controlled and subjects are allocated at random 
     *  to the different treatment and/or control groups.</p>
     */
    public static final OntClass MedicalTrial = M_MODEL.createClass( "http://schema.org/MedicalTrial" );
    
    /** <p>Design models for medical trials. Enumerated type.</p> */
    public static final OntClass MedicalTrialDesign = M_MODEL.createClass( "http://schema.org/MedicalTrialDesign" );
    
    /** <p>A web page that provides medical information.</p> */
    public static final OntClass MedicalWebPage = M_MODEL.createClass( "http://schema.org/MedicalWebPage" );
    
    /** <p>Systems of medical practice.</p> */
    public static final OntClass MedicineSystem = M_MODEL.createClass( "http://schema.org/MedicineSystem" );
    
    /** <p>A meeting room, conference room, or conference hall is a room provided for 
     *  singular events such as business conferences and meetings (source: Wikipedia, 
     *  the free encyclopedia, see &lt;a href="http://en.wikipedia.org/wiki/Conference_hall"&gt;http://en.wikipedia.org/wiki/Conference_hall&lt;/a&gt;). 
     *  &lt;br /&gt;&lt;br /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated 
     *  document on the use of schema.org for marking up hotels and other forms of 
     *  accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass MeetingRoom = M_MODEL.createClass( "http://schema.org/MeetingRoom" );
    
    /** <p>A MemberProgram defines a loyalty (or membership) program that provides its 
     *  members with certain benefits, for example better pricing, free shipping or 
     *  returns, or the ability to earn loyalty points. Member programs may have multiple 
     *  tiers, for example silver and gold members, each with different benefits.</p>
     */
    public static final OntClass MemberProgram = M_MODEL.createClass( "http://schema.org/MemberProgram" );
    
    /** <p>A MemberProgramTier specifies a tier under a loyalty (member) program, for 
     *  example "gold".</p>
     */
    public static final OntClass MemberProgramTier = M_MODEL.createClass( "http://schema.org/MemberProgramTier" );
    
    /** <p>A men's clothing store.</p> */
    public static final OntClass MensClothingStore = M_MODEL.createClass( "http://schema.org/MensClothingStore" );
    
    /** <p>A structured representation of food or drink items available from a FoodEstablishment.</p> */
    public static final OntClass Menu = M_MODEL.createClass( "http://schema.org/Menu" );
    
    /** <p>A food or drink item listed in a menu or menu section.</p> */
    public static final OntClass MenuItem = M_MODEL.createClass( "http://schema.org/MenuItem" );
    
    /** <p>A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 
     *  'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', 
     *  etc.), or some other classification made by the menu provider.</p>
     */
    public static final OntClass MenuSection = M_MODEL.createClass( "http://schema.org/MenuSection" );
    
    /** <p>Enumerates several kinds of product return policies.</p> */
    public static final OntClass MerchantReturnEnumeration = M_MODEL.createClass( "http://schema.org/MerchantReturnEnumeration" );
    
    /** <p>A MerchantReturnPolicy provides information about product return policies 
     *  associated with an [[Organization]], [[Product]], or [[Offer]].</p>
     */
    public static final OntClass MerchantReturnPolicy = M_MODEL.createClass( "http://schema.org/MerchantReturnPolicy" );
    
    /** <p>A seasonal override of a return policy, for example used for holidays.</p> */
    public static final OntClass MerchantReturnPolicySeasonalOverride = M_MODEL.createClass( "http://schema.org/MerchantReturnPolicySeasonalOverride" );
    
    /** <p>A single message from a sender to one or more organizations or people.</p> */
    public static final OntClass Message = M_MODEL.createClass( "http://schema.org/Message" );
    
    /** <p>A middle school (typically for children aged around 11-14, although this varies 
     *  somewhat).</p>
     */
    public static final OntClass MiddleSchool = M_MODEL.createClass( "http://schema.org/MiddleSchool" );
    
    /** <p>A software application designed specifically to work well on a mobile device 
     *  such as a telephone.</p>
     */
    public static final OntClass MobileApplication = M_MODEL.createClass( "http://schema.org/MobileApplication" );
    
    /** <p>A store that sells mobile phones and related accessories.</p> */
    public static final OntClass MobilePhoneStore = M_MODEL.createClass( "http://schema.org/MobilePhoneStore" );
    
    /** <p>Any constitutionally or isotopically distinct atom, molecule, ion, ion pair, 
     *  radical, radical ion, complex, conformer etc., identifiable as a separately 
     *  distinguishable entity.</p>
     */
    public static final OntClass MolecularEntity = M_MODEL.createClass( "http://schema.org/MolecularEntity" );
    
    /** <p>A monetary value or range. This type can be used to describe an amount of 
     *  money such as $50 USD, or a range as in describing a bank account being suitable 
     *  for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, 
     *  etc. It is recommended to use [[PriceSpecification]] Types to describe the 
     *  price of an Offer, Invoice, etc.</p>
     */
    public static final OntClass MonetaryAmount = M_MODEL.createClass( "http://schema.org/MonetaryAmount" );
    
    /** <p>A statistical distribution of monetary amounts.</p> */
    public static final OntClass MonetaryAmountDistribution = M_MODEL.createClass( "http://schema.org/MonetaryAmountDistribution" );
    
    /** <p>A monetary grant.</p> */
    public static final OntClass MonetaryGrant = M_MODEL.createClass( "http://schema.org/MonetaryGrant" );
    
    /** <p>The act of transferring money from one place to another place. This may occur 
     *  electronically or physically.</p>
     */
    public static final OntClass MoneyTransfer = M_MODEL.createClass( "http://schema.org/MoneyTransfer" );
    
    /** <p>A loan in which property or real estate is used as collateral. (A loan securitized 
     *  against some real estate.)</p>
     */
    public static final OntClass MortgageLoan = M_MODEL.createClass( "http://schema.org/MortgageLoan" );
    
    /** <p>A mosque.</p> */
    public static final OntClass Mosque = M_MODEL.createClass( "http://schema.org/Mosque" );
    
    /** <p>A motel. &lt;br /&gt;&lt;br /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated 
     *  document on the use of schema.org for marking up hotels and other forms of 
     *  accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass Motel = M_MODEL.createClass( "http://schema.org/Motel" );
    
    /** <p>A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.</p> */
    public static final OntClass Motorcycle = M_MODEL.createClass( "http://schema.org/Motorcycle" );
    
    /** <p>A motorcycle dealer.</p> */
    public static final OntClass MotorcycleDealer = M_MODEL.createClass( "http://schema.org/MotorcycleDealer" );
    
    /** <p>A motorcycle repair shop.</p> */
    public static final OntClass MotorcycleRepair = M_MODEL.createClass( "http://schema.org/MotorcycleRepair" );
    
    /** <p>A motorized bicycle is a bicycle with an attached motor used to power the 
     *  vehicle, or to assist with pedaling.</p>
     */
    public static final OntClass MotorizedBicycle = M_MODEL.createClass( "http://schema.org/MotorizedBicycle" );
    
    /** <p>A mountain, like Mount Whitney or Mount Everest.</p> */
    public static final OntClass Mountain = M_MODEL.createClass( "http://schema.org/Mountain" );
    
    /** <p>The act of an agent relocating to a place.
     *  
     *  Related actions:
     *  
     *  * [[TransferAction]]: Unlike TransferAction, the subject of the move is a 
     *  living Person or Organization rather than an inanimate object.</p>
     */
    public static final OntClass MoveAction = M_MODEL.createClass( "http://schema.org/MoveAction" );
    
    /** <p>A movie.</p> */
    public static final OntClass Movie = M_MODEL.createClass( "http://schema.org/Movie" );
    
    /** <p>A short segment/part of a movie.</p> */
    public static final OntClass MovieClip = M_MODEL.createClass( "http://schema.org/MovieClip" );
    
    /** <p>A movie rental store.</p> */
    public static final OntClass MovieRentalStore = M_MODEL.createClass( "http://schema.org/MovieRentalStore" );
    
    /** <p>A series of movies. Included movies can be indicated with the hasPart property.</p> */
    public static final OntClass MovieSeries = M_MODEL.createClass( "http://schema.org/MovieSeries" );
    
    /** <p>A movie theater.</p> */
    public static final OntClass MovieTheater = M_MODEL.createClass( "http://schema.org/MovieTheater" );
    
    /** <p>A moving company.</p> */
    public static final OntClass MovingCompany = M_MODEL.createClass( "http://schema.org/MovingCompany" );
    
    /** <p>A muscle is an anatomical structure consisting of a contractile form of tissue 
     *  that animals use to effect movement.</p>
     */
    public static final OntClass Muscle = M_MODEL.createClass( "http://schema.org/Muscle" );
    
    /** <p>A museum.</p> */
    public static final OntClass Museum = M_MODEL.createClass( "http://schema.org/Museum" );
    
    /** <p>A collection of music tracks.</p> */
    public static final OntClass MusicAlbum = M_MODEL.createClass( "http://schema.org/MusicAlbum" );
    
    /** <p>Classification of the album by its type of content: soundtrack, live album, 
     *  studio album, etc.</p>
     */
    public static final OntClass MusicAlbumProductionType = M_MODEL.createClass( "http://schema.org/MusicAlbumProductionType" );
    
    /** <p>The kind of release which this album is: single, EP or album.</p> */
    public static final OntClass MusicAlbumReleaseType = M_MODEL.createClass( "http://schema.org/MusicAlbumReleaseType" );
    
    /** <p>A musical composition.</p> */
    public static final OntClass MusicComposition = M_MODEL.createClass( "http://schema.org/MusicComposition" );
    
    /** <p>Event type: Music event.</p> */
    public static final OntClass MusicEvent = M_MODEL.createClass( "http://schema.org/MusicEvent" );
    
    /** <p>A musical group, such as a band, an orchestra, or a choir. Can also be a solo 
     *  musician.</p>
     */
    public static final OntClass MusicGroup = M_MODEL.createClass( "http://schema.org/MusicGroup" );
    
    /** <p>A collection of music tracks in playlist form.</p> */
    public static final OntClass MusicPlaylist = M_MODEL.createClass( "http://schema.org/MusicPlaylist" );
    
    /** <p>A music recording (track), usually a single song.</p> */
    public static final OntClass MusicRecording = M_MODEL.createClass( "http://schema.org/MusicRecording" );
    
    /** <p>A MusicRelease is a specific release of a music album.</p> */
    public static final OntClass MusicRelease = M_MODEL.createClass( "http://schema.org/MusicRelease" );
    
    /** <p>Format of this release (the type of recording media used, i.e. compact disc, 
     *  digital media, LP, etc.).</p>
     */
    public static final OntClass MusicReleaseFormatType = M_MODEL.createClass( "http://schema.org/MusicReleaseFormatType" );
    
    /** <p>A music store.</p> */
    public static final OntClass MusicStore = M_MODEL.createClass( "http://schema.org/MusicStore" );
    
    /** <p>A music venue.</p> */
    public static final OntClass MusicVenue = M_MODEL.createClass( "http://schema.org/MusicVenue" );
    
    /** <p>A music video file.</p> */
    public static final OntClass MusicVideoObject = M_MODEL.createClass( "http://schema.org/MusicVideoObject" );
    
    /** <p>Organization: Non-governmental Organization.</p> */
    public static final OntClass NGO = M_MODEL.createClass( "http://schema.org/NGO" );
    
    /** <p>NLNonprofitType: Non-profit organization type originating from the Netherlands.</p> */
    public static final OntClass NLNonprofitType = M_MODEL.createClass( "http://schema.org/NLNonprofitType" );
    
    /** <p>A nail salon.</p> */
    public static final OntClass NailSalon = M_MODEL.createClass( "http://schema.org/NailSalon" );
    
    /** <p>A common pathway for the electrochemical nerve impulses that are transmitted 
     *  along each of the axons.</p>
     */
    public static final OntClass Nerve = M_MODEL.createClass( "http://schema.org/Nerve" );
    
    /** <p>A NewsArticle is an article whose content reports news, or provides background 
     *  context and supporting materials for understanding the news. A more detailed 
     *  overview of [schema.org News markup](/docs/news.html) is also available.</p>
     */
    public static final OntClass NewsArticle = M_MODEL.createClass( "http://schema.org/NewsArticle" );
    
    /** <p>A News/Media organization such as a newspaper or TV station.</p> */
    public static final OntClass NewsMediaOrganization = M_MODEL.createClass( "http://schema.org/NewsMediaOrganization" );
    
    /** <p>A publication containing information about varied topics that are pertinent 
     *  to general information, a geographic area, or a specific subject matter (i.e. 
     *  business, culture, education). Often published daily.</p>
     */
    public static final OntClass Newspaper = M_MODEL.createClass( "http://schema.org/Newspaper" );
    
    /** <p>A nightclub or discotheque.</p> */
    public static final OntClass NightClub = M_MODEL.createClass( "http://schema.org/NightClub" );
    
    /** <p>NonprofitType enumerates several kinds of official non-profit types of which 
     *  a non-profit organization can be.</p>
     */
    public static final OntClass NonprofitType = M_MODEL.createClass( "http://schema.org/NonprofitType" );
    
    /** <p>A notary.</p> */
    public static final OntClass Notary = M_MODEL.createClass( "http://schema.org/Notary" );
    
    /** <p>A file containing a note, primarily for the author.</p> */
    public static final OntClass NoteDigitalDocument = M_MODEL.createClass( "http://schema.org/NoteDigitalDocument" );
    
    /** <p>Data type: Number.
     *  
     *  Usage guidelines:
     *  
     *  * Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' 
     *  (U+0039)) rather than superficially similar Unicode symbols.
     *  * Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal 
     *  point. Avoid using these symbols as a readability separator.</p>
     */
    public static final OntClass Number = M_MODEL.createClass( "http://schema.org/Number" );
    
    /** <p>Nutritional information about the recipe.</p> */
    public static final OntClass NutritionInformation = M_MODEL.createClass( "http://schema.org/NutritionInformation" );
    
    /** <p>Instances of the class [[Observation]] are used to specify observations about 
     *  an entity at a particular time. The principal properties of an [[Observation]] 
     *  are [[observationAbout]], [[measuredProperty]], [[statType]], [[value] and 
     *  [[observationDate]] and [[measuredProperty]]. Some but not all Observations 
     *  represent a [[QuantitativeValue]]. Quantitative observations can be about 
     *  a [[StatisticalVariable]], which is an abstract specification about which 
     *  we can make observations that are grounded at a particular location and time. 
     *  Observations can also encode a subset of simple RDF-like statements (its observationAbout, 
     *  a StatisticalVariable, defining the measuredPoperty; its observationAbout 
     *  property indicating the entity the statement is about, and [[value]] ) In 
     *  the context of a quantitative knowledge graph, typical properties could include 
     *  [[measuredProperty]], [[observationAbout]], [[observationDate]], [[value]], 
     *  [[unitCode]], [[unitText]], [[measurementMethod]].</p>
     */
    public static final OntClass Observation = M_MODEL.createClass( "http://schema.org/Observation" );
    
    /** <p>A profession, may involve prolonged training and/or a formal qualification.</p> */
    public static final OntClass Occupation = M_MODEL.createClass( "http://schema.org/Occupation" );
    
    /** <p>Indicates employment-related experience requirements, e.g. [[monthsOfExperience]].</p> */
    public static final OntClass OccupationalExperienceRequirements = M_MODEL.createClass( "http://schema.org/OccupationalExperienceRequirements" );
    
    /** <p>A treatment of people with physical, emotional, or social problems, using 
     *  purposeful activity to help them overcome or learn to deal with their problems.</p>
     */
    public static final OntClass OccupationalTherapy = M_MODEL.createClass( "http://schema.org/OccupationalTherapy" );
    
    /** <p>An ocean (for example, the Pacific).</p> */
    public static final OntClass OceanBodyOfWater = M_MODEL.createClass( "http://schema.org/OceanBodyOfWater" );
    
    /** <p>An offer to transfer some rights to an item or to provide a service — for 
     *  example, an offer to sell tickets to an event, to rent the DVD of a movie, 
     *  to stream a TV show over the internet, to repair a motorcycle, or to loan 
     *  a book.
     *  
     *  Note: As the [[businessFunction]] property, which identifies the form of offer 
     *  (e.g. sell, lease, repair, dispose), defaults to http://purl.org/goodrelations/v1#Sell; 
     *  an Offer without a defined businessFunction value can be assumed to be an 
     *  offer to sell.
     *  
     *  For [GTIN](http://www.gs1.org/barcodes/technical/idkeys/gtin)-related fields, 
     *  see [Check Digit calculator](http://www.gs1.org/barcodes/support/check_digit_calculator) 
     *  and [validation guide](http://www.gs1us.org/resources/standards/gtin-validation-guide) 
     *  from [GS1](http://www.gs1.org/).</p>
     */
    public static final OntClass Offer = M_MODEL.createClass( "http://schema.org/Offer" );
    
    /** <p>An OfferCatalog is an ItemList that contains related Offers and/or further 
     *  OfferCatalogs that are offeredBy the same provider.</p>
     */
    public static final OntClass OfferCatalog = M_MODEL.createClass( "http://schema.org/OfferCatalog" );
    
    /** <p>An [[OfferForLease]] in Schema.org represents an [[Offer]] to lease out something, 
     *  i.e. an [[Offer]] whose [[businessFunction]] is [lease out](http://purl.org/goodrelations/v1#LeaseOut.). 
     *  See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for background 
     *  on the underlying concepts.</p>
     */
    public static final OntClass OfferForLease = M_MODEL.createClass( "http://schema.org/OfferForLease" );
    
    /** <p>An [[OfferForPurchase]] in Schema.org represents an [[Offer]] to sell something, 
     *  i.e. an [[Offer]] whose [[businessFunction]] is [sell](http://purl.org/goodrelations/v1#Sell.). 
     *  See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for background 
     *  on the underlying concepts.</p>
     */
    public static final OntClass OfferForPurchase = M_MODEL.createClass( "http://schema.org/OfferForPurchase" );
    
    /** <p>A list of possible conditions for the item.</p> */
    public static final OntClass OfferItemCondition = M_MODEL.createClass( "http://schema.org/OfferItemCondition" );
    
    /** <p>OfferShippingDetails represents information about shipping destinations. Multiple 
     *  of these entities can be used to represent different shipping rates for different 
     *  destinations: One entity for Alaska/Hawaii. A different one for continental 
     *  US. A different one for all France. Multiple of these entities can be used 
     *  to represent different shipping costs and delivery times. Two entities that 
     *  are identical but differ in rate and time: E.g. Cheaper and slower: $5 in 
     *  5-7 days or Fast and expensive: $15 in 1-2 days.</p>
     */
    public static final OntClass OfferShippingDetails = M_MODEL.createClass( "http://schema.org/OfferShippingDetails" );
    
    /** <p>An office equipment store.</p> */
    public static final OntClass OfficeEquipmentStore = M_MODEL.createClass( "http://schema.org/OfficeEquipmentStore" );
    
    /** <p>A publication event, e.g. catch-up TV or radio podcast, during which a program 
     *  is available on-demand.</p>
     */
    public static final OntClass OnDemandEvent = M_MODEL.createClass( "http://schema.org/OnDemandEvent" );
    
    /** <p>A particular online business, either standalone or the online part of a broader 
     *  organization. Examples include an eCommerce site, an online travel booking 
     *  site, an online learning site, an online logistics and shipping provider, 
     *  an online (virtual) doctor, etc.</p>
     */
    public static final OntClass OnlineBusiness = M_MODEL.createClass( "http://schema.org/OnlineBusiness" );
    
    /** <p>An eCommerce site.</p> */
    public static final OntClass OnlineStore = M_MODEL.createClass( "http://schema.org/OnlineStore" );
    
    /** <p>A structured value providing information about the opening hours of a place 
     *  or a certain service inside a place.
     *  
     *   The place is __open__ if the [[opens]] property is specified, and __closed__ 
     *  otherwise.
     *  
     *  If the value for the [[closes]] property is less than the value for the [[opens]] 
     *  property then the hour range is assumed to span over the next day.</p>
     */
    public static final OntClass OpeningHoursSpecification = M_MODEL.createClass( "http://schema.org/OpeningHoursSpecification" );
    
    /** <p>An [[OpinionNewsArticle]] is a [[NewsArticle]] that primarily expresses opinions 
     *  rather than journalistic reporting of news and events. For example, a [[NewsArticle]] 
     *  consisting of a column or [[Blog]]/[[BlogPosting]] entry in the Opinions section 
     *  of a news publication.</p>
     */
    public static final OntClass OpinionNewsArticle = M_MODEL.createClass( "http://schema.org/OpinionNewsArticle" );
    
    /** <p>A store that sells reading glasses and similar devices for improving vision.</p> */
    public static final OntClass Optician = M_MODEL.createClass( "http://schema.org/Optician" );
    
    /** <p>An order is a confirmation of a transaction (a receipt), which can contain 
     *  multiple line items, each represented by an Offer that has been accepted by 
     *  the customer.</p>
     */
    public static final OntClass Order = M_MODEL.createClass( "http://schema.org/Order" );
    
    /** <p>An agent orders an object/product/service to be delivered/sent.</p> */
    public static final OntClass OrderAction = M_MODEL.createClass( "http://schema.org/OrderAction" );
    
    /** <p>An order item is a line of an order. It includes the quantity and shipping 
     *  details of a bought offer.</p>
     */
    public static final OntClass OrderItem = M_MODEL.createClass( "http://schema.org/OrderItem" );
    
    /** <p>Enumerated status values for Order.</p> */
    public static final OntClass OrderStatus = M_MODEL.createClass( "http://schema.org/OrderStatus" );
    
    /** <p>An organization such as a school, NGO, corporation, club, etc.</p> */
    public static final OntClass Organization = M_MODEL.createClass( "http://schema.org/Organization" );
    
    /** <p>A subclass of Role used to describe roles within organizations.</p> */
    public static final OntClass OrganizationRole = M_MODEL.createClass( "http://schema.org/OrganizationRole" );
    
    /** <p>The act of manipulating/administering/supervising/controlling one or more 
     *  objects.</p>
     */
    public static final OntClass OrganizeAction = M_MODEL.createClass( "http://schema.org/OrganizeAction" );
    
    /** <p>An outlet store.</p> */
    public static final OntClass OutletStore = M_MODEL.createClass( "http://schema.org/OutletStore" );
    
    /** <p>A structured value providing information about when a certain organization 
     *  or person owned a certain product.</p>
     */
    public static final OntClass OwnershipInfo = M_MODEL.createClass( "http://schema.org/OwnershipInfo" );
    
    /** <p>The act of producing a painting, typically with paint and canvas as instruments.</p> */
    public static final OntClass PaintAction = M_MODEL.createClass( "http://schema.org/PaintAction" );
    
    /** <p>A painting.</p> */
    public static final OntClass Painting = M_MODEL.createClass( "http://schema.org/Painting" );
    
    /** <p>A medical procedure intended primarily for palliative purposes, aimed at relieving 
     *  the symptoms of an underlying health condition.</p>
     */
    public static final OntClass PalliativeProcedure = M_MODEL.createClass( "http://schema.org/PalliativeProcedure" );
    
    /** <p>The delivery of a parcel either via the postal service or a commercial service.</p> */
    public static final OntClass ParcelDelivery = M_MODEL.createClass( "http://schema.org/ParcelDelivery" );
    
    /** <p>A set of characteristics describing parents, who can be interested in viewing 
     *  some content.</p>
     */
    public static final OntClass ParentAudience = M_MODEL.createClass( "http://schema.org/ParentAudience" );
    
    /** <p>A park.</p> */
    public static final OntClass Park = M_MODEL.createClass( "http://schema.org/Park" );
    
    /** <p>A parking lot or other parking facility.</p> */
    public static final OntClass ParkingFacility = M_MODEL.createClass( "http://schema.org/ParkingFacility" );
    
    /** <p>A medical test performed by a laboratory that typically involves examination 
     *  of a tissue sample by a pathologist.</p>
     */
    public static final OntClass PathologyTest = M_MODEL.createClass( "http://schema.org/PathologyTest" );
    
    /** <p>A patient is any person recipient of health care services.</p> */
    public static final OntClass Patient = M_MODEL.createClass( "http://schema.org/Patient" );
    
    /** <p>A shop that will buy, or lend money against the security of, personal possessions.</p> */
    public static final OntClass PawnShop = M_MODEL.createClass( "http://schema.org/PawnShop" );
    
    /** <p>An agent pays a price to a participant.</p> */
    public static final OntClass PayAction = M_MODEL.createClass( "http://schema.org/PayAction" );
    
    /** <p>A payment method using a credit, debit, store or other card to associate the 
     *  payment with an account.</p>
     */
    public static final OntClass PaymentCard = M_MODEL.createClass( "http://schema.org/PaymentCard" );
    
    /** <p>The costs of settling the payment using a particular payment method.</p> */
    public static final OntClass PaymentChargeSpecification = M_MODEL.createClass( "http://schema.org/PaymentChargeSpecification" );
    
    /** <p>A payment method is a standardized procedure for transferring the monetary 
     *  amount for a purchase. Payment methods are characterized by the legal and 
     *  technical structures used, and by the organization or group carrying out the 
     *  transaction. The following legacy values should be accepted: 
     *  
     *  * http://purl.org/goodrelations/v1#ByBankTransferInAdvance
     *  * http://purl.org/goodrelations/v1#ByInvoice
     *  * http://purl.org/goodrelations/v1#Cash
     *  * http://purl.org/goodrelations/v1#CheckInAdvance
     *  * http://purl.org/goodrelations/v1#COD
     *  * http://purl.org/goodrelations/v1#DirectDebit
     *  * http://purl.org/goodrelations/v1#GoogleCheckout
     *  * http://purl.org/goodrelations/v1#PayPal
     *  * http://purl.org/goodrelations/v1#PaySwarm
     *  
     *  Structured values are recommended for newer payment methods.</p>
     */
    public static final OntClass PaymentMethod = M_MODEL.createClass( "http://schema.org/PaymentMethod" );
    
    /** <p>The type of payment method, only for generic payment types, specific forms 
     *  of payments, like card payment should be expressed using subclasses of PaymentMethod.</p>
     */
    public static final OntClass PaymentMethodType = M_MODEL.createClass( "http://schema.org/PaymentMethodType" );
    
    /** <p>A Service to transfer funds from a person or organization to a beneficiary 
     *  person or organization.</p>
     */
    public static final OntClass PaymentService = M_MODEL.createClass( "http://schema.org/PaymentService" );
    
    /** <p>A specific payment status. For example, PaymentDue, PaymentComplete, etc.</p> */
    public static final OntClass PaymentStatusType = M_MODEL.createClass( "http://schema.org/PaymentStatusType" );
    
    /** <p>A set of characteristics belonging to people, e.g. who compose an item's target 
     *  audience.</p>
     */
    public static final OntClass PeopleAudience = M_MODEL.createClass( "http://schema.org/PeopleAudience" );
    
    /** <p>The act of participating in performance arts.</p> */
    public static final OntClass PerformAction = M_MODEL.createClass( "http://schema.org/PerformAction" );
    
    /** <p>A PerformanceRole is a Role that some entity places with regard to a theatrical 
     *  performance, e.g. in a Movie, TVSeries etc.</p>
     */
    public static final OntClass PerformanceRole = M_MODEL.createClass( "http://schema.org/PerformanceRole" );
    
    /** <p>A theater or other performing art center.</p> */
    public static final OntClass PerformingArtsTheater = M_MODEL.createClass( "http://schema.org/PerformingArtsTheater" );
    
    /** <p>A performance group, such as a band, an orchestra, or a circus.</p> */
    public static final OntClass PerformingGroup = M_MODEL.createClass( "http://schema.org/PerformingGroup" );
    
    /** <p>A publication in any medium issued in successive parts bearing numerical or 
     *  chronological designations and intended to continue indefinitely, such as 
     *  a magazine, scholarly journal, or newspaper.
     *  
     *  See also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).</p>
     */
    public static final OntClass Periodical_CLASS = M_MODEL.createClass( "http://schema.org/Periodical" );
    
    /** <p>A permit issued by an organization, e.g. a parking pass.</p> */
    public static final OntClass Permit = M_MODEL.createClass( "http://schema.org/Permit" );
    
    /** <p>A person (alive, dead, undead, or fictional).</p> */
    public static final OntClass Person = M_MODEL.createClass( "http://schema.org/Person" );
    
    /** <p>A pet store.</p> */
    public static final OntClass PetStore = M_MODEL.createClass( "http://schema.org/PetStore" );
    
    /** <p>A pharmacy or drugstore.</p> */
    public static final OntClass Pharmacy = M_MODEL.createClass( "http://schema.org/Pharmacy" );
    
    /** <p>A photograph.</p> */
    public static final OntClass Photograph = M_MODEL.createClass( "http://schema.org/Photograph" );
    
    /** <p>The act of capturing still images of objects using a camera.</p> */
    public static final OntClass PhotographAction = M_MODEL.createClass( "http://schema.org/PhotographAction" );
    
    /** <p>Any bodily activity that enhances or maintains physical fitness and overall 
     *  health and wellness. Includes activity that is part of daily living and routine, 
     *  structured exercise, and exercise prescribed as part of a medical treatment 
     *  or recovery plan.</p>
     */
    public static final OntClass PhysicalActivity = M_MODEL.createClass( "http://schema.org/PhysicalActivity" );
    
    /** <p>Categories of physical activity, organized by physiologic classification.</p> */
    public static final OntClass PhysicalActivityCategory = M_MODEL.createClass( "http://schema.org/PhysicalActivityCategory" );
    
    /** <p>A type of physical examination of a patient performed by a physician.</p> */
    public static final OntClass PhysicalExam = M_MODEL.createClass( "http://schema.org/PhysicalExam" );
    
    /** <p>A process of progressive physical care and rehabilitation aimed at improving 
     *  a health condition.</p>
     */
    public static final OntClass PhysicalTherapy = M_MODEL.createClass( "http://schema.org/PhysicalTherapy" );
    
    /** <p>An individual physician or a physician's office considered as a [[MedicalOrganization]].</p> */
    public static final OntClass Physician = M_MODEL.createClass( "http://schema.org/Physician" );
    
    /** <p>A doctor's office or clinic.</p> */
    public static final OntClass PhysiciansOffice = M_MODEL.createClass( "http://schema.org/PhysiciansOffice" );
    
    /** <p>Entities that have a somewhat fixed, physical extension.</p> */
    public static final OntClass Place = M_MODEL.createClass( "http://schema.org/Place" );
    
    /** <p>Place of worship, such as a church, synagogue, or mosque.</p> */
    public static final OntClass PlaceOfWorship = M_MODEL.createClass( "http://schema.org/PlaceOfWorship" );
    
    /** <p>The act of planning the execution of an event/task/action/reservation/plan 
     *  to a future date.</p>
     */
    public static final OntClass PlanAction = M_MODEL.createClass( "http://schema.org/PlanAction" );
    
    /** <p>A play is a form of literature, usually consisting of dialogue between characters, 
     *  intended for theatrical performance rather than just reading. Note: A performance 
     *  of a Play would be a [[TheaterEvent]] or [[BroadcastEvent]] - the *Play* being 
     *  the [[workPerformed]].</p>
     */
    public static final OntClass Play = M_MODEL.createClass( "http://schema.org/Play" );
    
    /** <p>The act of playing/exercising/training/performing for enjoyment, leisure, 
     *  recreation, competition or exercise.
     *  
     *  Related actions:
     *  
     *  * [[ListenAction]]: Unlike ListenAction (which is under ConsumeAction), PlayAction 
     *  refers to performing for an audience or at an event, rather than consuming 
     *  music.
     *  * [[WatchAction]]: Unlike WatchAction (which is under ConsumeAction), PlayAction 
     *  refers to showing/displaying for an audience or at an event, rather than consuming 
     *  visual content.</p>
     */
    public static final OntClass PlayAction = M_MODEL.createClass( "http://schema.org/PlayAction" );
    
    /** <p>The act of playing a video game.</p> */
    public static final OntClass PlayGameAction = M_MODEL.createClass( "http://schema.org/PlayGameAction" );
    
    /** <p>A playground.</p> */
    public static final OntClass Playground = M_MODEL.createClass( "http://schema.org/Playground" );
    
    /** <p>A plumbing service.</p> */
    public static final OntClass Plumber = M_MODEL.createClass( "http://schema.org/Plumber" );
    
    /** <p>A single episode of a podcast series.</p> */
    public static final OntClass PodcastEpisode = M_MODEL.createClass( "http://schema.org/PodcastEpisode" );
    
    /** <p>A single season of a podcast. Many podcasts do not break down into separate 
     *  seasons. In that case, PodcastSeries should be used.</p>
     */
    public static final OntClass PodcastSeason = M_MODEL.createClass( "http://schema.org/PodcastSeason" );
    
    /** <p>A podcast is an episodic series of digital audio or video files which a user 
     *  can download and listen to.</p>
     */
    public static final OntClass PodcastSeries = M_MODEL.createClass( "http://schema.org/PodcastSeries" );
    
    /** <p>A police station.</p> */
    public static final OntClass PoliceStation = M_MODEL.createClass( "http://schema.org/PoliceStation" );
    
    /** <p>Organization: Political Party.</p> */
    public static final OntClass PoliticalParty = M_MODEL.createClass( "http://schema.org/PoliticalParty" );
    
    /** <p>A pond.</p> */
    public static final OntClass Pond = M_MODEL.createClass( "http://schema.org/Pond" );
    
    /** <p>A post office.</p> */
    public static final OntClass PostOffice = M_MODEL.createClass( "http://schema.org/PostOffice" );
    
    /** <p>The mailing address.</p> */
    public static final OntClass PostalAddress = M_MODEL.createClass( "http://schema.org/PostalAddress" );
    
    /** <p>Indicates a range of postal codes, usually defined as the set of valid codes 
     *  between [[postalCodeBegin]] and [[postalCodeEnd]], inclusively.</p>
     */
    public static final OntClass PostalCodeRangeSpecification = M_MODEL.createClass( "http://schema.org/PostalCodeRangeSpecification" );
    
    /** <p>A large, usually printed placard, bill, or announcement, often illustrated, 
     *  that is posted to advertise or publicize something.</p>
     */
    public static final OntClass Poster = M_MODEL.createClass( "http://schema.org/Poster" );
    
    /** <p>An agent orders a (not yet released) object/product/service to be delivered/sent.</p> */
    public static final OntClass PreOrderAction = M_MODEL.createClass( "http://schema.org/PreOrderAction" );
    
    /** <p>The act of inserting at the beginning if an ordered collection.</p> */
    public static final OntClass PrependAction = M_MODEL.createClass( "http://schema.org/PrependAction" );
    
    /** <p>A preschool.</p> */
    public static final OntClass Preschool = M_MODEL.createClass( "http://schema.org/Preschool" );
    
    /** <p>A file containing slides or used for a presentation.</p> */
    public static final OntClass PresentationDigitalDocument = M_MODEL.createClass( "http://schema.org/PresentationDigitalDocument" );
    
    /** <p>An indication for preventing an underlying condition, symptom, etc.</p> */
    public static final OntClass PreventionIndication = M_MODEL.createClass( "http://schema.org/PreventionIndication" );
    
    /** <p>Enumerates different price components that together make up the total price 
     *  for an offered product.</p>
     */
    public static final OntClass PriceComponentTypeEnumeration = M_MODEL.createClass( "http://schema.org/PriceComponentTypeEnumeration" );
    
    /** <p>A structured value representing a price or price range. Typically, only the 
     *  subclasses of this type are used for markup. It is recommended to use [[MonetaryAmount]] 
     *  to describe independent amounts of money such as a salary, credit card limits, 
     *  etc.</p>
     */
    public static final OntClass PriceSpecification = M_MODEL.createClass( "http://schema.org/PriceSpecification" );
    
    /** <p>Enumerates different price types, for example list price, invoice price, and 
     *  sale price.</p>
     */
    public static final OntClass PriceTypeEnumeration = M_MODEL.createClass( "http://schema.org/PriceTypeEnumeration" );
    
    /** <p>Any offered product or service. For example: a pair of shoes; a concert ticket; 
     *  the rental of a car; a haircut; or an episode of a TV show streamed online.</p>
     */
    public static final OntClass Product = M_MODEL.createClass( "http://schema.org/Product" );
    
    /** <p>A set of products (either [[ProductGroup]]s or specific variants) that are 
     *  listed together e.g. in an [[Offer]].</p>
     */
    public static final OntClass ProductCollection = M_MODEL.createClass( "http://schema.org/ProductCollection" );
    
    /** <p>A ProductGroup represents a group of [[Product]]s that vary only in certain 
     *  well-described ways, such as by [[size]], [[color]], [[material]] etc. While 
     *  a ProductGroup itself is not directly offered for sale, the various varying 
     *  products that it represents can be. The ProductGroup serves as a prototype 
     *  or template, standing in for all of the products who have an [[isVariantOf]] 
     *  relationship to it. As such, properties (including additional types) can be 
     *  applied to the ProductGroup to represent characteristics shared by each of 
     *  the (possibly very many) variants. Properties that reference a ProductGroup 
     *  are not included in this mechanism; neither are the following specific properties 
     *  [[variesBy]], [[hasVariant]], [[url]].</p>
     */
    public static final OntClass ProductGroup = M_MODEL.createClass( "http://schema.org/ProductGroup" );
    
    /** <p>A datasheet or vendor specification of a product (in the sense of a prototypical 
     *  description).</p>
     */
    public static final OntClass ProductModel = M_MODEL.createClass( "http://schema.org/ProductModel" );
    
    /** <p>Original definition: "provider of professional services."
     *  
     *  The general [[ProfessionalService]] type for local businesses was deprecated 
     *  due to confusion with [[Service]]. For reference, the types that it included 
     *  were: [[Dentist]], [[AccountingService]], [[Attorney]], [[Notary]], as well 
     *  as types for several kinds of [[HomeAndConstructionBusiness]]: [[Electrician]], 
     *  [[GeneralContractor]], [[HousePainter]], [[Locksmith]], [[Plumber]], [[RoofingContractor]]. 
     *  [[LegalService]] was introduced as a more inclusive supertype of [[Attorney]].</p>
     */
    public static final OntClass ProfessionalService = M_MODEL.createClass( "http://schema.org/ProfessionalService" );
    
    /** <p>Web page type: Profile page.</p> */
    public static final OntClass ProfilePage = M_MODEL.createClass( "http://schema.org/ProfilePage" );
    
    /** <p>Used to describe membership in a loyalty programs (e.g. "StarAliance"), traveler 
     *  clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.</p>
     */
    public static final OntClass ProgramMembership = M_MODEL.createClass( "http://schema.org/ProgramMembership" );
    
    /** <p>An enterprise (potentially individual but typically collaborative), planned 
     *  to achieve a particular aim. Use properties from [[Organization]], [[subOrganization]]/[[parentOrganization]] 
     *  to indicate project sub-structures.</p>
     */
    public static final OntClass Project = M_MODEL.createClass( "http://schema.org/Project" );
    
    /** <p>Data type: PronounceableText.</p> */
    public static final OntClass PronounceableText = M_MODEL.createClass( "http://schema.org/PronounceableText" );
    
    /** <p>A property, used to indicate attributes and relationships of some Thing; equivalent 
     *  to rdf:Property.</p>
     */
    public static final OntClass Property = M_MODEL.createClass( "http://schema.org/Property" );
    
    /** <p>A property-value pair, e.g. representing a feature of a product or place. 
     *  Use the 'name' property for the name of the property. If there is an additional 
     *  human-readable version of the value, put that into the 'description' property.
     *  
     *   Always use specific schema.org properties when a) they exist and b) you can 
     *  populate them. Using PropertyValue as a substitute will typically not trigger 
     *  the same effect as using the original, specific property.</p>
     */
    public static final OntClass PropertyValue = M_MODEL.createClass( "http://schema.org/PropertyValue" );
    
    /** <p>A Property value specification.</p> */
    public static final OntClass PropertyValueSpecification = M_MODEL.createClass( "http://schema.org/PropertyValueSpecification" );
    
    /** <p>Protein is here used in its widest possible definition, as classes of amino 
     *  acid based molecules. Amyloid-beta Protein in human (UniProt P05067), eukaryota 
     *  (e.g. an OrthoDB group) or even a single molecule that one can point to are 
     *  all of type :Protein. A protein can thus be a subclass of another protein, 
     *  e.g. :Protein as a UniProt record can have multiple isoforms inside it which 
     *  would also be :Protein. They can be imagined, synthetic, hypothetical or naturally 
     *  occurring.</p>
     */
    public static final OntClass Protein = M_MODEL.createClass( "http://schema.org/Protein" );
    
    /** <p>A process of care relying upon counseling, dialogue and communication aimed 
     *  at improving a mental health condition without use of drugs.</p>
     */
    public static final OntClass PsychologicalTreatment = M_MODEL.createClass( "http://schema.org/PsychologicalTreatment" );
    
    /** <p>A public swimming pool.</p> */
    public static final OntClass PublicSwimmingPool = M_MODEL.createClass( "http://schema.org/PublicSwimmingPool" );
    
    /** <p>A public toilet is a room or small building containing one or more toilets 
     *  (and possibly also urinals) which is available for use by the general public, 
     *  or by customers or employees of certain businesses.</p>
     */
    public static final OntClass PublicToilet = M_MODEL.createClass( "http://schema.org/PublicToilet" );
    
    /** <p>A PublicationEvent corresponds indifferently to the event of publication for 
     *  a CreativeWork of any type, e.g. a broadcast event, an on-demand event, a 
     *  book/journal publication via a variety of delivery media.</p>
     */
    public static final OntClass PublicationEvent = M_MODEL.createClass( "http://schema.org/PublicationEvent" );
    
    /** <p>A part of a successively published publication such as a periodical or publication 
     *  volume, often numbered, usually containing a grouping of works such as articles.
     *  
     *  See also [blog post](https://blog-schema.org/2014/09/02/schema-org-support-for-bibliographic-relationships-and-periodicals/).</p>
     */
    public static final OntClass PublicationIssue = M_MODEL.createClass( "http://schema.org/PublicationIssue" );
    
    /** <p>A part of a successively published publication such as a periodical or multi-volume 
     *  work, often numbered. It may represent a time span, such as a year.
     *  
     *  See also [blog post](https://blog-schema.org/2014/09/02/schema-org-support-for-bibliographic-relationships-and-periodicals/).</p>
     */
    public static final OntClass PublicationVolume = M_MODEL.createClass( "http://schema.org/PublicationVolume" );
    
    /** <p>Enumerates a purchase type for an item.</p> */
    public static final OntClass PurchaseType = M_MODEL.createClass( "http://schema.org/PurchaseType" );
    
    /** <p>A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. 
     *  in a question answering site or documenting Frequently Asked Questions (FAQs).</p>
     */
    public static final OntClass QAPage = M_MODEL.createClass( "http://schema.org/QAPage" );
    
    /** <p>A predefined value for a product characteristic, e.g. the power cord plug 
     *  type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.</p>
     */
    public static final OntClass QualitativeValue = M_MODEL.createClass( "http://schema.org/QualitativeValue" );
    
    /** <p>A point value or interval for product characteristics and other purposes.</p> */
    public static final OntClass QuantitativeValue = M_MODEL.createClass( "http://schema.org/QuantitativeValue" );
    
    /** <p>A statistical distribution of values.</p> */
    public static final OntClass QuantitativeValueDistribution = M_MODEL.createClass( "http://schema.org/QuantitativeValueDistribution" );
    
    /** <p>Quantities such as distance, time, mass, weight, etc. Particular instances 
     *  of say Mass are entities like '3 kg' or '4 milligrams'.</p>
     */
    public static final OntClass Quantity = M_MODEL.createClass( "http://schema.org/Quantity" );
    
    /** <p>A specific question - e.g. from a user seeking answers online, or collected 
     *  in a Frequently Asked Questions (FAQ) document.</p>
     */
    public static final OntClass Question = M_MODEL.createClass( "http://schema.org/Question" );
    
    /** <p>Quiz: A test of knowledge, skills and abilities.</p> */
    public static final OntClass Quiz = M_MODEL.createClass( "http://schema.org/Quiz" );
    
    /** <p>A quotation. Often but not necessarily from some written work, attributable 
     *  to a real world author and - if associated with a fictional character - to 
     *  any fictional Person. Use [[isBasedOn]] to link to source/origin. The [[recordedIn]] 
     *  property can be used to reference a Quotation from an [[Event]].</p>
     */
    public static final OntClass Quotation = M_MODEL.createClass( "http://schema.org/Quotation" );
    
    /** <p>An agent quotes/estimates/appraises an object/product/service with a price 
     *  at a location/store.</p>
     */
    public static final OntClass QuoteAction = M_MODEL.createClass( "http://schema.org/QuoteAction" );
    
    /** <p>A place offering space for "Recreational Vehicles", Caravans, mobile homes 
     *  and the like.</p>
     */
    public static final OntClass RVPark = M_MODEL.createClass( "http://schema.org/RVPark" );
    
    /** <p>A process of care using radiation aimed at improving a health condition.</p> */
    public static final OntClass RadiationTherapy = M_MODEL.createClass( "http://schema.org/RadiationTherapy" );
    
    /** <p>A delivery service through which radio content is provided via broadcast over 
     *  the air or online.</p>
     */
    public static final OntClass RadioBroadcastService = M_MODEL.createClass( "http://schema.org/RadioBroadcastService" );
    
    /** <p>A unique instance of a radio BroadcastService on a CableOrSatelliteService 
     *  lineup.</p>
     */
    public static final OntClass RadioChannel = M_MODEL.createClass( "http://schema.org/RadioChannel" );
    
    /** <p>A short radio program or a segment/part of a radio program.</p> */
    public static final OntClass RadioClip = M_MODEL.createClass( "http://schema.org/RadioClip" );
    
    /** <p>A radio episode which can be part of a series or season.</p> */
    public static final OntClass RadioEpisode = M_MODEL.createClass( "http://schema.org/RadioEpisode" );
    
    /** <p>Season dedicated to radio broadcast and associated online delivery.</p> */
    public static final OntClass RadioSeason = M_MODEL.createClass( "http://schema.org/RadioSeason" );
    
    /** <p>CreativeWorkSeries dedicated to radio broadcast and associated online delivery.</p> */
    public static final OntClass RadioSeries = M_MODEL.createClass( "http://schema.org/RadioSeries" );
    
    /** <p>A radio station.</p> */
    public static final OntClass RadioStation = M_MODEL.createClass( "http://schema.org/RadioStation" );
    
    /** <p>A rating is an evaluation on a numeric scale, such as 1 to 5 stars.</p> */
    public static final OntClass Rating = M_MODEL.createClass( "http://schema.org/Rating" );
    
    /** <p>The act of responding instinctively and emotionally to an object, expressing 
     *  a sentiment.</p>
     */
    public static final OntClass ReactAction = M_MODEL.createClass( "http://schema.org/ReactAction" );
    
    /** <p>The act of consuming written content.</p> */
    public static final OntClass ReadAction = M_MODEL.createClass( "http://schema.org/ReadAction" );
    
    /** <p>A real-estate agent.</p> */
    public static final OntClass RealEstateAgent = M_MODEL.createClass( "http://schema.org/RealEstateAgent" );
    
    /** <p>A [[RealEstateListing]] is a listing that describes one or more real-estate 
     *  [[Offer]]s (whose [[businessFunction]] is typically to lease out, or to sell). 
     *  The [[RealEstateListing]] type itself represents the overall listing, as manifested 
     *  in some [[WebPage]].</p>
     */
    public static final OntClass RealEstateListing = M_MODEL.createClass( "http://schema.org/RealEstateListing" );
    
    /** <p>The act of physically/electronically taking delivery of an object that has 
     *  been transferred from an origin to a destination. Reciprocal of SendAction.
     *  
     *  Related actions:
     *  
     *  * [[SendAction]]: The reciprocal of ReceiveAction.
     *  * [[TakeAction]]: Unlike TakeAction, ReceiveAction does not imply that the 
     *  ownership has been transferred (e.g. I can receive a package, but it does 
     *  not mean the package is now mine).</p>
     */
    public static final OntClass ReceiveAction = M_MODEL.createClass( "http://schema.org/ReceiveAction" );
    
    /** <p>A recipe. For dietary restrictions covered by the recipe, a few common restrictions 
     *  are enumerated via [[suitableForDiet]]. The [[keywords]] property can also 
     *  be used to add more detail.</p>
     */
    public static final OntClass Recipe = M_MODEL.createClass( "http://schema.org/Recipe" );
    
    /** <p>[[Recommendation]] is a type of [[Review]] that suggests or proposes something 
     *  as the best option or best course of action. Recommendations may be for products 
     *  or services, or other concrete things, as in the case of a ranked list or 
     *  product guide. A [[Guide]] may list multiple recommendations for different 
     *  categories. For example, in a [[Guide]] about which TVs to buy, the author 
     *  may have several [[Recommendation]]s.</p>
     */
    public static final OntClass Recommendation = M_MODEL.createClass( "http://schema.org/Recommendation" );
    
    /** <p>A recommended dosing schedule for a drug or supplement as prescribed or recommended 
     *  by an authority or by the drug/supplement's manufacturer. Capture the recommending 
     *  authority in the recognizingAuthority property of MedicalEntity.</p>
     */
    public static final OntClass RecommendedDoseSchedule = M_MODEL.createClass( "http://schema.org/RecommendedDoseSchedule" );
    
    /** <p>A recycling center.</p> */
    public static final OntClass RecyclingCenter = M_MODEL.createClass( "http://schema.org/RecyclingCenter" );
    
    /** <p>Enumerates several kinds of product return refund types.</p> */
    public static final OntClass RefundTypeEnumeration = M_MODEL.createClass( "http://schema.org/RefundTypeEnumeration" );
    
    /** <p>The act of registering to be a user of a service, product or web page.
     *  
     *  Related actions:
     *  
     *  * [[JoinAction]]: Unlike JoinAction, RegisterAction implies you are registering 
     *  to be a user of a service, *not* a group/team of people.
     *  * [[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that 
     *  the agent is expecting to poll for updates from the object.
     *  * [[SubscribeAction]]: Unlike SubscribeAction, RegisterAction doesn't imply 
     *  that the agent is expecting updates from the object.</p>
     */
    public static final OntClass RegisterAction = M_MODEL.createClass( "http://schema.org/RegisterAction" );
    
    /** <p>The act of rejecting to/adopting an object.
     *  
     *  Related actions:
     *  
     *  * [[AcceptAction]]: The antonym of RejectAction.</p>
     */
    public static final OntClass RejectAction = M_MODEL.createClass( "http://schema.org/RejectAction" );
    
    /** <p>The act of giving money in return for temporary use, but not ownership, of 
     *  an object such as a vehicle or property. For example, an agent rents a property 
     *  from a landlord in exchange for a periodic payment.</p>
     */
    public static final OntClass RentAction = M_MODEL.createClass( "http://schema.org/RentAction" );
    
    /** <p>A reservation for a rental car.
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations.</p>
     */
    public static final OntClass RentalCarReservation = M_MODEL.createClass( "http://schema.org/RentalCarReservation" );
    
    /** <p>A structured value representing repayment.</p> */
    public static final OntClass RepaymentSpecification = M_MODEL.createClass( "http://schema.org/RepaymentSpecification" );
    
    /** <p>The act of editing a recipient by replacing an old object with a new object.</p> */
    public static final OntClass ReplaceAction = M_MODEL.createClass( "http://schema.org/ReplaceAction" );
    
    /** <p>The act of responding to a question/message asked/sent by the object. Related 
     *  to [[AskAction]].
     *  
     *  Related actions:
     *  
     *  * [[AskAction]]: Appears generally as an origin of a ReplyAction.</p>
     */
    public static final OntClass ReplyAction = M_MODEL.createClass( "http://schema.org/ReplyAction" );
    
    /** <p>A Report generated by governmental or non-governmental organization.</p> */
    public static final OntClass Report = M_MODEL.createClass( "http://schema.org/Report" );
    
    /** <p>The [[ReportageNewsArticle]] type is a subtype of [[NewsArticle]] representing 
     *  news articles which are the result of journalistic news reporting conventions. 
     *  In practice many news publishers produce a wide variety of article types, 
     *  many of which might be considered a [[NewsArticle]] but not a [[ReportageNewsArticle]]. 
     *  For example, opinion pieces, reviews, analysis, sponsored or satirical articles, 
     *  or articles that combine several of these elements. The [[ReportageNewsArticle]] 
     *  type is based on a stricter ideal for "news" as a work of journalism, with 
     *  articles based on factual information either observed or verified by the author, 
     *  or reported and verified from knowledgeable sources. This often includes perspectives 
     *  from multiple viewpoints on a particular issue (distinguishing news reports 
     *  from public relations or propaganda). News reports in the [[ReportageNewsArticle]] 
     *  sense de-emphasize the opinion of the author, with commentary and value judgements 
     *  typically expressed elsewhere. A [[ReportageNewsArticle]] which goes deeper 
     *  into analysis can also be marked with an additional type of [[AnalysisNewsArticle]].</p>
     */
    public static final OntClass ReportageNewsArticle = M_MODEL.createClass( "http://schema.org/ReportageNewsArticle" );
    
    /** <p>A patient-reported or observed dosing schedule for a drug or supplement.</p> */
    public static final OntClass ReportedDoseSchedule = M_MODEL.createClass( "http://schema.org/ReportedDoseSchedule" );
    
    /** <p>A Research Organization (e.g. scientific institute, research company).</p> */
    public static final OntClass ResearchOrganization = M_MODEL.createClass( "http://schema.org/ResearchOrganization" );
    
    /** <p>A Research project.</p> */
    public static final OntClass ResearchProject = M_MODEL.createClass( "http://schema.org/ResearchProject" );
    
    /** <p>Researchers.</p> */
    public static final OntClass Researcher = M_MODEL.createClass( "http://schema.org/Researcher" );
    
    /** <p>Describes a reservation for travel, dining or an event. Some reservations 
     *  require tickets. 
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations. For offers 
     *  of tickets, restaurant reservations, flights, or rental cars, use [[Offer]].</p>
     */
    public static final OntClass Reservation = M_MODEL.createClass( "http://schema.org/Reservation" );
    
    /** <p>A group of multiple reservations with common values for all sub-reservations.</p> */
    public static final OntClass ReservationPackage = M_MODEL.createClass( "http://schema.org/ReservationPackage" );
    
    /** <p>Enumerated status values for Reservation.</p> */
    public static final OntClass ReservationStatusType = M_MODEL.createClass( "http://schema.org/ReservationStatusType" );
    
    /** <p>Reserving a concrete object.
     *  
     *  Related actions:
     *  
     *  * [[ScheduleAction]]: Unlike ScheduleAction, ReserveAction reserves concrete 
     *  objects (e.g. a table, a hotel) towards a time slot / spatial allocation.</p>
     */
    public static final OntClass ReserveAction = M_MODEL.createClass( "http://schema.org/ReserveAction" );
    
    /** <p>A reservoir of water, typically an artificially created lake, like the Lake 
     *  Kariba reservoir.</p>
     */
    public static final OntClass Reservoir = M_MODEL.createClass( "http://schema.org/Reservoir" );
    
    /** <p>The place where a person lives.</p> */
    public static final OntClass Residence = M_MODEL.createClass( "http://schema.org/Residence" );
    
    /** <p>A resort is a place used for relaxation or recreation, attracting visitors 
     *  for holidays or vacations. Resorts are places, towns or sometimes commercial 
     *  establishments operated by a single company (source: Wikipedia, the free encyclopedia, 
     *  see &lt;a href="http://en.wikipedia.org/wiki/Resort"&gt;http://en.wikipedia.org/wiki/Resort&lt;/a&gt;). 
     *  &lt;br /&gt;&lt;br /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated 
     *  document on the use of schema.org for marking up hotels and other forms of 
     *  accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass Resort = M_MODEL.createClass( "http://schema.org/Resort" );
    
    /** <p>A restaurant.</p> */
    public static final OntClass Restaurant = M_MODEL.createClass( "http://schema.org/Restaurant" );
    
    /** <p>A diet restricted to certain foods or preparations for cultural, religious, 
     *  health or lifestyle reasons.</p>
     */
    public static final OntClass RestrictedDiet = M_MODEL.createClass( "http://schema.org/RestrictedDiet" );
    
    /** <p>The act of resuming a device or application which was formerly paused (e.g. 
     *  resume music playback or resume a timer).</p>
     */
    public static final OntClass ResumeAction = M_MODEL.createClass( "http://schema.org/ResumeAction" );
    
    /** <p>The act of returning to the origin that which was previously received (concrete 
     *  objects) or taken (ownership).</p>
     */
    public static final OntClass ReturnAction = M_MODEL.createClass( "http://schema.org/ReturnAction" );
    
    /** <p>Enumerates several kinds of policies for product return fees.</p> */
    public static final OntClass ReturnFeesEnumeration = M_MODEL.createClass( "http://schema.org/ReturnFeesEnumeration" );
    
    /** <p>Enumerates several types of return labels for product returns.</p> */
    public static final OntClass ReturnLabelSourceEnumeration = M_MODEL.createClass( "http://schema.org/ReturnLabelSourceEnumeration" );
    
    /** <p>Enumerates several types of product return methods.</p> */
    public static final OntClass ReturnMethodEnumeration = M_MODEL.createClass( "http://schema.org/ReturnMethodEnumeration" );
    
    /** <p>A review of an item - for example, of a restaurant, movie, or store.</p> */
    public static final OntClass Review = M_MODEL.createClass( "http://schema.org/Review" );
    
    /** <p>The act of producing a balanced opinion about the object for an audience. 
     *  An agent reviews an object with participants resulting in a review.</p>
     */
    public static final OntClass ReviewAction = M_MODEL.createClass( "http://schema.org/ReviewAction" );
    
    /** <p>A [[NewsArticle]] and [[CriticReview]] providing a professional critic's assessment 
     *  of a service, product, performance, or artistic or literary work.</p>
     */
    public static final OntClass ReviewNewsArticle = M_MODEL.createClass( "http://schema.org/ReviewNewsArticle" );
    
    /** <p>A river (for example, the broad majestic Shannon).</p> */
    public static final OntClass RiverBodyOfWater = M_MODEL.createClass( "http://schema.org/RiverBodyOfWater" );
    
    /** <p>Represents additional information about a relationship or property. For example 
     *  a Role can be used to say that a 'member' role linking some SportsTeam to 
     *  a player occurred during a particular time period. Or that a Person's 'actor' 
     *  role in a Movie was for some particular characterName. Such properties can 
     *  be attached to a Role entity, which is then associated with the main entities 
     *  using ordinary properties like 'member' or 'actor'.
     *  
     *  See also [blog post](http://blog.schema.org/2014/06/introducing-role.html).</p>
     */
    public static final OntClass Role = M_MODEL.createClass( "http://schema.org/Role" );
    
    /** <p>A roofing contractor.</p> */
    public static final OntClass RoofingContractor = M_MODEL.createClass( "http://schema.org/RoofingContractor" );
    
    /** <p>A room is a distinguishable space within a structure, usually separated from 
     *  other spaces by interior walls (source: Wikipedia, the free encyclopedia, 
     *  see &lt;a href="http://en.wikipedia.org/wiki/Room"&gt;http://en.wikipedia.org/wiki/Room&lt;/a&gt;). 
     *  &lt;br /&gt;&lt;br /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated 
     *  document on the use of schema.org for marking up hotels and other forms of 
     *  accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass Room = M_MODEL.createClass( "http://schema.org/Room" );
    
    /** <p>The act of notifying an event organizer as to whether you expect to attend 
     *  the event.</p>
     */
    public static final OntClass RsvpAction = M_MODEL.createClass( "http://schema.org/RsvpAction" );
    
    /** <p>RsvpResponseType is an enumeration type whose instances represent responding 
     *  to an RSVP request.</p>
     */
    public static final OntClass RsvpResponseType = M_MODEL.createClass( "http://schema.org/RsvpResponseType" );
    
    /** <p>Event type: Sales event.</p> */
    public static final OntClass SaleEvent = M_MODEL.createClass( "http://schema.org/SaleEvent" );
    
    /** <p>An [[Article]] whose content is primarily [[satirical]](https://en.wikipedia.org/wiki/Satire) 
     *  in nature, i.e. unlikely to be literally true. A satirical article is sometimes 
     *  but not necessarily also a [[NewsArticle]]. [[ScholarlyArticle]]s are also 
     *  sometimes satirized.</p>
     */
    public static final OntClass SatiricalArticle = M_MODEL.createClass( "http://schema.org/SatiricalArticle" );
    
    /** <p>A schedule defines a repeating time period used to describe a regularly occurring 
     *  [[Event]]. At a minimum a schedule will specify [[repeatFrequency]] which 
     *  describes the interval between occurrences of the event. Additional information 
     *  can be provided to specify the schedule more precisely. This includes identifying 
     *  the day(s) of the week or month when the recurring event will take place, 
     *  in addition to its start and end time. Schedules may also have start and end 
     *  dates to indicate when they are active, e.g. to define a limited calendar 
     *  of events.</p>
     */
    public static final OntClass Schedule = M_MODEL.createClass( "http://schema.org/Schedule" );
    
    /** <p>Scheduling future actions, events, or tasks.
     *  
     *  Related actions:
     *  
     *  * [[ReserveAction]]: Unlike ReserveAction, ScheduleAction allocates future 
     *  actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.</p>
     */
    public static final OntClass ScheduleAction = M_MODEL.createClass( "http://schema.org/ScheduleAction" );
    
    /** <p>A scholarly article.</p> */
    public static final OntClass ScholarlyArticle = M_MODEL.createClass( "http://schema.org/ScholarlyArticle" );
    
    /** <p>A school.</p> */
    public static final OntClass School = M_MODEL.createClass( "http://schema.org/School" );
    
    /** <p>A School District is an administrative area for the administration of schools.</p> */
    public static final OntClass SchoolDistrict = M_MODEL.createClass( "http://schema.org/SchoolDistrict" );
    
    /** <p>A screening of a movie or other video.</p> */
    public static final OntClass ScreeningEvent = M_MODEL.createClass( "http://schema.org/ScreeningEvent" );
    
    /** <p>A piece of sculpture.</p> */
    public static final OntClass Sculpture = M_MODEL.createClass( "http://schema.org/Sculpture" );
    
    /** <p>A sea (for example, the Caspian sea).</p> */
    public static final OntClass SeaBodyOfWater = M_MODEL.createClass( "http://schema.org/SeaBodyOfWater" );
    
    /** <p>The act of searching for an object.
     *  
     *  Related actions:
     *  
     *  * [[FindAction]]: SearchAction generally leads to a FindAction, but not necessarily.</p>
     */
    public static final OntClass SearchAction = M_MODEL.createClass( "http://schema.org/SearchAction" );
    
    /** <p>A Search and Rescue organization of some kind.</p> */
    public static final OntClass SearchRescueOrganization = M_MODEL.createClass( "http://schema.org/SearchRescueOrganization" );
    
    /** <p>Web page type: Search results page.</p> */
    public static final OntClass SearchResultsPage = M_MODEL.createClass( "http://schema.org/SearchResultsPage" );
    
    /** <p>A media season, e.g. TV, radio, video game etc.</p> */
    public static final OntClass Season = M_MODEL.createClass( "http://schema.org/Season" );
    
    /** <p>Used to describe a seat, such as a reserved seat in an event reservation.</p> */
    public static final OntClass Seat = M_MODEL.createClass( "http://schema.org/Seat" );
    
    /** <p>This is the [[Action]] of navigating to a specific [[startOffset]] timestamp 
     *  within a [[VideoObject]], typically represented with a URL template structure.</p>
     */
    public static final OntClass SeekToAction = M_MODEL.createClass( "http://schema.org/SeekToAction" );
    
    /** <p>A self-storage facility.</p> */
    public static final OntClass SelfStorage = M_MODEL.createClass( "http://schema.org/SelfStorage" );
    
    /** <p>The act of taking money from a buyer in exchange for goods or services rendered. 
     *  An agent sells an object, product, or service to a buyer for a price. Reciprocal 
     *  of BuyAction.</p>
     */
    public static final OntClass SellAction = M_MODEL.createClass( "http://schema.org/SellAction" );
    
    /** <p>The act of physically/electronically dispatching an object for transfer from 
     *  an origin to a destination. Related actions:
     *  
     *  * [[ReceiveAction]]: The reciprocal of SendAction.
     *  * [[GiveAction]]: Unlike GiveAction, SendAction does not imply the transfer 
     *  of ownership (e.g. I can send you my laptop, but I'm not necessarily giving 
     *  it to you).</p>
     */
    public static final OntClass SendAction = M_MODEL.createClass( "http://schema.org/SendAction" );
    
    /** <p>A Series in schema.org is a group of related items, typically but not necessarily 
     *  of the same kind. See also [[CreativeWorkSeries]], [[EventSeries]].</p>
     */
    public static final OntClass Series = M_MODEL.createClass( "http://schema.org/Series" );
    
    /** <p>A service provided by an organization, e.g. delivery service, print services, 
     *  etc.</p>
     */
    public static final OntClass Service = M_MODEL.createClass( "http://schema.org/Service" );
    
    /** <p>A means for accessing a service, e.g. a government office location, web site, 
     *  or phone number.</p>
     */
    public static final OntClass ServiceChannel = M_MODEL.createClass( "http://schema.org/ServiceChannel" );
    
    /** <p>ServicePeriod represents a duration with some constraints about cutoff time 
     *  and business days. This is used e.g. in shipping for handling times or transit 
     *  time.</p>
     */
    public static final OntClass ServicePeriod = M_MODEL.createClass( "http://schema.org/ServicePeriod" );
    
    /** <p>The act of distributing content to people for their amusement or edification.</p> */
    public static final OntClass ShareAction = M_MODEL.createClass( "http://schema.org/ShareAction" );
    
    /** <p>Printed music, as opposed to performed or recorded music.</p> */
    public static final OntClass SheetMusic = M_MODEL.createClass( "http://schema.org/SheetMusic" );
    
    /** <p>ShippingConditions represent a set of constraints and information about the 
     *  conditions of shipping a product. Such conditions may apply to only a subset 
     *  of the products being shipped, depending on aspects of the product like weight, 
     *  size, price, destination, and others. All the specified conditions must be 
     *  met for this ShippingConditions to apply.</p>
     */
    public static final OntClass ShippingConditions = M_MODEL.createClass( "http://schema.org/ShippingConditions" );
    
    /** <p>ShippingDeliveryTime provides various pieces of information about delivery 
     *  times for shipping.</p>
     */
    public static final OntClass ShippingDeliveryTime = M_MODEL.createClass( "http://schema.org/ShippingDeliveryTime" );
    
    /** <p>A ShippingRateSettings represents re-usable pieces of shipping information. 
     *  It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] 
     *  property of an [[OfferShippingDetails]]. Several occurrences can be published, 
     *  distinguished and matched (i.e. identified/referenced) by their different 
     *  values for [[shippingLabel]].</p>
     */
    public static final OntClass ShippingRateSettings = M_MODEL.createClass( "http://schema.org/ShippingRateSettings" );
    
    /** <p>ShippingService represents the criteria used to determine if and how an offer 
     *  could be shipped to a customer.</p>
     */
    public static final OntClass ShippingService = M_MODEL.createClass( "http://schema.org/ShippingService" );
    
    /** <p>A shoe store.</p> */
    public static final OntClass ShoeStore = M_MODEL.createClass( "http://schema.org/ShoeStore" );
    
    /** <p>A shopping center or mall.</p> */
    public static final OntClass ShoppingCenter = M_MODEL.createClass( "http://schema.org/ShoppingCenter" );
    
    /** <p>Short story or tale. A brief work of literature, usually written in narrative 
     *  prose.</p>
     */
    public static final OntClass ShortStory = M_MODEL.createClass( "http://schema.org/ShortStory" );
    
    /** <p>Residence type: Single-family home.</p> */
    public static final OntClass SingleFamilyResidence = M_MODEL.createClass( "http://schema.org/SingleFamilyResidence" );
    
    /** <p>A navigation element of the page.</p> */
    public static final OntClass SiteNavigationElement = M_MODEL.createClass( "http://schema.org/SiteNavigationElement" );
    
    /** <p>Enumerates common size groups for various product categories.</p> */
    public static final OntClass SizeGroupEnumeration = M_MODEL.createClass( "http://schema.org/SizeGroupEnumeration" );
    
    /** <p>Size related properties of a product, typically a size code ([[name]]) and 
     *  optionally a [[sizeSystem]], [[sizeGroup]], and product measurements ([[hasMeasurement]]). 
     *  In addition, the intended audience can be defined through [[suggestedAge]], 
     *  [[suggestedGender]], and suggested body measurements ([[suggestedMeasurement]]).</p>
     */
    public static final OntClass SizeSpecification = M_MODEL.createClass( "http://schema.org/SizeSpecification" );
    
    /** <p>Enumerates common size systems for different categories of products, for example 
     *  "EN-13402" or "UK" for wearables or "Imperial" for screws.</p>
     */
    public static final OntClass SizeSystemEnumeration = M_MODEL.createClass( "http://schema.org/SizeSystemEnumeration" );
    
    /** <p>A ski resort.</p> */
    public static final OntClass SkiResort = M_MODEL.createClass( "http://schema.org/SkiResort" );
    
    /** <p>Event type: Social event.</p> */
    public static final OntClass SocialEvent = M_MODEL.createClass( "http://schema.org/SocialEvent" );
    
    /** <p>A post to a social media platform, including blog posts, tweets, Facebook 
     *  posts, etc.</p>
     */
    public static final OntClass SocialMediaPosting = M_MODEL.createClass( "http://schema.org/SocialMediaPosting" );
    
    /** <p>A software application.</p> */
    public static final OntClass SoftwareApplication = M_MODEL.createClass( "http://schema.org/SoftwareApplication" );
    
    /** <p>Computer programming source code. Example: Full (compile ready) solutions, 
     *  code snippet samples, scripts, templates.</p>
     */
    public static final OntClass SoftwareSourceCode = M_MODEL.createClass( "http://schema.org/SoftwareSourceCode" );
    
    /** <p>The action that takes in a math expression and directs users to a page potentially 
     *  capable of solving/simplifying that expression.</p>
     */
    public static final OntClass SolveMathAction = M_MODEL.createClass( "http://schema.org/SolveMathAction" );
    
    /** <p>A placeholder for multiple similar products of the same kind.</p> */
    public static final OntClass SomeProducts = M_MODEL.createClass( "http://schema.org/SomeProducts" );
    
    /** <p>A SpeakableSpecification indicates (typically via [[xpath]] or [[cssSelector]]) 
     *  sections of a document that are highlighted as particularly [[speakable]]. 
     *  Instances of this type are expected to be used primarily as values of the 
     *  [[speakable]] property.</p>
     */
    public static final OntClass SpeakableSpecification = M_MODEL.createClass( "http://schema.org/SpeakableSpecification" );
    
    /** <p>A SpecialAnnouncement combines a simple date-stamped textual information update 
     *  with contextualized Web links and other structured data. It represents an 
     *  information update made by a locally-oriented organization, for example schools, 
     *  pharmacies, healthcare providers, community groups, police, local government. 
     *  For work in progress guidelines on Coronavirus-related markup see [this doc](https://docs.google.com/document/d/14ikaGCKxo50rRM7nvKSlbUpjyIk2WMQd3IkB1lItlrM/edit#). 
     *  The motivating scenario for SpecialAnnouncement is the [Coronavirus pandemic](https://en.wikipedia.org/wiki/2019%E2%80%9320_coronavirus_pandemic), 
     *  and the initial vocabulary is oriented to this urgent situation. Schema.org 
     *  expect to improve the markup iteratively as it is deployed and as feedback 
     *  emerges from use. In addition to our usual [Github entry](https://github.com/schemaorg/schemaorg/issues/2490), 
     *  feedback comments can also be provided in [this document](https://docs.google.com/document/d/1fpdFFxk8s87CWwACs53SGkYv3aafSxz_DTtOQxMrBJQ/edit#). 
     *  While this schema is designed to communicate urgent crisis-related information, 
     *  it is not the same as an emergency warning technology like [CAP](https://en.wikipedia.org/wiki/Common_Alerting_Protocol), 
     *  although there may be overlaps. The intent is to cover the kinds of everyday 
     *  practical information being posted to existing websites during an emergency 
     *  situation. Several kinds of information can be provided: We encourage the 
     *  provision of "name", "text", "datePosted", "expires" (if appropriate), "category" 
     *  and "url" as a simple baseline. It is important to provide a value for "category" 
     *  where possible, most ideally as a well known URL from Wikipedia or Wikidata. 
     *  In the case of the 2019-2020 Coronavirus pandemic, this should be "https://en.wikipedia.org/w/index.php?title=2019-20coronaviruspandemic" 
     *  or "https://www.wikidata.org/wiki/Q81068910". For many of the possible properties, 
     *  values can either be simple links or an inline description, depending on whether 
     *  a summary is available. For a link, provide just the URL of the appropriate 
     *  page as the property's value. For an inline description, use a [[WebContent]] 
     *  type, and provide the url as a property of that, alongside at least a simple 
     *  "[[text]]" summary of the page. It is unlikely that a single SpecialAnnouncement 
     *  will need all of the possible properties simultaneously. We expect that in 
     *  many cases the page referenced might contain more specialized structured data, 
     *  e.g. contact info, [[openingHours]], [[Event]], [[FAQPage]] etc. By linking 
     *  to those pages from a [[SpecialAnnouncement]] you can help make it clearer 
     *  that the events are related to the situation (e.g. Coronavirus) indicated 
     *  by the [[category]] property of the [[SpecialAnnouncement]]. Many [[SpecialAnnouncement]]s 
     *  will relate to particular regions and to identifiable local organizations. 
     *  Use [[spatialCoverage]] for the region, and [[announcementLocation]] to indicate 
     *  specific [[LocalBusiness]]es and [[CivicStructure]]s. If the announcement 
     *  affects both a particular region and a specific location (for example, a library 
     *  closure that serves an entire region), use both [[spatialCoverage]] and [[announcementLocation]]. 
     *  The [[about]] property can be used to indicate entities that are the focus 
     *  of the announcement. We now recommend using [[about]] only for representing 
     *  non-location entities (e.g. a [[Course]] or a [[RadioStation]]). For places, 
     *  use [[announcementLocation]] and [[spatialCoverage]]. Consumers of this markup 
     *  should be aware that the initial design encouraged the use of [[about]] for 
     *  locations too. The basic content of [[SpecialAnnouncement]] is similar to 
     *  that of an [RSS](https://en.wikipedia.org/wiki/RSS) or [Atom](https://en.wikipedia.org/wiki/Atom_(Web_standard)) 
     *  feed. For publishers without such feeds, basic feed-like information can be 
     *  shared by posting [[SpecialAnnouncement]] updates in a page, e.g. using JSON-LD. 
     *  For sites with Atom/RSS functionality, you can point to a feed with the [[webFeed]] 
     *  property. This can be a simple URL, or an inline [[DataFeed]] object, with 
     *  [[encodingFormat]] providing media type information, e.g. "application/rss+xml" 
     *  or "application/atom+xml".</p>
     */
    public static final OntClass SpecialAnnouncement = M_MODEL.createClass( "http://schema.org/SpecialAnnouncement" );
    
    /** <p>Any branch of a field in which people typically develop specific expertise, 
     *  usually after significant study, time, and effort.</p>
     */
    public static final OntClass Specialty = M_MODEL.createClass( "http://schema.org/Specialty" );
    
    /** <p>A sporting goods store.</p> */
    public static final OntClass SportingGoodsStore = M_MODEL.createClass( "http://schema.org/SportingGoodsStore" );
    
    /** <p>A sports location, such as a playing field.</p> */
    public static final OntClass SportsActivityLocation = M_MODEL.createClass( "http://schema.org/SportsActivityLocation" );
    
    /** <p>A sports club.</p> */
    public static final OntClass SportsClub = M_MODEL.createClass( "http://schema.org/SportsClub" );
    
    /** <p>Event type: Sports event.</p> */
    public static final OntClass SportsEvent = M_MODEL.createClass( "http://schema.org/SportsEvent" );
    
    /** <p>Represents the collection of all sports organizations, including sports teams, 
     *  governing bodies, and sports associations.</p>
     */
    public static final OntClass SportsOrganization = M_MODEL.createClass( "http://schema.org/SportsOrganization" );
    
    /** <p>Organization: Sports team.</p> */
    public static final OntClass SportsTeam = M_MODEL.createClass( "http://schema.org/SportsTeam" );
    
    /** <p>A spreadsheet file.</p> */
    public static final OntClass SpreadsheetDigitalDocument = M_MODEL.createClass( "http://schema.org/SpreadsheetDigitalDocument" );
    
    /** <p>A stadium.</p> */
    public static final OntClass StadiumOrArena = M_MODEL.createClass( "http://schema.org/StadiumOrArena" );
    
    /** <p>A state or province of a country.</p> */
    public static final OntClass State = M_MODEL.createClass( "http://schema.org/State" );
    
    /** <p>A statement about something, for example a fun or interesting fact. If known, 
     *  the main entity this statement is about can be indicated using mainEntity. 
     *  For more formal claims (e.g. in Fact Checking), consider using [[Claim]] instead. 
     *  Use the [[text]] property to capture the text of the statement.</p>
     */
    public static final OntClass Statement = M_MODEL.createClass( "http://schema.org/Statement" );
    
    /** <p>A StatisticalPopulation is a set of instances of a certain given type that 
     *  satisfy some set of constraints. The property [[populationType]] is used to 
     *  specify the type. Any property that can be used on instances of that type 
     *  can appear on the statistical population. For example, a [[StatisticalPopulation]] 
     *  representing all [[Person]]s with a [[homeLocation]] of East Podunk California 
     *  would be described by applying the appropriate [[homeLocation]] and [[populationType]] 
     *  properties to a [[StatisticalPopulation]] item that stands for that set of 
     *  people. The properties [[numConstraints]] and [[constraintProperty]] are used 
     *  to specify which of the populations properties are used to specify the population. 
     *  Note that the sense of "population" used here is the general sense of a statistical 
     *  population, and does not imply that the population consists of people. For 
     *  example, a [[populationType]] of [[Event]] or [[NewsArticle]] could be used. 
     *  See also [[Observation]], where a [[populationType]] such as [[Person]] or 
     *  [[Event]] can be indicated directly. In most cases it may be better to use 
     *  [[StatisticalVariable]] instead of [[StatisticalPopulation]].</p>
     */
    public static final OntClass StatisticalPopulation = M_MODEL.createClass( "http://schema.org/StatisticalPopulation" );
    
    /** <p>[[StatisticalVariable]] represents any type of statistical metric that can 
     *  be measured at a place and time. The usage pattern for [[StatisticalVariable]] 
     *  is typically expressed using [[Observation]] with an explicit [[populationType]], 
     *  which is a type, typically drawn from Schema.org. Each [[StatisticalVariable]] 
     *  is marked as a [[ConstraintNode]], meaning that some properties (those listed 
     *  using [[constraintProperty]]) serve in this setting solely to define the statistical 
     *  variable rather than literally describe a specific person, place or thing. 
     *  For example, a [[StatisticalVariable]] Median_Height_Person_Female representing 
     *  the median height of women, could be written as follows: the population type 
     *  is [[Person]]; the measuredProperty [[height]]; the [[statType]] [[median]]; 
     *  the [[gender]] [[Female]]. It is important to note that there are many kinds 
     *  of scientific quantitative observation which are not fully, perfectly or unambiguously 
     *  described following this pattern, or with solely Schema.org terminology. The 
     *  approach taken here is designed to allow partial, incremental or minimal description 
     *  of [[StatisticalVariable]]s, and the use of detailed sets of entity and property 
     *  IDs from external repositories. The [[measurementMethod]], [[unitCode]] and 
     *  [[unitText]] properties can also be used to clarify the specific nature and 
     *  notation of an observed measurement.</p>
     */
    public static final OntClass StatisticalVariable = M_MODEL.createClass( "http://schema.org/StatisticalVariable" );
    
    /** <p>Lists or enumerations dealing with status types.</p> */
    public static final OntClass StatusEnumeration = M_MODEL.createClass( "http://schema.org/StatusEnumeration" );
    
    /** <p>A value indicating a steering position.</p> */
    public static final OntClass SteeringPositionValue = M_MODEL.createClass( "http://schema.org/SteeringPositionValue" );
    
    /** <p>A retail good store.</p> */
    public static final OntClass Store = M_MODEL.createClass( "http://schema.org/Store" );
    
    /** <p>Structured values are used when the value of a property has a more complex 
     *  structure than simply being a textual value or a reference to another thing.</p>
     */
    public static final OntClass StructuredValue = M_MODEL.createClass( "http://schema.org/StructuredValue" );
    
    /** <p>The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically 
     *  to get updates pushed to.
     *  
     *  Related actions:
     *  
     *  * [[FollowAction]]: Unlike FollowAction, SubscribeAction implies that the 
     *  subscriber acts as a passive agent being constantly/actively pushed for updates.
     *  * [[RegisterAction]]: Unlike RegisterAction, SubscribeAction implies that 
     *  the agent is interested in continuing receiving updates from the object.
     *  * [[JoinAction]]: Unlike JoinAction, SubscribeAction implies that the agent 
     *  is interested in continuing receiving updates from the object.</p>
     */
    public static final OntClass SubscribeAction = M_MODEL.createClass( "http://schema.org/SubscribeAction" );
    
    /** <p>Any matter of defined composition that has discrete existence, whose origin 
     *  may be biological, mineral or chemical.</p>
     */
    public static final OntClass Substance = M_MODEL.createClass( "http://schema.org/Substance" );
    
    /** <p>A subway station.</p> */
    public static final OntClass SubwayStation = M_MODEL.createClass( "http://schema.org/SubwayStation" );
    
    /** <p>A suite in a hotel or other public accommodation, denotes a class of luxury 
     *  accommodations, the key feature of which is multiple rooms (source: Wikipedia, 
     *  the free encyclopedia, see &lt;a href="http://en.wikipedia.org/wiki/Suite_(hotel)"&gt;http://en.wikipedia.org/wiki/Suite_(hotel)&lt;/a&gt;). 
     *  &lt;br /&gt;&lt;br /&gt; See also the &lt;a href="/docs/hotels.html"&gt;dedicated 
     *  document on the use of schema.org for marking up hotels and other forms of 
     *  accommodations&lt;/a&gt;.</p>
     */
    public static final OntClass Suite = M_MODEL.createClass( "http://schema.org/Suite" );
    
    /** <p>Anatomical features that can be observed by sight (without dissection), including 
     *  the form and proportions of the human body as well as surface landmarks that 
     *  correspond to deeper subcutaneous structures. Superficial anatomy plays an 
     *  important role in sports medicine, phlebotomy, and other medical specialties 
     *  as underlying anatomical structures can be identified through surface palpation. 
     *  For example, during back surgery, superficial anatomy can be used to palpate 
     *  and count vertebrae to find the site of incision. Or in phlebotomy, superficial 
     *  anatomy can be used to locate an underlying vein; for example, the median 
     *  cubital vein can be located by palpating the borders of the cubital fossa 
     *  (such as the epicondyles of the humerus) and then looking for the superficial 
     *  signs of the vein, such as size, prominence, ability to refill after depression, 
     *  and feel of surrounding tissue support. As another example, in a subluxation 
     *  (dislocation) of the glenohumeral joint, the bony structure becomes pronounced 
     *  with the deltoid muscle failing to cover the glenohumeral joint allowing the 
     *  edges of the scapula to be superficially visible. Here, the superficial anatomy 
     *  is the visible edges of the scapula, implying the underlying dislocation of 
     *  the joint (the related anatomical structure).</p>
     */
    public static final OntClass SuperficialAnatomy = M_MODEL.createClass( "http://schema.org/SuperficialAnatomy" );
    
    /** <p>A medical procedure involving an incision with instruments; performed for 
     *  diagnose, or therapeutic purposes.</p>
     */
    public static final OntClass SurgicalProcedure = M_MODEL.createClass( "http://schema.org/SurgicalProcedure" );
    
    /** <p>The act of momentarily pausing a device or application (e.g. pause music playback 
     *  or pause a timer).</p>
     */
    public static final OntClass SuspendAction = M_MODEL.createClass( "http://schema.org/SuspendAction" );
    
    /** <p>A syllabus that describes the material covered in a course, often with several 
     *  such sections per [[Course]] so that a distinct [[timeRequired]] can be provided 
     *  for that section of the [[Course]].</p>
     */
    public static final OntClass Syllabus = M_MODEL.createClass( "http://schema.org/Syllabus" );
    
    /** <p>A synagogue.</p> */
    public static final OntClass Synagogue = M_MODEL.createClass( "http://schema.org/Synagogue" );
    
    /** <p>A short TV program or a segment/part of a TV program.</p> */
    public static final OntClass TVClip = M_MODEL.createClass( "http://schema.org/TVClip" );
    
    /** <p>A TV episode which can be part of a series or season.</p> */
    public static final OntClass TVEpisode = M_MODEL.createClass( "http://schema.org/TVEpisode" );
    
    /** <p>Season dedicated to TV broadcast and associated online delivery.</p> */
    public static final OntClass TVSeason = M_MODEL.createClass( "http://schema.org/TVSeason" );
    
    /** <p>CreativeWorkSeries dedicated to TV broadcast and associated online delivery.</p> */
    public static final OntClass TVSeries = M_MODEL.createClass( "http://schema.org/TVSeries" );
    
    /** <p>A table on a Web page.</p> */
    public static final OntClass Table = M_MODEL.createClass( "http://schema.org/Table" );
    
    /** <p>The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.
     *  
     *  Related actions:
     *  
     *  * [[GiveAction]]: The reciprocal of TakeAction.
     *  * [[ReceiveAction]]: Unlike ReceiveAction, TakeAction implies that ownership 
     *  has been transferred.</p>
     */
    public static final OntClass TakeAction = M_MODEL.createClass( "http://schema.org/TakeAction" );
    
    /** <p>A tattoo parlor.</p> */
    public static final OntClass TattooParlor = M_MODEL.createClass( "http://schema.org/TattooParlor" );
    
    /** <p>A taxi.</p> */
    public static final OntClass Taxi = M_MODEL.createClass( "http://schema.org/Taxi" );
    
    /** <p>A reservation for a taxi.
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations. For offers 
     *  of tickets, use [[Offer]].</p>
     */
    public static final OntClass TaxiReservation = M_MODEL.createClass( "http://schema.org/TaxiReservation" );
    
    /** <p>A service for a vehicle for hire with a driver for local travel. Fares are 
     *  usually calculated based on distance traveled.</p>
     */
    public static final OntClass TaxiService = M_MODEL.createClass( "http://schema.org/TaxiService" );
    
    /** <p>A taxi stand.</p> */
    public static final OntClass TaxiStand = M_MODEL.createClass( "http://schema.org/TaxiStand" );
    
    /** <p>A set of organisms asserted to represent a natural cohesive biological unit.</p> */
    public static final OntClass Taxon = M_MODEL.createClass( "http://schema.org/Taxon" );
    
    /** <p>A technical article - Example: How-to (task) topics, step-by-step, procedural 
     *  troubleshooting, specifications, etc.</p>
     */
    public static final OntClass TechArticle = M_MODEL.createClass( "http://schema.org/TechArticle" );
    
    /** <p>A unique instance of a television BroadcastService on a CableOrSatelliteService 
     *  lineup.</p>
     */
    public static final OntClass TelevisionChannel = M_MODEL.createClass( "http://schema.org/TelevisionChannel" );
    
    /** <p>A television station.</p> */
    public static final OntClass TelevisionStation = M_MODEL.createClass( "http://schema.org/TelevisionStation" );
    
    /** <p>A tennis complex.</p> */
    public static final OntClass TennisComplex = M_MODEL.createClass( "http://schema.org/TennisComplex" );
    
    /** <p>Data type: Text.</p> */
    public static final OntClass Text_CLASS = M_MODEL.createClass( "http://schema.org/Text" );
    
    /** <p>A file composed primarily of text.</p> */
    public static final OntClass TextDigitalDocument = M_MODEL.createClass( "http://schema.org/TextDigitalDocument" );
    
    /** <p>A text file. The text can be unformatted or contain markup, html, etc.</p> */
    public static final OntClass TextObject = M_MODEL.createClass( "http://schema.org/TextObject" );
    
    /** <p>Event type: Theater performance.</p> */
    public static final OntClass TheaterEvent = M_MODEL.createClass( "http://schema.org/TheaterEvent" );
    
    /** <p>A theater group or company, for example, the Royal Shakespeare Company or 
     *  Druid Theatre.</p>
     */
    public static final OntClass TheaterGroup = M_MODEL.createClass( "http://schema.org/TheaterGroup" );
    
    /** <p>A medical procedure intended primarily for therapeutic purposes, aimed at 
     *  improving a health condition.</p>
     */
    public static final OntClass TherapeuticProcedure = M_MODEL.createClass( "http://schema.org/TherapeuticProcedure" );
    
    /** <p>A thesis or dissertation document submitted in support of candidature for 
     *  an academic degree or professional qualification.</p>
     */
    public static final OntClass Thesis = M_MODEL.createClass( "http://schema.org/Thesis" );
    
    /** <p>The most generic type of item.</p> */
    public static final OntClass Thing = M_MODEL.createClass( "http://schema.org/Thing" );
    
    /** <p>Used to describe a ticket to an event, a flight, a bus ride, etc.</p> */
    public static final OntClass Ticket = M_MODEL.createClass( "http://schema.org/Ticket" );
    
    /** <p>The act of reaching a draw in a competitive activity.</p> */
    public static final OntClass TieAction = M_MODEL.createClass( "http://schema.org/TieAction" );
    
    /** <p>An enumeration of possible benefits as part of a loyalty (members) program.</p> */
    public static final OntClass TierBenefitEnumeration = M_MODEL.createClass( "http://schema.org/TierBenefitEnumeration" );
    
    /** <p>A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] 
     *  (see [XML schema for details](http://www.w3.org/TR/xmlschema-2/#time)).</p>
     */
    public static final OntClass Time = M_MODEL.createClass( "http://schema.org/Time" );
    
    /** <p>The act of giving money voluntarily to a beneficiary in recognition of services 
     *  rendered.</p>
     */
    public static final OntClass TipAction = M_MODEL.createClass( "http://schema.org/TipAction" );
    
    /** <p>A tire shop.</p> */
    public static final OntClass TireShop = M_MODEL.createClass( "http://schema.org/TireShop" );
    
    /** <p>A tourist attraction. In principle any Thing can be a [[TouristAttraction]], 
     *  from a [[Mountain]] and [[LandmarksOrHistoricalBuildings]] to a [[LocalBusiness]]. 
     *  This Type can be used on its own to describe a general [[TouristAttraction]], 
     *  or be used as an [[additionalType]] to add tourist attraction properties to 
     *  any other type. (See examples below)</p>
     */
    public static final OntClass TouristAttraction = M_MODEL.createClass( "http://schema.org/TouristAttraction" );
    
    /** <p>A tourist destination. In principle any [[Place]] can be a [[TouristDestination]] 
     *  from a [[City]], Region or [[Country]] to an [[AmusementPark]] or [[Hotel]]. 
     *  This Type can be used on its own to describe a general [[TouristDestination]], 
     *  or be used as an [[additionalType]] to add tourist relevant properties to 
     *  any other [[Place]]. A [[TouristDestination]] is defined as a [[Place]] that 
     *  contains, or is colocated with, one or more [[TouristAttraction]]s, often 
     *  linked by a similar theme or interest to a particular [[touristType]]. The 
     *  [UNWTO](http://www2.unwto.org/) defines Destination (main destination of a 
     *  tourism trip) as the place visited that is central to the decision to take 
     *  the trip. (See examples below.)</p>
     */
    public static final OntClass TouristDestination = M_MODEL.createClass( "http://schema.org/TouristDestination" );
    
    /** <p>A tourist information center.</p> */
    public static final OntClass TouristInformationCenter = M_MODEL.createClass( "http://schema.org/TouristInformationCenter" );
    
    /** <p>A tourist trip. A created itinerary of visits to one or more places of interest 
     *  ([[TouristAttraction]]/[[TouristDestination]]) often linked by a similar theme, 
     *  geographic area, or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) 
     *  defines tourism trip as the Trip taken by visitors. (See examples below.)</p>
     */
    public static final OntClass TouristTrip = M_MODEL.createClass( "http://schema.org/TouristTrip" );
    
    /** <p>A toy store.</p> */
    public static final OntClass ToyStore = M_MODEL.createClass( "http://schema.org/ToyStore" );
    
    /** <p>An agent tracks an object for updates.
     *  
     *  Related actions:
     *  
     *  * [[FollowAction]]: Unlike FollowAction, TrackAction refers to the interest 
     *  on the location of innanimates objects.
     *  * [[SubscribeAction]]: Unlike SubscribeAction, TrackAction refers to the interest 
     *  on the location of innanimate objects.</p>
     */
    public static final OntClass TrackAction = M_MODEL.createClass( "http://schema.org/TrackAction" );
    
    /** <p>The act of participating in an exchange of goods and services for monetary 
     *  compensation. An agent trades an object, product or service with a participant 
     *  in exchange for a one time or periodic payment.</p>
     */
    public static final OntClass TradeAction = M_MODEL.createClass( "http://schema.org/TradeAction" );
    
    /** <p>A reservation for train travel.
     *  
     *  Note: This type is for information about actual reservations, e.g. in confirmation 
     *  emails or HTML pages with individual confirmations of reservations. For offers 
     *  of tickets, use [[Offer]].</p>
     */
    public static final OntClass TrainReservation = M_MODEL.createClass( "http://schema.org/TrainReservation" );
    
    /** <p>A train station.</p> */
    public static final OntClass TrainStation = M_MODEL.createClass( "http://schema.org/TrainStation" );
    
    /** <p>A trip on a commercial train line.</p> */
    public static final OntClass TrainTrip = M_MODEL.createClass( "http://schema.org/TrainTrip" );
    
    /** <p>The act of transferring/moving (abstract or concrete) animate or inanimate 
     *  objects from one place to another.</p>
     */
    public static final OntClass TransferAction = M_MODEL.createClass( "http://schema.org/TransferAction" );
    
    /** <p>The act of traveling from a fromLocation to a destination by a specified mode 
     *  of transport, optionally with participants.</p>
     */
    public static final OntClass TravelAction = M_MODEL.createClass( "http://schema.org/TravelAction" );
    
    /** <p>A travel agency.</p> */
    public static final OntClass TravelAgency = M_MODEL.createClass( "http://schema.org/TravelAgency" );
    
    /** <p>An indication for treating an underlying condition, symptom, etc.</p> */
    public static final OntClass TreatmentIndication = M_MODEL.createClass( "http://schema.org/TreatmentIndication" );
    
    /** <p>A trip or journey. An itinerary of visits to one or more places.</p> */
    public static final OntClass Trip = M_MODEL.createClass( "http://schema.org/Trip" );
    
    /** <p>A structured value indicating the quantity, unit of measurement, and business 
     *  function of goods included in a bundle offer.</p>
     */
    public static final OntClass TypeAndQuantityNode = M_MODEL.createClass( "http://schema.org/TypeAndQuantityNode" );
    
    /** <p>UKNonprofitType: Non-profit organization type originating from the United 
     *  Kingdom.</p>
     */
    public static final OntClass UKNonprofitType = M_MODEL.createClass( "http://schema.org/UKNonprofitType" );
    
    /** <p>Data type: URL.</p> */
    public static final OntClass URL = M_MODEL.createClass( "http://schema.org/URL" );
    
    /** <p>USNonprofitType: Non-profit organization type originating from the United 
     *  States.</p>
     */
    public static final OntClass USNonprofitType = M_MODEL.createClass( "http://schema.org/USNonprofitType" );
    
    /** <p>The act of un-registering from a service.
     *  
     *  Related actions:
     *  
     *  * [[RegisterAction]]: antonym of UnRegisterAction.
     *  * [[LeaveAction]]: Unlike LeaveAction, UnRegisterAction implies that you are 
     *  unregistering from a service you were previously registered, rather than leaving 
     *  a team/group of people.</p>
     */
    public static final OntClass UnRegisterAction = M_MODEL.createClass( "http://schema.org/UnRegisterAction" );
    
    /** <p>The price asked for a given offer by the respective organization or person.</p> */
    public static final OntClass UnitPriceSpecification = M_MODEL.createClass( "http://schema.org/UnitPriceSpecification" );
    
    /** <p>The act of managing by changing/editing the state of the object.</p> */
    public static final OntClass UpdateAction = M_MODEL.createClass( "http://schema.org/UpdateAction" );
    
    /** <p>The act of applying an object to its intended purpose.</p> */
    public static final OntClass UseAction = M_MODEL.createClass( "http://schema.org/UseAction" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserBlocks = M_MODEL.createClass( "http://schema.org/UserBlocks" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserCheckins = M_MODEL.createClass( "http://schema.org/UserCheckins" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserComments = M_MODEL.createClass( "http://schema.org/UserComments" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserDownloads = M_MODEL.createClass( "http://schema.org/UserDownloads" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserInteraction = M_MODEL.createClass( "http://schema.org/UserInteraction" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserLikes = M_MODEL.createClass( "http://schema.org/UserLikes" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserPageVisits = M_MODEL.createClass( "http://schema.org/UserPageVisits" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserPlays = M_MODEL.createClass( "http://schema.org/UserPlays" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserPlusOnes = M_MODEL.createClass( "http://schema.org/UserPlusOnes" );
    
    /** <p>A review created by an end-user (e.g. consumer, purchaser, attendee etc.), 
     *  in contrast with [[CriticReview]].</p>
     */
    public static final OntClass UserReview = M_MODEL.createClass( "http://schema.org/UserReview" );
    
    /** <p>UserInteraction and its subtypes is an old way of talking about users interacting 
     *  with pages. It is generally better to use [[Action]]-based vocabulary, alongside 
     *  types such as [[Comment]].</p>
     */
    public static final OntClass UserTweets = M_MODEL.createClass( "http://schema.org/UserTweets" );
    
    /** <p>A kind of lodging business that focuses on renting single properties for limited 
     *  time.</p>
     */
    public static final OntClass VacationRental = M_MODEL.createClass( "http://schema.org/VacationRental" );
    
    /** <p>A vehicle is a device that is designed or used to transport people or cargo 
     *  over land, water, air, or through space.</p>
     */
    public static final OntClass Vehicle = M_MODEL.createClass( "http://schema.org/Vehicle" );
    
    /** <p>A type of blood vessel that specifically carries blood to the heart.</p> */
    public static final OntClass Vein = M_MODEL.createClass( "http://schema.org/Vein" );
    
    /** <p>A component of the human body circulatory system comprised of an intricate 
     *  network of hollow tubes that transport blood throughout the entire body.</p>
     */
    public static final OntClass Vessel = M_MODEL.createClass( "http://schema.org/Vessel" );
    
    /** <p>A vet's office.</p> */
    public static final OntClass VeterinaryCare = M_MODEL.createClass( "http://schema.org/VeterinaryCare" );
    
    /** <p>Web page type: Video gallery page.</p> */
    public static final OntClass VideoGallery = M_MODEL.createClass( "http://schema.org/VideoGallery" );
    
    /** <p>A video game is an electronic game that involves human interaction with a 
     *  user interface to generate visual feedback on a video device.</p>
     */
    public static final OntClass VideoGame = M_MODEL.createClass( "http://schema.org/VideoGame" );
    
    /** <p>A short segment/part of a video game.</p> */
    public static final OntClass VideoGameClip = M_MODEL.createClass( "http://schema.org/VideoGameClip" );
    
    /** <p>A video game series.</p> */
    public static final OntClass VideoGameSeries = M_MODEL.createClass( "http://schema.org/VideoGameSeries" );
    
    /** <p>A video file.</p> */
    public static final OntClass VideoObject = M_MODEL.createClass( "http://schema.org/VideoObject" );
    
    /** <p>A specific and exact (byte-for-byte) version of a [[VideoObject]]. Two byte-for-byte 
     *  identical files, for the purposes of this type, considered identical. If they 
     *  have different embedded metadata the files will differ. Different external 
     *  facts about the files, e.g. creator or dateCreated that aren't represented 
     *  in their actual content, do not affect this notion of identity.</p>
     */
    public static final OntClass VideoObjectSnapshot = M_MODEL.createClass( "http://schema.org/VideoObjectSnapshot" );
    
    /** <p>The act of consuming static visual content.</p> */
    public static final OntClass ViewAction = M_MODEL.createClass( "http://schema.org/ViewAction" );
    
    /** <p>An online or virtual location for attending events. For example, one may attend 
     *  an online seminar or educational event. While a virtual location may be used 
     *  as the location of an event, virtual locations should not be confused with 
     *  physical locations in the real world.</p>
     */
    public static final OntClass VirtualLocation = M_MODEL.createClass( "http://schema.org/VirtualLocation" );
    
    /** <p>Event type: Visual arts event.</p> */
    public static final OntClass VisualArtsEvent = M_MODEL.createClass( "http://schema.org/VisualArtsEvent" );
    
    /** <p>A work of art that is primarily visual in character.</p> */
    public static final OntClass VisualArtwork = M_MODEL.createClass( "http://schema.org/VisualArtwork" );
    
    /** <p>Vital signs are measures of various physiological functions in order to assess 
     *  the most basic body functions.</p>
     */
    public static final OntClass VitalSign = M_MODEL.createClass( "http://schema.org/VitalSign" );
    
    /** <p>A volcano, like Fujisan.</p> */
    public static final OntClass Volcano = M_MODEL.createClass( "http://schema.org/Volcano" );
    
    /** <p>The act of expressing a preference from a fixed/finite/structured set of choices/options.</p> */
    public static final OntClass VoteAction = M_MODEL.createClass( "http://schema.org/VoteAction" );
    
    /** <p>An advertising section of the page.</p> */
    public static final OntClass WPAdBlock = M_MODEL.createClass( "http://schema.org/WPAdBlock" );
    
    /** <p>The footer section of the page.</p> */
    public static final OntClass WPFooter = M_MODEL.createClass( "http://schema.org/WPFooter" );
    
    /** <p>The header section of the page.</p> */
    public static final OntClass WPHeader = M_MODEL.createClass( "http://schema.org/WPHeader" );
    
    /** <p>A sidebar section of the page.</p> */
    public static final OntClass WPSideBar = M_MODEL.createClass( "http://schema.org/WPSideBar" );
    
    /** <p>The act of expressing a desire about the object. An agent wants an object.</p> */
    public static final OntClass WantAction = M_MODEL.createClass( "http://schema.org/WantAction" );
    
    /** <p>A structured value representing the duration and scope of services that will 
     *  be provided to a customer free of charge in case of a defect or malfunction 
     *  of a product.</p>
     */
    public static final OntClass WarrantyPromise = M_MODEL.createClass( "http://schema.org/WarrantyPromise" );
    
    /** <p>A range of services that will be provided to a customer free of charge in 
     *  case of a defect or malfunction of a product.
     *  
     *  Commonly used values:
     *  
     *  * http://purl.org/goodrelations/v1#Labor-BringIn
     *  * http://purl.org/goodrelations/v1#PartsAndLabor-BringIn
     *  * http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</p>
     */
    public static final OntClass WarrantyScope = M_MODEL.createClass( "http://schema.org/WarrantyScope" );
    
    /** <p>The act of consuming dynamic/moving visual content.</p> */
    public static final OntClass WatchAction = M_MODEL.createClass( "http://schema.org/WatchAction" );
    
    /** <p>A waterfall, like Niagara.</p> */
    public static final OntClass Waterfall = M_MODEL.createClass( "http://schema.org/Waterfall" );
    
    /** <p>The act of dressing oneself in clothing.</p> */
    public static final OntClass WearAction = M_MODEL.createClass( "http://schema.org/WearAction" );
    
    /** <p>Enumerates common types of measurement for wearables products.</p> */
    public static final OntClass WearableMeasurementTypeEnumeration = M_MODEL.createClass( "http://schema.org/WearableMeasurementTypeEnumeration" );
    
    /** <p>Enumerates common size groups (also known as "size types") for wearable products.</p> */
    public static final OntClass WearableSizeGroupEnumeration = M_MODEL.createClass( "http://schema.org/WearableSizeGroupEnumeration" );
    
    /** <p>Enumerates common size systems specific for wearable products.</p> */
    public static final OntClass WearableSizeSystemEnumeration = M_MODEL.createClass( "http://schema.org/WearableSizeSystemEnumeration" );
    
    /** <p>An application programming interface accessible over Web/Internet technologies.</p> */
    public static final OntClass WebAPI = M_MODEL.createClass( "http://schema.org/WebAPI" );
    
    /** <p>Web applications.</p> */
    public static final OntClass WebApplication = M_MODEL.createClass( "http://schema.org/WebApplication" );
    
    /** <p>WebContent is a type representing all [[WebPage]], [[WebSite]] and [[WebPageElement]] 
     *  content. It is sometimes the case that detailed distinctions between Web pages, 
     *  sites and their parts are not always important or obvious. The [[WebContent]] 
     *  type makes it easier to describe Web-addressable content without requiring 
     *  such distinctions to always be stated. (The intent is that the existing types 
     *  [[WebPage]], [[WebSite]] and [[WebPageElement]] will eventually be declared 
     *  as subtypes of [[WebContent]].)</p>
     */
    public static final OntClass WebContent = M_MODEL.createClass( "http://schema.org/WebContent" );
    
    /** <p>A web page. Every web page is implicitly assumed to be declared to be of type 
     *  WebPage, so the various properties about that webpage, such as &lt;code&gt;breadcrumb&lt;/code&gt; 
     *  may be used. We recommend explicit declaration if these properties are specified, 
     *  but if they are found outside of an itemscope, they will be assumed to be 
     *  about the page.</p>
     */
    public static final OntClass WebPage = M_MODEL.createClass( "http://schema.org/WebPage" );
    
    /** <p>A web page element, like a table or an image.</p> */
    public static final OntClass WebPageElement = M_MODEL.createClass( "http://schema.org/WebPageElement" );
    
    /** <p>A WebSite is a set of related web pages and other items typically served from 
     *  a single web domain and accessible via URLs.</p>
     */
    public static final OntClass WebSite = M_MODEL.createClass( "http://schema.org/WebSite" );
    
    /** <p>A wholesale store.</p> */
    public static final OntClass WholesaleStore = M_MODEL.createClass( "http://schema.org/WholesaleStore" );
    
    /** <p>The act of achieving victory in a competitive activity.</p> */
    public static final OntClass WinAction = M_MODEL.createClass( "http://schema.org/WinAction" );
    
    /** <p>A winery.</p> */
    public static final OntClass Winery = M_MODEL.createClass( "http://schema.org/Winery" );
    
    /** <p>A program with both an educational and employment component. Typically based 
     *  at a workplace and structured around work-based learning, with the aim of 
     *  instilling competencies related to an occupation. WorkBasedProgram is used 
     *  to distinguish programs such as apprenticeships from school, college or other 
     *  classroom based educational programs.</p>
     */
    public static final OntClass WorkBasedProgram = M_MODEL.createClass( "http://schema.org/WorkBasedProgram" );
    
    /** <p>A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) 
     *  is an organization that promotes the interests of its worker members by collectively 
     *  bargaining with management, organizing, and political lobbying.</p>
     */
    public static final OntClass WorkersUnion = M_MODEL.createClass( "http://schema.org/WorkersUnion" );
    
    /** <p>The act of authoring written creative content.</p> */
    public static final OntClass WriteAction = M_MODEL.createClass( "http://schema.org/WriteAction" );
    
    /** <p>Text representing an XPath (typically but not necessarily version 1.0).</p> */
    public static final OntClass XPathType = M_MODEL.createClass( "http://schema.org/XPathType" );
    
    /** <p>A zoo.</p> */
    public static final OntClass Zoo = M_MODEL.createClass( "http://schema.org/Zoo" );
    
    public static final OntClass List = M_MODEL.createClass( "http://www.w3.org/1999/02/22-rdf-syntax-ns#List" );
    
    public static final OntClass Property_CLASS = M_MODEL.createClass( "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property" );
    
    public static final OntClass Statement_CLASS = M_MODEL.createClass( "http://www.w3.org/1999/02/22-rdf-syntax-ns#Statement" );
    
    public static final OntClass Class_CLASS = M_MODEL.createClass( "http://www.w3.org/2000/01/rdf-schema#Class" );
    
    public static final OntClass Literal = M_MODEL.createClass( "http://www.w3.org/2000/01/rdf-schema#Literal" );
    
    public static final OntClass Resource = M_MODEL.createClass( "http://www.w3.org/2000/01/rdf-schema#Resource" );
    
    public static final OntClass boolean_ = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#boolean" );
    
    public static final OntClass byte_ = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#byte" );
    
    public static final OntClass date = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#date" );
    
    public static final OntClass dateTime = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#dateTime" );
    
    public static final OntClass decimal = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#decimal" );
    
    public static final OntClass duration_CLASS = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#duration" );
    
    public static final OntClass float_ = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#float" );
    
    public static final OntClass int_ = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#int" );
    
    public static final OntClass integer = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#integer" );
    
    public static final OntClass long_ = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#long" );
    
    public static final OntClass nonNegativeInteger = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#nonNegativeInteger" );
    
    public static final OntClass nonPositiveInteger = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#nonPositiveInteger" );
    
    public static final OntClass short_ = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#short" );
    
    public static final OntClass string = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#string" );
    
    public static final OntClass time = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#time" );
    
    public static final OntClass unsignedByte = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#unsignedByte" );
    
    public static final OntClass unsignedInt = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#unsignedInt" );
    
    public static final OntClass unsignedLong = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#unsignedLong" );
    
    public static final OntClass unsignedShort = M_MODEL.createClass( "http://www.w3.org/2001/XMLSchema#unsignedShort" );
    
    public static final OntClass Class_CLASS1 = M_MODEL.createClass( "http://www.w3.org/2002/07/owl#Class" );
    
    public static final OntClass Nothing = M_MODEL.createClass( "http://www.w3.org/2002/07/owl#Nothing" );
    
    public static final OntClass Ontology = M_MODEL.createClass( "http://www.w3.org/2002/07/owl#Ontology" );
    
    public static final OntClass Property_CLASS1 = M_MODEL.createClass( "http://www.w3.org/2002/07/owl#Property" );
    
    public static final OntClass Restriction = M_MODEL.createClass( "http://www.w3.org/2002/07/owl#Restriction" );
    
    public static final OntClass Thing_CLASS = M_MODEL.createClass( "http://www.w3.org/2002/07/owl#Thing" );
    
    public static final OntClass Catalog = M_MODEL.createClass( "http://www.w3.org/ns/dcat#Catalog" );
    
    public static final OntClass Dataset_CLASS2 = M_MODEL.createClass( "http://www.w3.org/ns/dcat#Dataset" );
    
    public static final OntClass Distribution = M_MODEL.createClass( "http://www.w3.org/ns/dcat#Distribution" );
    
    public static final OntClass Person_CLASS = M_MODEL.createClass( "http://xmlns.com/foaf/0.1/Person" );
    
    /** <p>Abdomen clinical examination.</p> */
    public static final Individual Abdomen = M_MODEL.createIndividual( "http://schema.org/Abdomen", PhysicalExam );
    
    /** <p>Represents the activation fee part of the total price for an offered product, 
     *  for example a cellphone contract.</p>
     */
    public static final Individual ActivationFee = M_MODEL.createIndividual( "http://schema.org/ActivationFee", PriceComponentTypeEnumeration );
    
    /** <p>An in-progress action (e.g., while watching the movie, or driving to a location).</p> */
    public static final Individual ActiveActionStatus = M_MODEL.createIndividual( "http://schema.org/ActiveActionStatus", ActionStatusType );
    
    /** <p>Active, but not recruiting new participants.</p> */
    public static final Individual ActiveNotRecruiting = M_MODEL.createIndividual( "http://schema.org/ActiveNotRecruiting", MedicalStudyStatus );
    
    /** <p>Physical activity of relatively low intensity that depends primarily on the 
     *  aerobic energy-generating process; during activity, the aerobic metabolism 
     *  uses oxygen to adequately meet energy demands during exercise.</p>
     */
    public static final Individual AerobicActivity = M_MODEL.createIndividual( "http://schema.org/AerobicActivity", PhysicalActivityCategory );
    
    /** <p>AlbumRelease.</p> */
    public static final Individual AlbumRelease = M_MODEL.createIndividual( "http://schema.org/AlbumRelease", MusicAlbumReleaseType );
    
    /** <p>Item contains alcohol or promotes alcohol consumption.</p> */
    public static final Individual AlcoholConsideration = M_MODEL.createIndividual( "http://schema.org/AlcoholConsideration", AdultOrientedEnumeration );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia"&gt;algorithmic 
     *  media&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual AlgorithmicMediaDigitalSource = M_MODEL.createIndividual( "http://schema.org/AlgorithmicMediaDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicallyEnhanced"&gt;algorithmically 
     *  enhanced&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual AlgorithmicallyEnhancedDigitalSource = M_MODEL.createIndividual( "http://schema.org/AlgorithmicallyEnhancedDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>All-wheel Drive is a transmission layout where the engine drives all four 
     *  wheels.</p>
     */
    public static final Individual AllWheelDriveConfiguration = M_MODEL.createIndividual( "http://schema.org/AllWheelDriveConfiguration", DriveWheelConfigurationValue );
    
    /** <p>Content about the allergy-related aspects of a health topic.</p> */
    public static final Individual AllergiesHealthAspect = M_MODEL.createIndividual( "http://schema.org/AllergiesHealthAspect", HealthAspectEnumeration );
    
    /** <p>Physical activity that is of high-intensity which utilizes the anaerobic metabolism 
     *  of the body.</p>
     */
    public static final Individual AnaerobicActivity = M_MODEL.createIndividual( "http://schema.org/AnaerobicActivity", PhysicalActivityCategory );
    
    /** <p>Represents the broad notion of Android-based operating systems.</p> */
    public static final Individual AndroidPlatform = M_MODEL.createIndividual( "http://schema.org/AndroidPlatform", DigitalPlatformEnumeration );
    
    /** <p>A specific branch of medical science that pertains to study of anesthetics 
     *  and their application.</p>
     */
    public static final Individual Anesthesia = M_MODEL.createIndividual( "http://schema.org/Anesthesia", MedicalSpecialty );
    
    /** <p>Appearance assessment with clinical examination.</p> */
    public static final Individual Appearance = M_MODEL.createIndividual( "http://schema.org/Appearance", PhysicalExam );
    
    /** <p>Book format: Audiobook. This is an enumerated value for use with the bookFormat 
     *  property. There is also a type 'Audiobook' in the bib extension which includes 
     *  Audiobook specific properties.</p>
     */
    public static final Individual AudiobookFormat = M_MODEL.createIndividual( "http://schema.org/AudiobookFormat", BookFormatType );
    
    /** <p>Indicates that the publisher gives some special status to the publication 
     *  of the document. ("The Queens Printer" version of a UK Act of Parliament, 
     *  or the PDF version of a Directive published by the EU Office of Publications). 
     *  Something "Authoritative" is considered to be also [[OfficialLegalValue]]".</p>
     */
    public static final Individual AuthoritativeLegalValue = M_MODEL.createIndividual( "http://schema.org/AuthoritativeLegalValue", LegalValueLevel );
    
    /** <p>A system of medicine that originated in India over thousands of years and 
     *  that focuses on integrating and balancing the body, mind, and spirit.</p>
     */
    public static final Individual Ayurvedic = M_MODEL.createIndividual( "http://schema.org/Ayurvedic", MedicineSystem );
    
    /** <p>Indicates that the item is available on back order.</p> */
    public static final Individual BackOrder = M_MODEL.createIndividual( "http://schema.org/BackOrder", ItemAvailability );
    
    /** <p>Pathogenic bacteria that cause bacterial infection.</p> */
    public static final Individual Bacteria = M_MODEL.createIndividual( "http://schema.org/Bacteria", InfectiousAgentClass );
    
    /** <p>Physical activity that is engaged to help maintain posture and balance.</p> */
    public static final Individual Balance = M_MODEL.createIndividual( "http://schema.org/Balance", PhysicalActivityCategory );
    
    /** <p>BasicIncome: this is a benefit for basic income.</p> */
    public static final Individual BasicIncome = M_MODEL.createIndividual( "http://schema.org/BasicIncome", GovernmentBenefitsType );
    
    /** <p>Content about the benefits and advantages of usage or utilization of topic.</p> */
    public static final Individual BenefitsHealthAspect = M_MODEL.createIndividual( "http://schema.org/BenefitsHealthAspect", HealthAspectEnumeration );
    
    /** <p>Arm length (measured between arms/shoulder line intersection and the prominent 
     *  wrist bone). Used, for example, to fit shirts.</p>
     */
    public static final Individual BodyMeasurementArm = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementArm", BodyMeasurementTypeEnumeration );
    
    /** <p>Maximum girth of bust. Used, for example, to fit women's suits.</p> */
    public static final Individual BodyMeasurementBust = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementBust", BodyMeasurementTypeEnumeration );
    
    /** <p>Maximum girth of chest. Used, for example, to fit men's suits.</p> */
    public static final Individual BodyMeasurementChest = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementChest", BodyMeasurementTypeEnumeration );
    
    /** <p>Foot length (measured between end of the most prominent toe and the most prominent 
     *  part of the heel). Used, for example, to measure socks.</p>
     */
    public static final Individual BodyMeasurementFoot = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementFoot", BodyMeasurementTypeEnumeration );
    
    /** <p>Maximum hand girth (measured over the knuckles of the open right hand excluding 
     *  thumb, fingers together). Used, for example, to fit gloves.</p>
     */
    public static final Individual BodyMeasurementHand = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementHand", BodyMeasurementTypeEnumeration );
    
    /** <p>Maximum girth of head above the ears. Used, for example, to fit hats.</p> */
    public static final Individual BodyMeasurementHead = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementHead", BodyMeasurementTypeEnumeration );
    
    /** <p>Body height (measured between crown of head and soles of feet). Used, for 
     *  example, to fit jackets.</p>
     */
    public static final Individual BodyMeasurementHeight = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementHeight", BodyMeasurementTypeEnumeration );
    
    /** <p>Girth of hips (measured around the buttocks). Used, for example, to fit skirts.</p> */
    public static final Individual BodyMeasurementHips = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementHips", BodyMeasurementTypeEnumeration );
    
    /** <p>Inside leg (measured between crotch and soles of feet). Used, for example, 
     *  to fit pants.</p>
     */
    public static final Individual BodyMeasurementInsideLeg = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementInsideLeg", BodyMeasurementTypeEnumeration );
    
    /** <p>Girth of neck. Used, for example, to fit shirts.</p> */
    public static final Individual BodyMeasurementNeck = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementNeck", BodyMeasurementTypeEnumeration );
    
    /** <p>Girth of body just below the bust. Used, for example, to fit women's swimwear.</p> */
    public static final Individual BodyMeasurementUnderbust = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementUnderbust", BodyMeasurementTypeEnumeration );
    
    /** <p>Girth of natural waistline (between hip bones and lower ribs). Used, for example, 
     *  to fit pants.</p>
     */
    public static final Individual BodyMeasurementWaist = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementWaist", BodyMeasurementTypeEnumeration );
    
    /** <p>Body weight. Used, for example, to measure pantyhose.</p> */
    public static final Individual BodyMeasurementWeight = M_MODEL.createIndividual( "http://schema.org/BodyMeasurementWeight", BodyMeasurementTypeEnumeration );
    
    /** <p>BroadcastRelease.</p> */
    public static final Individual BroadcastRelease = M_MODEL.createIndividual( "http://schema.org/BroadcastRelease", MusicAlbumReleaseType );
    
    /** <p>BusinessSupport: this is a benefit for supporting businesses.</p> */
    public static final Individual BusinessSupport = M_MODEL.createIndividual( "http://schema.org/BusinessSupport", GovernmentBenefitsType );
    
    /** <p>Payment in advance by bank transfer, equivalent to &lt;code&gt;http://purl.org/goodrelations/v1#ByBankTransferInAdvance&lt;/code&gt;.</p> */
    public static final Individual ByBankTransferInAdvance = M_MODEL.createIndividual( "http://schema.org/ByBankTransferInAdvance", PaymentMethodType );
    
    /** <p>Payment by invoice, typically after the goods were delivered, equivalent to 
     *  &lt;code&gt;http://purl.org/goodrelations/v1#ByInvoice&lt;/code&gt;.</p>
     */
    public static final Individual ByInvoice = M_MODEL.createIndividual( "http://schema.org/ByInvoice", PaymentMethodType );
    
    /** <p>CDFormat.</p> */
    public static final Individual CDFormat = M_MODEL.createIndividual( "http://schema.org/CDFormat", MusicReleaseFormatType );
    
    /** <p>Cash on Delivery (COD) payment, equivalent to &lt;code&gt;http://purl.org/goodrelations/v1#COD&lt;/code&gt;.</p> */
    public static final Individual COD = M_MODEL.createIndividual( "http://schema.org/COD", PaymentMethodType );
    
    /** <p>X-ray computed tomography imaging.</p> */
    public static final Individual CT = M_MODEL.createIndividual( "http://schema.org/CT", MedicalImagingTechnique );
    
    /** <p>A specific branch of medical science that pertains to diagnosis and treatment 
     *  of disorders of heart and vasculature.</p>
     */
    public static final Individual Cardiovascular = M_MODEL.createIndividual( "http://schema.org/Cardiovascular", MedicalSpecialty );
    
    /** <p>Cardiovascular system assessment with clinical examination.</p> */
    public static final Individual CardiovascularExam = M_MODEL.createIndividual( "http://schema.org/CardiovascularExam", PhysicalExam );
    
    /** <p>A case series (also known as a clinical series) is a medical research study 
     *  that tracks patients with a known exposure given similar treatment or examines 
     *  their medical records for exposure and outcome. A case series can be retrospective 
     *  or prospective and usually involves a smaller number of patients than the 
     *  more powerful case-control studies or randomized controlled trials. Case series 
     *  may be consecutive or non-consecutive, depending on whether all cases presenting 
     *  to the reporting authors over a period of time were included, or only a selection.</p>
     */
    public static final Individual CaseSeries = M_MODEL.createIndividual( "http://schema.org/CaseSeries", MedicalObservationalStudyDesign );
    
    /** <p>Payment using cash, on premises, equivalent to &lt;code&gt;http://purl.org/goodrelations/v1#Cash&lt;/code&gt;.</p> */
    public static final Individual Cash = M_MODEL.createIndividual( "http://schema.org/Cash", PaymentMethodType );
    
    /** <p>CassetteFormat.</p> */
    public static final Individual CassetteFormat = M_MODEL.createIndividual( "http://schema.org/CassetteFormat", MusicReleaseFormatType );
    
    /** <p>Information about the causes and main actions that gave rise to the topic.</p> */
    public static final Individual CausesHealthAspect = M_MODEL.createIndividual( "http://schema.org/CausesHealthAspect", HealthAspectEnumeration );
    
    /** <p>Specifies that a certification is active.</p> */
    public static final Individual CertificationActive = M_MODEL.createIndividual( "http://schema.org/CertificationActive", CertificationStatusEnumeration );
    
    /** <p>Specifies that a certification is inactive (no longer in effect).</p> */
    public static final Individual CertificationInactive = M_MODEL.createIndividual( "http://schema.org/CertificationInactive", CertificationStatusEnumeration );
    
    /** <p>CharitableIncorporatedOrganization: Non-profit type referring to a Charitable 
     *  Incorporated Organization (UK).</p>
     */
    public static final Individual CharitableIncorporatedOrganization = M_MODEL.createIndividual( "http://schema.org/CharitableIncorporatedOrganization", UKNonprofitType );
    
    /** <p>Payment in advance by sending a check, equivalent to &lt;code&gt;http://purl.org/goodrelations/v1#CheckInAdvance&lt;/code&gt;.</p> */
    public static final Individual CheckInAdvance = M_MODEL.createIndividual( "http://schema.org/CheckInAdvance", PaymentMethodType );
    
    /** <p>A system of medicine focused on the relationship between the body's structure, 
     *  mainly the spine, and its functioning.</p>
     */
    public static final Individual Chiropractic = M_MODEL.createIndividual( "http://schema.org/Chiropractic", MedicineSystem );
    
    /** <p>Represents the cleaning fee part of the total price for an offered product, 
     *  for example a vacation rental.</p>
     */
    public static final Individual CleaningFee = M_MODEL.createIndividual( "http://schema.org/CleaningFee", PriceComponentTypeEnumeration );
    
    /** <p>Medical clinicians, including practicing physicians and other medical professionals 
     *  involved in clinical practice.</p>
     */
    public static final Individual Clinician = M_MODEL.createIndividual( "http://schema.org/Clinician", MedicalAudienceType );
    
    /** <p>Play mode: CoOp. Co-operative games, where you play on the same team with 
     *  friends.</p>
     */
    public static final Individual CoOp = M_MODEL.createIndividual( "http://schema.org/CoOp", GamePlayMode );
    
    /** <p>Also known as a panel study. A cohort study is a form of longitudinal study 
     *  used in medicine and social science. It is one type of study design and should 
     *  be compared with a cross-sectional study. A cohort is a group of people who 
     *  share a common characteristic or experience within a defined period (e.g., 
     *  are born, leave school, lose their job, are exposed to a drug or a vaccine, 
     *  etc.). The comparison group may be the general population from which the cohort 
     *  is drawn, or it may be another cohort of persons thought to have had little 
     *  or no exposure to the substance under investigation, but otherwise similar. 
     *  Alternatively, subgroups within the cohort may be compared with each other.</p>
     */
    public static final Individual CohortStudy = M_MODEL.createIndividual( "http://schema.org/CohortStudy", MedicalObservationalStudyDesign );
    
    /** <p>Permission to add comments to the document.</p> */
    public static final Individual CommentPermission = M_MODEL.createIndividual( "http://schema.org/CommentPermission", DigitalDocumentPermissionType );
    
    /** <p>A field of public health focusing on improving health characteristics of a 
     *  defined population in relation with their geographical or environment areas.</p>
     */
    public static final Individual CommunityHealth = M_MODEL.createIndividual( "http://schema.org/CommunityHealth", MedicalSpecialty );
    
    /** <p>CompilationAlbum.</p> */
    public static final Individual CompilationAlbum = M_MODEL.createIndividual( "http://schema.org/CompilationAlbum", MusicAlbumProductionType );
    
    /** <p>Completed.</p> */
    public static final Individual Completed = M_MODEL.createIndividual( "http://schema.org/Completed", MedicalStudyStatus );
    
    /** <p>An action that has already taken place.</p> */
    public static final Individual CompletedActionStatus = M_MODEL.createIndividual( "http://schema.org/CompletedActionStatus", ActionStatusType );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/compositeCapture"&gt;composite 
     *  capture&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual CompositeCaptureDigitalSource = M_MODEL.createIndividual( "http://schema.org/CompositeCaptureDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia"&gt;algorithmic 
     *  media&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual CompositeDigitalSource = M_MODEL.createIndividual( "http://schema.org/CompositeDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/compositeSynthetic"&gt;composite 
     *  synthetic&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual CompositeSyntheticDigitalSource = M_MODEL.createIndividual( "http://schema.org/CompositeSyntheticDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/compositeWithTrainedAlgorithmicMedia"&gt;composite 
     *  with trained algorithmic media&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual CompositeWithTrainedAlgorithmicMediaDigitalSource = M_MODEL.createIndividual( "http://schema.org/CompositeWithTrainedAlgorithmicMediaDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content about contagion mechanisms and contagiousness information over the 
     *  topic.</p>
     */
    public static final Individual ContagiousnessHealthAspect = M_MODEL.createIndividual( "http://schema.org/ContagiousnessHealthAspect", HealthAspectEnumeration );
    
    /** <p>Studies carried out on pre-existing data (usually from 'snapshot' surveys), 
     *  such as that collected by the Census Bureau. Sometimes called Prevalence Studies.</p>
     */
    public static final Individual CrossSectional = M_MODEL.createIndividual( "http://schema.org/CrossSectional", MedicalObservationalStudyDesign );
    
    /** <p>DJMixAlbum.</p> */
    public static final Individual DJMixAlbum = M_MODEL.createIndividual( "http://schema.org/DJMixAlbum", MusicAlbumProductionType );
    
    /** <p>DVDFormat.</p> */
    public static final Individual DVDFormat = M_MODEL.createIndividual( "http://schema.org/DVDFormat", MusicReleaseFormatType );
    
    /** <p>Indicates that the item is damaged.</p> */
    public static final Individual DamagedCondition = M_MODEL.createIndividual( "http://schema.org/DamagedCondition", OfferItemCondition );
    
    /** <p>The item is dangerous and requires careful handling and/or special training 
     *  of the user. See also the [UN Model Classification](https://unece.org/DAM/trans/danger/publi/unrec/rev17/English/02EREv17_Part2.pdf) 
     *  defining the 9 classes of dangerous goods such as explosives, gases, flammables, 
     *  and more.</p>
     */
    public static final Individual DangerousGoodConsideration = M_MODEL.createIndividual( "http://schema.org/DangerousGoodConsideration", AdultOrientedEnumeration );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/dataDrivenMedia"&gt;data 
     *  driven media&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual DataDrivenMediaDigitalSource = M_MODEL.createIndividual( "http://schema.org/DataDrivenMediaDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content coded 'missing context' in a [[MediaReview]], considered in the context 
     *  of how it was published or shared. For a [[VideoObject]] to be 'missing context': 
     *  Presenting unaltered video in an inaccurate manner that misrepresents the 
     *  footage. For example, using incorrect dates or locations, altering the transcript 
     *  or sharing brief clips from a longer video to mislead viewers. (A video rated 
     *  'original' can also be missing context.) For an [[ImageObject]] to be 'missing 
     *  context': Presenting unaltered images in an inaccurate manner to misrepresent 
     *  the image and mislead the viewer. For example, a common tactic is using an 
     *  unaltered image but saying it came from a different time or place. (An image 
     *  rated 'original' can also be missing context.) For an [[ImageObject]] with 
     *  embedded text to be 'missing context': An unaltered image presented in an 
     *  inaccurate manner to misrepresent the image and mislead the viewer. For example, 
     *  a common tactic is using an unaltered image but saying it came from a different 
     *  time or place. (An 'original' image with inaccurate text would generally fall 
     *  in this category.) For an [[AudioObject]] to be 'missing context': Unaltered 
     *  audio presented in an inaccurate manner that misrepresents it. For example, 
     *  using incorrect dates or locations, or sharing brief clips from a longer recording 
     *  to mislead viewers. (Audio rated “original” can also be missing context.)</p>
     */
    public static final Individual DecontextualizedContent = M_MODEL.createIndividual( "http://schema.org/DecontextualizedContent", MediaManipulationRatingEnumeration );
    
    /** <p>Indicates a document for which the text is conclusively what the law says 
     *  and is legally binding. (e.g. The digitally signed version of an Official 
     *  Journal.) Something "Definitive" is considered to be also [[AuthoritativeLegalValue]].</p>
     */
    public static final Individual DefinitiveLegalValue = M_MODEL.createIndividual( "http://schema.org/DefinitiveLegalValue", LegalValueLevel );
    
    /** <p>DemoAlbum.</p> */
    public static final Individual DemoAlbum = M_MODEL.createIndividual( "http://schema.org/DemoAlbum", MusicAlbumProductionType );
    
    /** <p>Indicates demo game availability, i.e. a somehow limited demonstration of 
     *  the full game.</p>
     */
    public static final Individual DemoGameAvailability = M_MODEL.createIndividual( "http://schema.org/DemoGameAvailability", GameAvailabilityEnumeration );
    
    /** <p>A branch of medicine that is involved in the dental care.</p> */
    public static final Individual Dentistry = M_MODEL.createIndividual( "http://schema.org/Dentistry", MedicalSpecialty );
    
    /** <p>Something relating to or practicing dermatology.</p> */
    public static final Individual Dermatologic = M_MODEL.createIndividual( "http://schema.org/Dermatologic", MedicalSpecialty );
    
    /** <p>A specific branch of medical science that pertains to diagnosis and treatment 
     *  of disorders of skin.</p>
     */
    public static final Individual Dermatology = M_MODEL.createIndividual( "http://schema.org/Dermatology", MedicalSpecialty );
    
    /** <p>Represents the broad notion of 'desktop' browsers as a Web Platform.</p> */
    public static final Individual DesktopWebPlatform = M_MODEL.createIndividual( "http://schema.org/DesktopWebPlatform", DigitalPlatformEnumeration );
    
    /** <p>A diet appropriate for people with diabetes.</p> */
    public static final Individual DiabeticDiet = M_MODEL.createIndividual( "http://schema.org/DiabeticDiet", RestrictedDiet );
    
    /** <p>A medical device used for diagnostic purposes.</p> */
    public static final Individual Diagnostic = M_MODEL.createIndividual( "http://schema.org/Diagnostic", MedicalDevicePurpose );
    
    /** <p>Dietetics and nutrition as a medical specialty.</p> */
    public static final Individual DietNutrition = M_MODEL.createIndividual( "http://schema.org/DietNutrition", MedicalSpecialty );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/digitalArt"&gt;digital 
     *  art&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual DigitalArtDigitalSource = M_MODEL.createIndividual( "http://schema.org/DigitalArtDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>DigitalAudioTapeFormat.</p> */
    public static final Individual DigitalAudioTapeFormat = M_MODEL.createIndividual( "http://schema.org/DigitalAudioTapeFormat", MusicReleaseFormatType );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/digitalCapture"&gt;digital 
     *  capture&lt;/a&gt;&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual DigitalCaptureDigitalSource = M_MODEL.createIndividual( "http://schema.org/DigitalCaptureDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>DigitalFormat.</p> */
    public static final Individual DigitalFormat = M_MODEL.createIndividual( "http://schema.org/DigitalFormat", MusicReleaseFormatType );
    
    /** <p>Payment in advance by direct debit from the bank, equivalent to &lt;code&gt;http://purl.org/goodrelations/v1#DirectDebit&lt;/code&gt;.</p> */
    public static final Individual DirectDebit = M_MODEL.createIndividual( "http://schema.org/DirectDebit", PaymentMethodType );
    
    /** <p>DisabilitySupport: this is a benefit for disability support.</p> */
    public static final Individual DisabilitySupport = M_MODEL.createIndividual( "http://schema.org/DisabilitySupport", GovernmentBenefitsType );
    
    /** <p>Indicates that the item has been discontinued.</p> */
    public static final Individual Discontinued = M_MODEL.createIndividual( "http://schema.org/Discontinued", ItemAvailability );
    
    /** <p>Represents the distance fee (e.g., price per km or mile) part of the total 
     *  price for an offered product, for example a car rental.</p>
     */
    public static final Individual DistanceFee = M_MODEL.createIndividual( "http://schema.org/DistanceFee", PriceComponentTypeEnumeration );
    
    /** <p>A trial design in which neither the researcher nor the patient knows the details 
     *  of the treatment the patient was randomly assigned to.</p>
     */
    public static final Individual DoubleBlindedTrial = M_MODEL.createIndividual( "http://schema.org/DoubleBlindedTrial", MedicalTrialDesign );
    
    /** <p>Represents the downpayment (up-front payment) price component of the total 
     *  price for an offered product that has additional installment payments.</p>
     */
    public static final Individual Downpayment = M_MODEL.createIndividual( "http://schema.org/Downpayment", PriceComponentTypeEnumeration );
    
    /** <p>Indicates the usage of the vehicle for driving school.</p> */
    public static final Individual DrivingSchoolVehicleUsage = M_MODEL.createIndividual( "http://schema.org/DrivingSchoolVehicleUsage", CarUsageType );
    
    /** <p>Book format: Ebook.</p> */
    public static final Individual EBook = M_MODEL.createIndividual( "http://schema.org/EBook", BookFormatType );
    
    /** <p>EPRelease.</p> */
    public static final Individual EPRelease = M_MODEL.createIndividual( "http://schema.org/EPRelease", MusicAlbumReleaseType );
    
    /** <p>Represents EU Energy Efficiency Class A as defined in EU energy labeling regulations.</p> */
    public static final Individual EUEnergyEfficiencyCategoryA = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryA", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class A+ as defined in EU energy labeling 
     *  regulations.</p>
     */
    public static final Individual EUEnergyEfficiencyCategoryA1Plus = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryA1Plus", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class A++ as defined in EU energy labeling 
     *  regulations.</p>
     */
    public static final Individual EUEnergyEfficiencyCategoryA2Plus = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryA2Plus", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class A+++ as defined in EU energy labeling 
     *  regulations.</p>
     */
    public static final Individual EUEnergyEfficiencyCategoryA3Plus = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryA3Plus", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class B as defined in EU energy labeling regulations.</p> */
    public static final Individual EUEnergyEfficiencyCategoryB = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryB", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class C as defined in EU energy labeling regulations.</p> */
    public static final Individual EUEnergyEfficiencyCategoryC = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryC", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class D as defined in EU energy labeling regulations.</p> */
    public static final Individual EUEnergyEfficiencyCategoryD = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryD", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class E as defined in EU energy labeling regulations.</p> */
    public static final Individual EUEnergyEfficiencyCategoryE = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryE", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class F as defined in EU energy labeling regulations.</p> */
    public static final Individual EUEnergyEfficiencyCategoryF = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryF", EUEnergyEfficiencyEnumeration );
    
    /** <p>Represents EU Energy Efficiency Class G as defined in EU energy labeling regulations.</p> */
    public static final Individual EUEnergyEfficiencyCategoryG = M_MODEL.createIndividual( "http://schema.org/EUEnergyEfficiencyCategoryG", EUEnergyEfficiencyEnumeration );
    
    /** <p>Ear function assessment with clinical examination.</p> */
    public static final Individual Ear = M_MODEL.createIndividual( "http://schema.org/Ear", PhysicalExam );
    
    /** <p>Content coded 'edited or cropped content' in a [[MediaReview]], considered 
     *  in the context of how it was published or shared. For a [[VideoObject]] to 
     *  be 'edited or cropped content': The video has been edited or rearranged. This 
     *  category applies to time edits, including editing multiple videos together 
     *  to alter the story being told or editing out large portions from a video. 
     *  For an [[ImageObject]] to be 'edited or cropped content': Presenting a part 
     *  of an image from a larger whole to mislead the viewer. For an [[ImageObject]] 
     *  with embedded text to be 'edited or cropped content': Presenting a part of 
     *  an image from a larger whole to mislead the viewer. For an [[AudioObject]] 
     *  to be 'edited or cropped content': The audio has been edited or rearranged. 
     *  This category applies to time edits, including editing multiple audio clips 
     *  together to alter the story being told or editing out large portions from 
     *  the recording.</p>
     */
    public static final Individual EditedOrCroppedContent = M_MODEL.createIndividual( "http://schema.org/EditedOrCroppedContent", MediaManipulationRatingEnumeration );
    
    /** <p>Content about the effectiveness-related aspects of a health topic.</p> */
    public static final Individual EffectivenessHealthAspect = M_MODEL.createIndividual( "http://schema.org/EffectivenessHealthAspect", HealthAspectEnumeration );
    
    /** <p>A specific branch of medical science that deals with the evaluation and initial 
     *  treatment of medical conditions caused by trauma or sudden illness.</p>
     */
    public static final Individual Emergency = M_MODEL.createIndividual( "http://schema.org/Emergency", MedicalSpecialty );
    
    /** <p>A specific branch of medical science that pertains to diagnosis and treatment 
     *  of disorders of endocrine glands and their secretions.</p>
     */
    public static final Individual Endocrine = M_MODEL.createIndividual( "http://schema.org/Endocrine", MedicalSpecialty );
    
    /** <p>Represents EnergyStar certification.</p> */
    public static final Individual EnergyStarCertified = M_MODEL.createIndividual( "http://schema.org/EnergyStarCertified", EnergyStarEnergyEfficiencyEnumeration );
    
    /** <p>Enrolling participants by invitation only.</p> */
    public static final Individual EnrollingByInvitation = M_MODEL.createIndividual( "http://schema.org/EnrollingByInvitation", MedicalStudyStatus );
    
    /** <p>The event has been cancelled. If the event has multiple startDate values, 
     *  all are assumed to be cancelled. Either startDate or previousStartDate may 
     *  be used to specify the event's cancelled date(s).</p>
     */
    public static final Individual EventCancelled = M_MODEL.createIndividual( "http://schema.org/EventCancelled", EventStatusType );
    
    /** <p>Indicates that the event was changed to allow online participation. See [[eventAttendanceMode]] 
     *  for specifics of whether it is now fully or partially online.</p>
     */
    public static final Individual EventMovedOnline = M_MODEL.createIndividual( "http://schema.org/EventMovedOnline", EventStatusType );
    
    /** <p>The event has been postponed and no new date has been set. The event's previousStartDate 
     *  should be set.</p>
     */
    public static final Individual EventPostponed = M_MODEL.createIndividual( "http://schema.org/EventPostponed", EventStatusType );
    
    /** <p>The event has been rescheduled. The event's previousStartDate should be set 
     *  to the old date and the startDate should be set to the event's new date. (If 
     *  the event has been rescheduled multiple times, the previousStartDate property 
     *  may be repeated.)</p>
     */
    public static final Individual EventRescheduled = M_MODEL.createIndividual( "http://schema.org/EventRescheduled", EventStatusType );
    
    /** <p>The event is taking place or has taken place on the startDate as scheduled. 
     *  Use of this value is optional, as it is assumed by default.</p>
     */
    public static final Individual EventScheduled = M_MODEL.createIndividual( "http://schema.org/EventScheduled", EventStatusType );
    
    /** <p>Data derived from multiple randomized clinical trials or meta-analyses.</p> */
    public static final Individual EvidenceLevelA = M_MODEL.createIndividual( "http://schema.org/EvidenceLevelA", MedicalEvidenceLevel );
    
    /** <p>Data derived from a single randomized trial, or nonrandomized studies.</p> */
    public static final Individual EvidenceLevelB = M_MODEL.createIndividual( "http://schema.org/EvidenceLevelB", MedicalEvidenceLevel );
    
    /** <p>Only consensus opinion of experts, case studies, or standard-of-care.</p> */
    public static final Individual EvidenceLevelC = M_MODEL.createIndividual( "http://schema.org/EvidenceLevelC", MedicalEvidenceLevel );
    
    /** <p>An example [[MeasurementMethodEnum]] (to remove when real enums are added).</p> */
    public static final Individual ExampleMeasurementMethodEnum = M_MODEL.createIndividual( "http://schema.org/ExampleMeasurementMethodEnum", MeasurementMethodEnum );
    
    /** <p>Specifies that a refund can be done as an exchange for the same product.</p> */
    public static final Individual ExchangeRefund = M_MODEL.createIndividual( "http://schema.org/ExchangeRefund", RefundTypeEnumeration );
    
    /** <p>Eye or ophthalmological function assessment with clinical examination.</p> */
    public static final Individual Eye = M_MODEL.createIndividual( "http://schema.org/Eye", PhysicalExam );
    
    /** <p>A designation by the US FDA signifying that adequate and well-controlled studies 
     *  have failed to demonstrate a risk to the fetus in the first trimester of pregnancy 
     *  (and there is no evidence of risk in later trimesters).</p>
     */
    public static final Individual FDAcategoryA = M_MODEL.createIndividual( "http://schema.org/FDAcategoryA", DrugPregnancyCategory );
    
    /** <p>A designation by the US FDA signifying that animal reproduction studies have 
     *  failed to demonstrate a risk to the fetus and there are no adequate and well-controlled 
     *  studies in pregnant women.</p>
     */
    public static final Individual FDAcategoryB = M_MODEL.createIndividual( "http://schema.org/FDAcategoryB", DrugPregnancyCategory );
    
    /** <p>A designation by the US FDA signifying that animal reproduction studies have 
     *  shown an adverse effect on the fetus and there are no adequate and well-controlled 
     *  studies in humans, but potential benefits may warrant use of the drug in pregnant 
     *  women despite potential risks.</p>
     */
    public static final Individual FDAcategoryC = M_MODEL.createIndividual( "http://schema.org/FDAcategoryC", DrugPregnancyCategory );
    
    /** <p>A designation by the US FDA signifying that there is positive evidence of 
     *  human fetal risk based on adverse reaction data from investigational or marketing 
     *  experience or studies in humans, but potential benefits may warrant use of 
     *  the drug in pregnant women despite potential risks.</p>
     */
    public static final Individual FDAcategoryD = M_MODEL.createIndividual( "http://schema.org/FDAcategoryD", DrugPregnancyCategory );
    
    /** <p>A designation by the US FDA signifying that studies in animals or humans have 
     *  demonstrated fetal abnormalities and/or there is positive evidence of human 
     *  fetal risk based on adverse reaction data from investigational or marketing 
     *  experience, and the risks involved in use of the drug in pregnant women clearly 
     *  outweigh potential benefits.</p>
     */
    public static final Individual FDAcategoryX = M_MODEL.createIndividual( "http://schema.org/FDAcategoryX", DrugPregnancyCategory );
    
    /** <p>A designation that the drug in question has not been assigned a pregnancy 
     *  category designation by the US FDA.</p>
     */
    public static final Individual FDAnotEvaluated = M_MODEL.createIndividual( "http://schema.org/FDAnotEvaluated", DrugPregnancyCategory );
    
    /** <p>An action that failed to complete. The action's error property and the HTTP 
     *  return code contain more information about the failure.</p>
     */
    public static final Individual FailedActionStatus = M_MODEL.createIndividual( "http://schema.org/FailedActionStatus", ActionStatusType );
    
    /** <p>The boolean value false.</p> */
    public static final Individual False = M_MODEL.createIndividual( "http://schema.org/False", Boolean );
    
    /** <p>The female gender.</p> */
    public static final Individual Female = M_MODEL.createIndividual( "http://schema.org/Female", GenderType );
    
    /** <p>Physical activity that is engaged in to improve joint and muscle flexibility.</p> */
    public static final Individual Flexibility = M_MODEL.createIndividual( "http://schema.org/Flexibility", PhysicalActivityCategory );
    
    /** <p>Four-wheel drive is a transmission layout where the engine primarily drives 
     *  two wheels with a part-time four-wheel drive capability.</p>
     */
    public static final Individual FourWheelDriveConfiguration = M_MODEL.createIndividual( "http://schema.org/FourWheelDriveConfiguration", DriveWheelConfigurationValue );
    
    /** <p>Specifies that product returns are free of charge for the customer.</p> */
    public static final Individual FreeReturn = M_MODEL.createIndividual( "http://schema.org/FreeReturn", ReturnFeesEnumeration );
    
    /** <p>The day of the week between Thursday and Saturday.</p> */
    public static final Individual Friday = M_MODEL.createIndividual( "http://schema.org/Friday", DayOfWeek );
    
    /** <p>Front-wheel drive is a transmission layout where the engine drives the front 
     *  wheels.</p>
     */
    public static final Individual FrontWheelDriveConfiguration = M_MODEL.createIndividual( "http://schema.org/FrontWheelDriveConfiguration", DriveWheelConfigurationValue );
    
    /** <p>Fulfillment to a collection point location.</p> */
    public static final Individual FulfillmentTypeCollectionPoint = M_MODEL.createIndividual( "http://schema.org/FulfillmentTypeCollectionPoint", FulfillmentTypeEnumeration );
    
    /** <p>Fulfillment to a customer selected address.</p> */
    public static final Individual FulfillmentTypeDelivery = M_MODEL.createIndividual( "http://schema.org/FulfillmentTypeDelivery", FulfillmentTypeEnumeration );
    
    /** <p>Fulfillment through pick-up drop-off locations.</p> */
    public static final Individual FulfillmentTypePickupDropoff = M_MODEL.createIndividual( "http://schema.org/FulfillmentTypePickupDropoff", FulfillmentTypeEnumeration );
    
    /** <p>Fulfillment through pick-up in a store.</p> */
    public static final Individual FulfillmentTypePickupInStore = M_MODEL.createIndividual( "http://schema.org/FulfillmentTypePickupInStore", FulfillmentTypeEnumeration );
    
    /** <p>Fulfillment to a customer selected address after scheduling with the customer.</p> */
    public static final Individual FulfillmentTypeScheduledDelivery = M_MODEL.createIndividual( "http://schema.org/FulfillmentTypeScheduledDelivery", FulfillmentTypeEnumeration );
    
    /** <p>Indicates full game availability.</p> */
    public static final Individual FullGameAvailability = M_MODEL.createIndividual( "http://schema.org/FullGameAvailability", GameAvailabilityEnumeration );
    
    /** <p>Specifies that a refund can be done in the full amount the customer paid for 
     *  the product.</p>
     */
    public static final Individual FullRefund = M_MODEL.createIndividual( "http://schema.org/FullRefund", RefundTypeEnumeration );
    
    /** <p>Pathogenic fungus.</p> */
    public static final Individual Fungus = M_MODEL.createIndividual( "http://schema.org/Fungus", InfectiousAgentClass );
    
    /** <p>A specific branch of medical science that pertains to diagnosis and treatment 
     *  of disorders of digestive system.</p>
     */
    public static final Individual Gastroenterologic = M_MODEL.createIndividual( "http://schema.org/Gastroenterologic", MedicalSpecialty );
    
    /** <p>Represents the generic notion of the Web Platform. More specific codes include 
     *  [[MobileWebPlatform]] and [[DesktopWebPlatform]], as an incomplete list.</p>
     */
    public static final Individual GenericWebPlatform = M_MODEL.createIndividual( "http://schema.org/GenericWebPlatform", DigitalPlatformEnumeration );
    
    /** <p>A specific branch of medical science that pertains to hereditary transmission 
     *  and the variation of inherited characteristics and disorders.</p>
     */
    public static final Individual Genetic = M_MODEL.createIndividual( "http://schema.org/Genetic", MedicalSpecialty );
    
    /** <p>Genitourinary system function assessment with clinical examination.</p> */
    public static final Individual Genitourinary = M_MODEL.createIndividual( "http://schema.org/Genitourinary", PhysicalExam );
    
    /** <p>A specific branch of medical science that is concerned with the diagnosis 
     *  and treatment of diseases, debilities and provision of care to the aged.</p>
     */
    public static final Individual Geriatric = M_MODEL.createIndividual( "http://schema.org/Geriatric", MedicalSpecialty );
    
    /** <p>Content that discusses practical and policy aspects for getting access to 
     *  specific kinds of healthcare (e.g. distribution mechanisms for vaccines).</p>
     */
    public static final Individual GettingAccessHealthAspect = M_MODEL.createIndividual( "http://schema.org/GettingAccessHealthAspect", HealthAspectEnumeration );
    
    /** <p>A diet exclusive of gluten.</p> */
    public static final Individual GlutenFreeDiet = M_MODEL.createIndividual( "http://schema.org/GlutenFreeDiet", RestrictedDiet );
    
    /** <p>Book format: GraphicNovel. May represent a bound collection of ComicIssue 
     *  instances.</p>
     */
    public static final Individual GraphicNovel = M_MODEL.createIndividual( "http://schema.org/GraphicNovel", BookFormatType );
    
    /** <p>The airline boards by groups based on check-in time, priority, etc.</p> */
    public static final Individual GroupBoardingPolicy = M_MODEL.createIndividual( "http://schema.org/GroupBoardingPolicy", BoardingPolicyType );
    
    /** <p>A specific branch of medical science that pertains to the health care of women, 
     *  particularly in the diagnosis and treatment of disorders affecting the female 
     *  reproductive system.</p>
     */
    public static final Individual Gynecologic = M_MODEL.createIndividual( "http://schema.org/Gynecologic", MedicalSpecialty );
    
    /** <p>A diet conforming to Islamic dietary practices.</p> */
    public static final Individual HalalDiet = M_MODEL.createIndividual( "http://schema.org/HalalDiet", RestrictedDiet );
    
    /** <p>Book format: Hardcover.</p> */
    public static final Individual Hardcover = M_MODEL.createIndividual( "http://schema.org/Hardcover", BookFormatType );
    
    /** <p>Head assessment with clinical examination.</p> */
    public static final Individual Head = M_MODEL.createIndividual( "http://schema.org/Head", PhysicalExam );
    
    /** <p>HealthCare: this is a benefit for health care.</p> */
    public static final Individual HealthCare = M_MODEL.createIndividual( "http://schema.org/HealthCare", GovernmentBenefitsType );
    
    /** <p>Item is a pharmaceutical (e.g., a prescription or OTC drug) or a restricted 
     *  medical device.</p>
     */
    public static final Individual HealthcareConsideration = M_MODEL.createIndividual( "http://schema.org/HealthcareConsideration", AdultOrientedEnumeration );
    
    /** <p>Uses devices to support users with hearing impairments.</p> */
    public static final Individual HearingImpairedSupported = M_MODEL.createIndividual( "http://schema.org/HearingImpairedSupported", ContactPointOption );
    
    /** <p>A specific branch of medical science that pertains to diagnosis and treatment 
     *  of disorders of blood and blood producing organs.</p>
     */
    public static final Individual Hematologic = M_MODEL.createIndividual( "http://schema.org/Hematologic", MedicalSpecialty );
    
    /** <p>A diet conforming to Hindu dietary practices, in particular, beef-free.</p> */
    public static final Individual HinduDiet = M_MODEL.createIndividual( "http://schema.org/HinduDiet", RestrictedDiet );
    
    /** <p>A system of medicine based on the principle that a disease can be cured by 
     *  a substance that produces similar symptoms in healthy people.</p>
     */
    public static final Individual Homeopathic = M_MODEL.createIndividual( "http://schema.org/Homeopathic", MedicineSystem );
    
    /** <p>Content that discusses and explains how a particular health-related topic 
     *  works, e.g. in terms of mechanisms and underlying science.</p>
     */
    public static final Individual HowItWorksHealthAspect = M_MODEL.createIndividual( "http://schema.org/HowItWorksHealthAspect", HealthAspectEnumeration );
    
    /** <p>Information about how or where to find a topic. Also may contain location 
     *  data that can be used for where to look for help if the topic is observed.</p>
     */
    public static final Individual HowOrWhereHealthAspect = M_MODEL.createIndividual( "http://schema.org/HowOrWhereHealthAspect", HealthAspectEnumeration );
    
    /** <p>Represents the broad notion of iOS-based operating systems.</p> */
    public static final Individual IOSPlatform = M_MODEL.createIndividual( "http://schema.org/IOSPlatform", DigitalPlatformEnumeration );
    
    /** <p>Indicates that a legislation is in force.</p> */
    public static final Individual InForce = M_MODEL.createIndividual( "http://schema.org/InForce", LegalForceStatus );
    
    /** <p>Indicates that the item is in stock.</p> */
    public static final Individual InStock = M_MODEL.createIndividual( "http://schema.org/InStock", ItemAvailability );
    
    /** <p>Indicates that the item is available only at physical locations.</p> */
    public static final Individual InStoreOnly = M_MODEL.createIndividual( "http://schema.org/InStoreOnly", ItemAvailability );
    
    /** <p>Payment in advance in some form of shop or kiosk for goods purchased online.</p> */
    public static final Individual InStorePrepay = M_MODEL.createIndividual( "http://schema.org/InStorePrepay", PaymentMethodType );
    
    /** <p>This incentive applies to goods only.</p> */
    public static final Individual IncentiveQualifiedExpenseTypeGoodsOnly = M_MODEL.createIndividual( "http://schema.org/IncentiveQualifiedExpenseTypeGoodsOnly", IncentiveQualifiedExpenseType );
    
    /** <p>This incentive can apply to either goods or services (or both).</p> */
    public static final Individual IncentiveQualifiedExpenseTypeGoodsOrServices = M_MODEL.createIndividual( "http://schema.org/IncentiveQualifiedExpenseTypeGoodsOrServices", IncentiveQualifiedExpenseType );
    
    /** <p>This incentive applies to services only.</p> */
    public static final Individual IncentiveQualifiedExpenseTypeServicesOnly = M_MODEL.createIndividual( "http://schema.org/IncentiveQualifiedExpenseTypeServicesOnly", IncentiveQualifiedExpenseType );
    
    /** <p>This incentive applies to utility bills.</p> */
    public static final Individual IncentiveQualifiedExpenseTypeUtilityBill = M_MODEL.createIndividual( "http://schema.org/IncentiveQualifiedExpenseTypeUtilityBill", IncentiveQualifiedExpenseType );
    
    /** <p>This incentive is currently active.</p> */
    public static final Individual IncentiveStatusActive = M_MODEL.createIndividual( "http://schema.org/IncentiveStatusActive", IncentiveStatus );
    
    /** <p>This incentive is currently being developed, and may become active/retired 
     *  in the future.</p>
     */
    public static final Individual IncentiveStatusInDevelopment = M_MODEL.createIndividual( "http://schema.org/IncentiveStatusInDevelopment", IncentiveStatus );
    
    /** <p>This incentive is currently active, but may not be accepting new applicants 
     *  (e.g. max number of redemptions reached for a year)</p>
     */
    public static final Individual IncentiveStatusOnHold = M_MODEL.createIndividual( "http://schema.org/IncentiveStatusOnHold", IncentiveStatus );
    
    /** <p>This incentive is not longer available.</p> */
    public static final Individual IncentiveStatusRetired = M_MODEL.createIndividual( "http://schema.org/IncentiveStatusRetired", IncentiveStatus );
    
    /** <p>An incentive where the recipient can receive additional funding for the purchase/lease 
     *  of the good/service, which must be paid back.</p>
     */
    public static final Individual IncentiveTypeLoan = M_MODEL.createIndividual( "http://schema.org/IncentiveTypeLoan", IncentiveType );
    
    /** <p>An incentive that reduces the purchase/lease cost of the good/service in question.</p> */
    public static final Individual IncentiveTypeRebateOrSubsidy = M_MODEL.createIndividual( "http://schema.org/IncentiveTypeRebateOrSubsidy", IncentiveType );
    
    /** <p>An incentive that directly reduces the amount of tax owed by the recipient.</p> */
    public static final Individual IncentiveTypeTaxCredit = M_MODEL.createIndividual( "http://schema.org/IncentiveTypeTaxCredit", IncentiveType );
    
    /** <p>An incentive that reduces the recipient's amount of taxable income.</p> */
    public static final Individual IncentiveTypeTaxDeduction = M_MODEL.createIndividual( "http://schema.org/IncentiveTypeTaxDeduction", IncentiveType );
    
    /** <p>An incentive that reduces/exempts the recipient from taxation applicable to 
     *  the incentivized good/service (e.g. luxury taxes, registration taxes, circulation 
     *  tax).</p>
     */
    public static final Individual IncentiveTypeTaxWaiver = M_MODEL.createIndividual( "http://schema.org/IncentiveTypeTaxWaiver", IncentiveType );
    
    /** <p>Something in medical science that pertains to infectious diseases, i.e. caused 
     *  by bacterial, viral, fungal or parasitic infections.</p>
     */
    public static final Individual Infectious = M_MODEL.createIndividual( "http://schema.org/Infectious", MedicalSpecialty );
    
    /** <p>Content discussing ingredients-related aspects of a health topic.</p> */
    public static final Individual IngredientsHealthAspect = M_MODEL.createIndividual( "http://schema.org/IngredientsHealthAspect", HealthAspectEnumeration );
    
    /** <p>Represents the installment pricing component of the total price for an offered 
     *  product.</p>
     */
    public static final Individual Installment = M_MODEL.createIndividual( "http://schema.org/Installment", PriceComponentTypeEnumeration );
    
    /** <p>An international trial.</p> */
    public static final Individual InternationalTrial = M_MODEL.createIndividual( "http://schema.org/InternationalTrial", MedicalTrialDesign );
    
    /** <p>Represents the invoice price of an offered product.</p> */
    public static final Individual InvoicePrice = M_MODEL.createIndividual( "http://schema.org/InvoicePrice", PriceTypeEnumeration );
    
    /** <p>An ItemList ordered with lower values listed first.</p> */
    public static final Individual ItemListOrderAscending = M_MODEL.createIndividual( "http://schema.org/ItemListOrderAscending", ItemListOrderType );
    
    /** <p>An ItemList ordered with higher values listed first.</p> */
    public static final Individual ItemListOrderDescending = M_MODEL.createIndividual( "http://schema.org/ItemListOrderDescending", ItemListOrderType );
    
    /** <p>An ItemList ordered with no explicit order.</p> */
    public static final Individual ItemListUnordered = M_MODEL.createIndividual( "http://schema.org/ItemListUnordered", ItemListOrderType );
    
    /** <p>Specifies that the consumer can keep the product, even when receiving a refund 
     *  or store credit.</p>
     */
    public static final Individual KeepProduct = M_MODEL.createIndividual( "http://schema.org/KeepProduct", ReturnMethodEnumeration );
    
    /** <p>A diet conforming to Jewish dietary practices.</p> */
    public static final Individual KosherDiet = M_MODEL.createIndividual( "http://schema.org/KosherDiet", RestrictedDiet );
    
    /** <p>A medical science pertaining to chemical, hematological, immunologic, microscopic, 
     *  or bacteriological diagnostic analyses or research.</p>
     */
    public static final Individual LaboratoryScience = M_MODEL.createIndividual( "http://schema.org/LaboratoryScience", MedicalSpecialty );
    
    /** <p>LaserDiscFormat.</p> */
    public static final Individual LaserDiscFormat = M_MODEL.createIndividual( "http://schema.org/LaserDiscFormat", MusicReleaseFormatType );
    
    /** <p>The steering position is on the left side of the vehicle (viewed from the 
     *  main direction of driving).</p>
     */
    public static final Individual LeftHandDriving = M_MODEL.createIndividual( "http://schema.org/LeftHandDriving", SteeringPositionValue );
    
    /** <p>Any physical activity engaged in for recreational purposes. Examples may include 
     *  ballroom dancing, roller skating, canoeing, fishing, etc.</p>
     */
    public static final Individual LeisureTimeActivity = M_MODEL.createIndividual( "http://schema.org/LeisureTimeActivity", PhysicalActivityCategory );
    
    /** <p>Indicates that the item has limited availability.</p> */
    public static final Individual LimitedAvailability = M_MODEL.createIndividual( "http://schema.org/LimitedAvailability", ItemAvailability );
    
    /** <p>LimitedByGuaranteeCharity: Non-profit type referring to a charitable company 
     *  that is limited by guarantee (UK).</p>
     */
    public static final Individual LimitedByGuaranteeCharity = M_MODEL.createIndividual( "http://schema.org/LimitedByGuaranteeCharity", UKNonprofitType );
    
    /** <p>Represents the list price of an offered product. Typically the same as the 
     *  [MSRP](http://schema.org/MSRP).</p>
     */
    public static final Individual ListPrice = M_MODEL.createIndividual( "http://schema.org/ListPrice", PriceTypeEnumeration );
    
    /** <p>LiveAlbum.</p> */
    public static final Individual LiveAlbum = M_MODEL.createIndividual( "http://schema.org/LiveAlbum", MusicAlbumProductionType );
    
    /** <p>Information about coping or life related to the topic.</p> */
    public static final Individual LivingWithHealthAspect = M_MODEL.createIndividual( "http://schema.org/LivingWithHealthAspect", HealthAspectEnumeration );
    
    /** <p>A DeliveryMethod in which an item is made available via locker.</p> */
    public static final Individual LockerDelivery = M_MODEL.createIndividual( "http://schema.org/LockerDelivery", DeliveryMethod );
    
    /** <p>Unlike cross-sectional studies, longitudinal studies track the same people, 
     *  and therefore the differences observed in those people are less likely to 
     *  be the result of cultural differences across generations. Longitudinal studies 
     *  are also used in medicine to uncover predictors of certain diseases.</p>
     */
    public static final Individual Longitudinal = M_MODEL.createIndividual( "http://schema.org/Longitudinal", MedicalObservationalStudyDesign );
    
    /** <p>A diet focused on reduced calorie intake.</p> */
    public static final Individual LowCalorieDiet = M_MODEL.createIndividual( "http://schema.org/LowCalorieDiet", RestrictedDiet );
    
    /** <p>A diet focused on reduced fat and cholesterol intake.</p> */
    public static final Individual LowFatDiet = M_MODEL.createIndividual( "http://schema.org/LowFatDiet", RestrictedDiet );
    
    /** <p>A diet appropriate for people with lactose intolerance.</p> */
    public static final Individual LowLactoseDiet = M_MODEL.createIndividual( "http://schema.org/LowLactoseDiet", RestrictedDiet );
    
    /** <p>A diet focused on reduced sodium intake.</p> */
    public static final Individual LowSaltDiet = M_MODEL.createIndividual( "http://schema.org/LowSaltDiet", RestrictedDiet );
    
    /** <p>Lung and respiratory system clinical examination.</p> */
    public static final Individual Lung = M_MODEL.createIndividual( "http://schema.org/Lung", PhysicalExam );
    
    /** <p>Magnetic resonance imaging.</p> */
    public static final Individual MRI = M_MODEL.createIndividual( "http://schema.org/MRI", MedicalImagingTechnique );
    
    /** <p>Represents the manufacturer suggested retail price ("MSRP") of an offered 
     *  product.</p>
     */
    public static final Individual MSRP = M_MODEL.createIndividual( "http://schema.org/MSRP", PriceTypeEnumeration );
    
    /** <p>Indicates that the item is made to order (custom made).</p> */
    public static final Individual MadeToOrder = M_MODEL.createIndividual( "http://schema.org/MadeToOrder", ItemAvailability );
    
    /** <p>The male gender.</p> */
    public static final Individual Male = M_MODEL.createIndividual( "http://schema.org/Male", GenderType );
    
    /** <p>Related topics may be treated by a Topic.</p> */
    public static final Individual MayTreatHealthAspect = M_MODEL.createIndividual( "http://schema.org/MayTreatHealthAspect", HealthAspectEnumeration );
    
    /** <p>Medical researchers.</p> */
    public static final Individual MedicalResearcher = M_MODEL.createIndividual( "http://schema.org/MedicalResearcher", MedicalAudienceType );
    
    /** <p>Specifies that there is a finite window for product returns.</p> */
    public static final Individual MerchantReturnFiniteReturnWindow = M_MODEL.createIndividual( "http://schema.org/MerchantReturnFiniteReturnWindow", MerchantReturnEnumeration );
    
    /** <p>Specifies that product returns are not permitted.</p> */
    public static final Individual MerchantReturnNotPermitted = M_MODEL.createIndividual( "http://schema.org/MerchantReturnNotPermitted", MerchantReturnEnumeration );
    
    /** <p>Specifies that there is an unlimited window for product returns.</p> */
    public static final Individual MerchantReturnUnlimitedWindow = M_MODEL.createIndividual( "http://schema.org/MerchantReturnUnlimitedWindow", MerchantReturnEnumeration );
    
    /** <p>Specifies that a product return policy is not provided.</p> */
    public static final Individual MerchantReturnUnspecified = M_MODEL.createIndividual( "http://schema.org/MerchantReturnUnspecified", MerchantReturnEnumeration );
    
    /** <p>A nurse-like health profession that deals with pregnancy, childbirth, and 
     *  the postpartum period (including care of the newborn), besides sexual and 
     *  reproductive health of women throughout their lives.</p>
     */
    public static final Individual Midwifery = M_MODEL.createIndividual( "http://schema.org/Midwifery", MedicalSpecialty );
    
    /** <p>Represents the minimum advertised price ("MAP") (as dictated by the manufacturer) 
     *  of an offered product.</p>
     */
    public static final Individual MinimumAdvertisedPrice = M_MODEL.createIndividual( "http://schema.org/MinimumAdvertisedPrice", PriceTypeEnumeration );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/minorHumanEdits"&gt;minor 
     *  human edits&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual MinorHumanEditsDigitalSource = M_MODEL.createIndividual( "http://schema.org/MinorHumanEditsDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content about common misconceptions and myths that are related to a topic.</p> */
    public static final Individual MisconceptionsHealthAspect = M_MODEL.createIndividual( "http://schema.org/MisconceptionsHealthAspect", HealthAspectEnumeration );
    
    /** <p>MixedEventAttendanceMode - an event that is conducted as a combination of 
     *  both offline and online modes.</p>
     */
    public static final Individual MixedEventAttendanceMode = M_MODEL.createIndividual( "http://schema.org/MixedEventAttendanceMode", EventAttendanceModeEnumeration );
    
    /** <p>MixtapeAlbum.</p> */
    public static final Individual MixtapeAlbum = M_MODEL.createIndividual( "http://schema.org/MixtapeAlbum", MusicAlbumProductionType );
    
    /** <p>Represents the broad notion of 'mobile' browsers as a Web Platform.</p> */
    public static final Individual MobileWebPlatform = M_MODEL.createIndividual( "http://schema.org/MobileWebPlatform", DigitalPlatformEnumeration );
    
    /** <p>The day of the week between Sunday and Tuesday.</p> */
    public static final Individual Monday = M_MODEL.createIndividual( "http://schema.org/Monday", DayOfWeek );
    
    /** <p>A trial that takes place at multiple centers.</p> */
    public static final Individual MultiCenterTrial = M_MODEL.createIndividual( "http://schema.org/MultiCenterTrial", MedicalTrialDesign );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia"&gt;algorithmic 
     *  media&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual MultiFrameComputationalCaptureDigitalSource = M_MODEL.createIndividual( "http://schema.org/MultiFrameComputationalCaptureDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Play mode: MultiPlayer. Requiring or allowing multiple human players to play 
     *  simultaneously.</p>
     */
    public static final Individual MultiPlayer = M_MODEL.createIndividual( "http://schema.org/MultiPlayer", GamePlayMode );
    
    /** <p>Multicellular parasite that causes an infection.</p> */
    public static final Individual MulticellularParasite = M_MODEL.createIndividual( "http://schema.org/MulticellularParasite", InfectiousAgentClass );
    
    /** <p>A specific branch of medical science that pertains to diagnosis and treatment 
     *  of disorders of muscles, ligaments and skeletal system.</p>
     */
    public static final Individual Musculoskeletal = M_MODEL.createIndividual( "http://schema.org/Musculoskeletal", MedicalSpecialty );
    
    /** <p>Musculoskeletal system clinical examination.</p> */
    public static final Individual MusculoskeletalExam = M_MODEL.createIndividual( "http://schema.org/MusculoskeletalExam", PhysicalExam );
    
    /** <p>Item is a narcotic as defined by the [1961 UN convention](https://www.incb.org/incb/en/narcotic-drugs/Yellowlist/yellow-list.html), 
     *  for example marijuana or heroin.</p>
     */
    public static final Individual NarcoticConsideration = M_MODEL.createIndividual( "http://schema.org/NarcoticConsideration", AdultOrientedEnumeration );
    
    /** <p>Neck assessment with clinical examination.</p> */
    public static final Individual Neck = M_MODEL.createIndividual( "http://schema.org/Neck", PhysicalExam );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/negativeFilm"&gt;negative 
     *  film&lt;/a&gt;&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual NegativeFilmDigitalSource = M_MODEL.createIndividual( "http://schema.org/NegativeFilmDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Neurological system clinical examination.</p> */
    public static final Individual Neuro = M_MODEL.createIndividual( "http://schema.org/Neuro", PhysicalExam );
    
    /** <p>A specific branch of medical science that studies the nerves and nervous system 
     *  and its respective disease states.</p>
     */
    public static final Individual Neurologic = M_MODEL.createIndividual( "http://schema.org/Neurologic", MedicalSpecialty );
    
    /** <p>Indicates that the item is new.</p> */
    public static final Individual NewCondition = M_MODEL.createIndividual( "http://schema.org/NewCondition", OfferItemCondition );
    
    /** <p>A type of medical procedure that involves noninvasive techniques.</p> */
    public static final Individual NoninvasiveProcedure = M_MODEL.createIndividual( "http://schema.org/NoninvasiveProcedure", MedicalProcedureType );
    
    /** <p>Nonprofit501a: Non-profit type referring to Farmers’ Cooperative Associations.</p> */
    public static final Individual Nonprofit501a = M_MODEL.createIndividual( "http://schema.org/Nonprofit501a", USNonprofitType );
    
    /** <p>Nonprofit501c1: Non-profit type referring to Corporations Organized Under 
     *  Act of Congress, including Federal Credit Unions and National Farm Loan Associations.</p>
     */
    public static final Individual Nonprofit501c1 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c1", USNonprofitType );
    
    /** <p>Nonprofit501c10: Non-profit type referring to Domestic Fraternal Societies 
     *  and Associations.</p>
     */
    public static final Individual Nonprofit501c10 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c10", USNonprofitType );
    
    /** <p>Nonprofit501c11: Non-profit type referring to Teachers' Retirement Fund Associations.</p> */
    public static final Individual Nonprofit501c11 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c11", USNonprofitType );
    
    /** <p>Nonprofit501c12: Non-profit type referring to Benevolent Life Insurance Associations, 
     *  Mutual Ditch or Irrigation Companies, Mutual or Cooperative Telephone Companies.</p>
     */
    public static final Individual Nonprofit501c12 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c12", USNonprofitType );
    
    /** <p>Nonprofit501c13: Non-profit type referring to Cemetery Companies.</p> */
    public static final Individual Nonprofit501c13 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c13", USNonprofitType );
    
    /** <p>Nonprofit501c14: Non-profit type referring to State-Chartered Credit Unions, 
     *  Mutual Reserve Funds.</p>
     */
    public static final Individual Nonprofit501c14 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c14", USNonprofitType );
    
    /** <p>Nonprofit501c15: Non-profit type referring to Mutual Insurance Companies or 
     *  Associations.</p>
     */
    public static final Individual Nonprofit501c15 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c15", USNonprofitType );
    
    /** <p>Nonprofit501c16: Non-profit type referring to Cooperative Organizations to 
     *  Finance Crop Operations.</p>
     */
    public static final Individual Nonprofit501c16 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c16", USNonprofitType );
    
    /** <p>Nonprofit501c17: Non-profit type referring to Supplemental Unemployment Benefit 
     *  Trusts.</p>
     */
    public static final Individual Nonprofit501c17 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c17", USNonprofitType );
    
    /** <p>Nonprofit501c18: Non-profit type referring to Employee Funded Pension Trust 
     *  (created before 25 June 1959).</p>
     */
    public static final Individual Nonprofit501c18 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c18", USNonprofitType );
    
    /** <p>Nonprofit501c19: Non-profit type referring to Post or Organization of Past 
     *  or Present Members of the Armed Forces.</p>
     */
    public static final Individual Nonprofit501c19 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c19", USNonprofitType );
    
    /** <p>Nonprofit501c2: Non-profit type referring to Title-holding Corporations for 
     *  Exempt Organizations.</p>
     */
    public static final Individual Nonprofit501c2 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c2", USNonprofitType );
    
    /** <p>Nonprofit501c20: Non-profit type referring to Group Legal Services Plan Organizations.</p> */
    public static final Individual Nonprofit501c20 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c20", USNonprofitType );
    
    /** <p>Nonprofit501c21: Non-profit type referring to Black Lung Benefit Trusts.</p> */
    public static final Individual Nonprofit501c21 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c21", USNonprofitType );
    
    /** <p>Nonprofit501c22: Non-profit type referring to Withdrawal Liability Payment 
     *  Funds.</p>
     */
    public static final Individual Nonprofit501c22 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c22", USNonprofitType );
    
    /** <p>Nonprofit501c23: Non-profit type referring to Veterans Organizations.</p> */
    public static final Individual Nonprofit501c23 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c23", USNonprofitType );
    
    /** <p>Nonprofit501c24: Non-profit type referring to Section 4049 ERISA Trusts.</p> */
    public static final Individual Nonprofit501c24 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c24", USNonprofitType );
    
    /** <p>Nonprofit501c25: Non-profit type referring to Real Property Title-Holding 
     *  Corporations or Trusts with Multiple Parents.</p>
     */
    public static final Individual Nonprofit501c25 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c25", USNonprofitType );
    
    /** <p>Nonprofit501c26: Non-profit type referring to State-Sponsored Organizations 
     *  Providing Health Coverage for High-Risk Individuals.</p>
     */
    public static final Individual Nonprofit501c26 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c26", USNonprofitType );
    
    /** <p>Nonprofit501c27: Non-profit type referring to State-Sponsored Workers' Compensation 
     *  Reinsurance Organizations.</p>
     */
    public static final Individual Nonprofit501c27 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c27", USNonprofitType );
    
    /** <p>Nonprofit501c28: Non-profit type referring to National Railroad Retirement 
     *  Investment Trusts.</p>
     */
    public static final Individual Nonprofit501c28 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c28", USNonprofitType );
    
    /** <p>Nonprofit501c3: Non-profit type referring to Religious, Educational, Charitable, 
     *  Scientific, Literary, Testing for Public Safety, Fostering National or International 
     *  Amateur Sports Competition, or Prevention of Cruelty to Children or Animals 
     *  Organizations.</p>
     */
    public static final Individual Nonprofit501c3 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c3", USNonprofitType );
    
    /** <p>Nonprofit501c4: Non-profit type referring to Civic Leagues, Social Welfare 
     *  Organizations, and Local Associations of Employees.</p>
     */
    public static final Individual Nonprofit501c4 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c4", USNonprofitType );
    
    /** <p>Nonprofit501c5: Non-profit type referring to Labor, Agricultural and Horticultural 
     *  Organizations.</p>
     */
    public static final Individual Nonprofit501c5 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c5", USNonprofitType );
    
    /** <p>Nonprofit501c6: Non-profit type referring to Business Leagues, Chambers of 
     *  Commerce, Real Estate Boards.</p>
     */
    public static final Individual Nonprofit501c6 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c6", USNonprofitType );
    
    /** <p>Nonprofit501c7: Non-profit type referring to Social and Recreational Clubs.</p> */
    public static final Individual Nonprofit501c7 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c7", USNonprofitType );
    
    /** <p>Nonprofit501c8: Non-profit type referring to Fraternal Beneficiary Societies 
     *  and Associations.</p>
     */
    public static final Individual Nonprofit501c8 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c8", USNonprofitType );
    
    /** <p>Nonprofit501c9: Non-profit type referring to Voluntary Employee Beneficiary 
     *  Associations.</p>
     */
    public static final Individual Nonprofit501c9 = M_MODEL.createIndividual( "http://schema.org/Nonprofit501c9", USNonprofitType );
    
    /** <p>Nonprofit501d: Non-profit type referring to Religious and Apostolic Associations.</p> */
    public static final Individual Nonprofit501d = M_MODEL.createIndividual( "http://schema.org/Nonprofit501d", USNonprofitType );
    
    /** <p>Nonprofit501e: Non-profit type referring to Cooperative Hospital Service Organizations.</p> */
    public static final Individual Nonprofit501e = M_MODEL.createIndividual( "http://schema.org/Nonprofit501e", USNonprofitType );
    
    /** <p>Nonprofit501f: Non-profit type referring to Cooperative Service Organizations.</p> */
    public static final Individual Nonprofit501f = M_MODEL.createIndividual( "http://schema.org/Nonprofit501f", USNonprofitType );
    
    /** <p>Nonprofit501k: Non-profit type referring to Child Care Organizations.</p> */
    public static final Individual Nonprofit501k = M_MODEL.createIndividual( "http://schema.org/Nonprofit501k", USNonprofitType );
    
    /** <p>Nonprofit501n: Non-profit type referring to Charitable Risk Pools.</p> */
    public static final Individual Nonprofit501n = M_MODEL.createIndividual( "http://schema.org/Nonprofit501n", USNonprofitType );
    
    /** <p>Nonprofit501q: Non-profit type referring to Credit Counseling Organizations.</p> */
    public static final Individual Nonprofit501q = M_MODEL.createIndividual( "http://schema.org/Nonprofit501q", USNonprofitType );
    
    /** <p>Nonprofit527: Non-profit type referring to political organizations.</p> */
    public static final Individual Nonprofit527 = M_MODEL.createIndividual( "http://schema.org/Nonprofit527", USNonprofitType );
    
    /** <p>NonprofitANBI: Non-profit type referring to a Public Benefit Organization 
     *  (NL).</p>
     */
    public static final Individual NonprofitANBI = M_MODEL.createIndividual( "http://schema.org/NonprofitANBI", NLNonprofitType );
    
    /** <p>NonprofitSBBI: Non-profit type referring to a Social Interest Promoting Institution 
     *  (NL).</p>
     */
    public static final Individual NonprofitSBBI = M_MODEL.createIndividual( "http://schema.org/NonprofitSBBI", NLNonprofitType );
    
    /** <p>Nose function assessment with clinical examination.</p> */
    public static final Individual Nose = M_MODEL.createIndividual( "http://schema.org/Nose", PhysicalExam );
    
    /** <p>Indicates that a legislation is currently not in force.</p> */
    public static final Individual NotInForce = M_MODEL.createIndividual( "http://schema.org/NotInForce", LegalForceStatus );
    
    /** <p>Not yet recruiting.</p> */
    public static final Individual NotYetRecruiting = M_MODEL.createIndividual( "http://schema.org/NotYetRecruiting", MedicalStudyStatus );
    
    /** <p>A health profession of a person formally educated and trained in the care 
     *  of the sick or infirm person.</p>
     */
    public static final Individual Nursing = M_MODEL.createIndividual( "http://schema.org/Nursing", MedicalSpecialty );
    
    /** <p>The character of a medical substance, typically a medicine, of being available 
     *  over the counter or not.</p>
     */
    public static final Individual OTC = M_MODEL.createIndividual( "http://schema.org/OTC", DrugPrescriptionStatus );
    
    /** <p>An observational study design.</p> */
    public static final Individual Observational = M_MODEL.createIndividual( "http://schema.org/Observational", MedicalObservationalStudyDesign );
    
    /** <p>A specific branch of medical science that specializes in the care of women 
     *  during the prenatal and postnatal care and with the delivery of the child.</p>
     */
    public static final Individual Obstetric = M_MODEL.createIndividual( "http://schema.org/Obstetric", MedicalSpecialty );
    
    /** <p>Any physical activity engaged in for job-related purposes. Examples may include 
     *  waiting tables, maid service, carrying a mailbag, picking fruits or vegetables, 
     *  construction work, etc.</p>
     */
    public static final Individual OccupationalActivity = M_MODEL.createIndividual( "http://schema.org/OccupationalActivity", PhysicalActivityCategory );
    
    /** <p>All the documents published by an official publisher should have at least 
     *  the legal value level "OfficialLegalValue". This indicates that the document 
     *  was published by an organisation with the public task of making it available 
     *  (e.g. a consolidated version of a EU directive published by the EU Office 
     *  of Publications).</p>
     */
    public static final Individual OfficialLegalValue = M_MODEL.createIndividual( "http://schema.org/OfficialLegalValue", LegalValueLevel );
    
    /** <p>OfflineEventAttendanceMode - an event that is primarily conducted offline.</p> */
    public static final Individual OfflineEventAttendanceMode = M_MODEL.createIndividual( "http://schema.org/OfflineEventAttendanceMode", EventAttendanceModeEnumeration );
    
    /** <p>Game server status: OfflinePermanently. Server is offline and not available.</p> */
    public static final Individual OfflinePermanently = M_MODEL.createIndividual( "http://schema.org/OfflinePermanently", GameServerStatus );
    
    /** <p>Game server status: OfflineTemporarily. Server is offline now but it can be 
     *  online soon.</p>
     */
    public static final Individual OfflineTemporarily = M_MODEL.createIndividual( "http://schema.org/OfflineTemporarily", GameServerStatus );
    
    /** <p>A DeliveryMethod in which an item is collected on site, e.g. in a store or 
     *  at a box office.</p>
     */
    public static final Individual OnSitePickup = M_MODEL.createIndividual( "http://schema.org/OnSitePickup", DeliveryMethod );
    
    /** <p>A specific branch of medical science that deals with benign and malignant 
     *  tumors, including the study of their development, diagnosis, treatment and 
     *  prevention.</p>
     */
    public static final Individual Oncologic = M_MODEL.createIndividual( "http://schema.org/Oncologic", MedicalSpecialty );
    
    /** <p>OneTimePayments: this is a benefit for one-time payments for individuals.</p> */
    public static final Individual OneTimePayments = M_MODEL.createIndividual( "http://schema.org/OneTimePayments", GovernmentBenefitsType );
    
    /** <p>Game server status: Online. Server is available.</p> */
    public static final Individual Online = M_MODEL.createIndividual( "http://schema.org/Online", GameServerStatus );
    
    /** <p>OnlineEventAttendanceMode - an event that is primarily conducted online.</p> */
    public static final Individual OnlineEventAttendanceMode = M_MODEL.createIndividual( "http://schema.org/OnlineEventAttendanceMode", EventAttendanceModeEnumeration );
    
    /** <p>Game server status: OnlineFull. Server is online but unavailable. The maximum 
     *  number of players has reached.</p>
     */
    public static final Individual OnlineFull = M_MODEL.createIndividual( "http://schema.org/OnlineFull", GameServerStatus );
    
    /** <p>Indicates that the item is available only online.</p> */
    public static final Individual OnlineOnly = M_MODEL.createIndividual( "http://schema.org/OnlineOnly", ItemAvailability );
    
    /** <p>A trial design in which the researcher knows the full details of the treatment, 
     *  and so does the patient.</p>
     */
    public static final Individual OpenTrial = M_MODEL.createIndividual( "http://schema.org/OpenTrial", MedicalTrialDesign );
    
    /** <p>The science or practice of testing visual acuity and prescribing corrective 
     *  lenses.</p>
     */
    public static final Individual Optometric = M_MODEL.createIndividual( "http://schema.org/Optometric", MedicalSpecialty );
    
    /** <p>OrderStatus representing cancellation of an order.</p> */
    public static final Individual OrderCancelled = M_MODEL.createIndividual( "http://schema.org/OrderCancelled", OrderStatus );
    
    /** <p>OrderStatus representing successful delivery of an order.</p> */
    public static final Individual OrderDelivered = M_MODEL.createIndividual( "http://schema.org/OrderDelivered", OrderStatus );
    
    /** <p>OrderStatus representing that an order is in transit.</p> */
    public static final Individual OrderInTransit = M_MODEL.createIndividual( "http://schema.org/OrderInTransit", OrderStatus );
    
    /** <p>OrderStatus representing that payment is due on an order.</p> */
    public static final Individual OrderPaymentDue = M_MODEL.createIndividual( "http://schema.org/OrderPaymentDue", OrderStatus );
    
    /** <p>OrderStatus representing availability of an order for pickup.</p> */
    public static final Individual OrderPickupAvailable = M_MODEL.createIndividual( "http://schema.org/OrderPickupAvailable", OrderStatus );
    
    /** <p>OrderStatus representing that there is a problem with the order.</p> */
    public static final Individual OrderProblem = M_MODEL.createIndividual( "http://schema.org/OrderProblem", OrderStatus );
    
    /** <p>OrderStatus representing that an order is being processed.</p> */
    public static final Individual OrderProcessing = M_MODEL.createIndividual( "http://schema.org/OrderProcessing", OrderStatus );
    
    /** <p>OrderStatus representing that an order has been returned.</p> */
    public static final Individual OrderReturned = M_MODEL.createIndividual( "http://schema.org/OrderReturned", OrderStatus );
    
    /** <p>Content coded 'as original media content' in a [[MediaReview]], considered 
     *  in the context of how it was published or shared. For a [[VideoObject]] to 
     *  be 'original': No evidence the footage has been misleadingly altered or manipulated, 
     *  though it may contain false or misleading claims. For an [[ImageObject]] to 
     *  be 'original': No evidence the image has been misleadingly altered or manipulated, 
     *  though it may still contain false or misleading claims. For an [[ImageObject]] 
     *  with embedded text to be 'original': No evidence the image has been misleadingly 
     *  altered or manipulated, though it may still contain false or misleading claims. 
     *  For an [[AudioObject]] to be 'original': No evidence the audio has been misleadingly 
     *  altered or manipulated, though it may contain false or misleading claims.</p>
     */
    public static final Individual OriginalMediaContent = M_MODEL.createIndividual( "http://schema.org/OriginalMediaContent", MediaManipulationRatingEnumeration );
    
    /** <p>Specifies that the customer must pay the original shipping costs when returning 
     *  a product.</p>
     */
    public static final Individual OriginalShippingFees = M_MODEL.createIndividual( "http://schema.org/OriginalShippingFees", ReturnFeesEnumeration );
    
    /** <p>A system of medicine focused on promoting the body's innate ability to heal 
     *  itself.</p>
     */
    public static final Individual Osteopathic = M_MODEL.createIndividual( "http://schema.org/Osteopathic", MedicineSystem );
    
    /** <p>A specific branch of medical science that is concerned with the ear, nose 
     *  and throat and their respective disease states.</p>
     */
    public static final Individual Otolaryngologic = M_MODEL.createIndividual( "http://schema.org/Otolaryngologic", MedicalSpecialty );
    
    /** <p>Indicates that the item is out of stock.</p> */
    public static final Individual OutOfStock = M_MODEL.createIndividual( "http://schema.org/OutOfStock", ItemAvailability );
    
    /** <p>Overview of the content. Contains a summarized view of the topic with the 
     *  most relevant information for an introduction.</p>
     */
    public static final Individual OverviewHealthAspect = M_MODEL.createIndividual( "http://schema.org/OverviewHealthAspect", HealthAspectEnumeration );
    
    /** <p>Positron emission tomography imaging.</p> */
    public static final Individual PET = M_MODEL.createIndividual( "http://schema.org/PET", MedicalImagingTechnique );
    
    /** <p>PaidLeave: this is a benefit for paid leave.</p> */
    public static final Individual PaidLeave = M_MODEL.createIndividual( "http://schema.org/PaidLeave", GovernmentBenefitsType );
    
    /** <p>Book format: Paperback.</p> */
    public static final Individual Paperback = M_MODEL.createIndividual( "http://schema.org/Paperback", BookFormatType );
    
    /** <p>A private parcel service as the delivery mode available for a certain offer.
     *  
     *  Commonly used values:
     *  
     *  * http://purl.org/goodrelations/v1#DHL
     *  * http://purl.org/goodrelations/v1#FederalExpress
     *  * http://purl.org/goodrelations/v1#UPS</p>
     */
    public static final Individual ParcelService = M_MODEL.createIndividual( "http://schema.org/ParcelService", DeliveryMethod );
    
    /** <p>ParentalSupport: this is a benefit for parental support.</p> */
    public static final Individual ParentalSupport = M_MODEL.createIndividual( "http://schema.org/ParentalSupport", GovernmentBenefitsType );
    
    /** <p>A parking map.</p> */
    public static final Individual ParkingMap = M_MODEL.createIndividual( "http://schema.org/ParkingMap", MapCategoryType );
    
    /** <p>Indicates that parts of the legislation are in force, and parts are not.</p> */
    public static final Individual PartiallyInForce = M_MODEL.createIndividual( "http://schema.org/PartiallyInForce", LegalForceStatus );
    
    /** <p>A specific branch of medical science that is concerned with the study of the 
     *  cause, origin and nature of a disease state, including its consequences as 
     *  a result of manifestation of the disease. In clinical care, the term is used 
     *  to designate a branch of medicine using laboratory tests to diagnose and determine 
     *  the prognostic significance of illness.</p>
     */
    public static final Individual Pathology = M_MODEL.createIndividual( "http://schema.org/Pathology", MedicalSpecialty );
    
    /** <p>Content about the real life experience of patients or people that have lived 
     *  a similar experience about the topic. May be forums, topics, Q-and-A and related 
     *  material.</p>
     */
    public static final Individual PatientExperienceHealthAspect = M_MODEL.createIndividual( "http://schema.org/PatientExperienceHealthAspect", HealthAspectEnumeration );
    
    /** <p>An automatic payment system is in place and will be used.</p> */
    public static final Individual PaymentAutomaticallyApplied = M_MODEL.createIndividual( "http://schema.org/PaymentAutomaticallyApplied", PaymentStatusType );
    
    /** <p>The payment has been received and processed.</p> */
    public static final Individual PaymentComplete = M_MODEL.createIndividual( "http://schema.org/PaymentComplete", PaymentStatusType );
    
    /** <p>The payee received the payment, but it was declined for some reason.</p> */
    public static final Individual PaymentDeclined = M_MODEL.createIndividual( "http://schema.org/PaymentDeclined", PaymentStatusType );
    
    /** <p>The payment is due, but still within an acceptable time to be received.</p> */
    public static final Individual PaymentDue = M_MODEL.createIndividual( "http://schema.org/PaymentDue", PaymentStatusType );
    
    /** <p>The payment is due and considered late.</p> */
    public static final Individual PaymentPastDue = M_MODEL.createIndividual( "http://schema.org/PaymentPastDue", PaymentStatusType );
    
    /** <p>A specific branch of medical science that specializes in the care of infants, 
     *  children and adolescents.</p>
     */
    public static final Individual Pediatric = M_MODEL.createIndividual( "http://schema.org/Pediatric", MedicalSpecialty );
    
    /** <p>A type of medical procedure that involves percutaneous techniques, where access 
     *  to organs or tissue is achieved via needle-puncture of the skin. For example, 
     *  catheter-based procedures like stent delivery.</p>
     */
    public static final Individual PercutaneousProcedure = M_MODEL.createIndividual( "http://schema.org/PercutaneousProcedure", MedicalProcedureType );
    
    /** <p>The practice or art and science of preparing and dispensing drugs and medicines.</p> */
    public static final Individual PharmacySpecialty = M_MODEL.createIndividual( "http://schema.org/PharmacySpecialty", MedicalSpecialty );
    
    /** <p>Payment by billing via the phone carrier.</p> */
    public static final Individual PhoneCarrierPayment = M_MODEL.createIndividual( "http://schema.org/PhoneCarrierPayment", PaymentMethodType );
    
    /** <p>The practice of treatment of disease, injury, or deformity by physical methods 
     *  such as massage, heat treatment, and exercise rather than by drugs or surgery.</p>
     */
    public static final Individual Physiotherapy = M_MODEL.createIndividual( "http://schema.org/Physiotherapy", MedicalSpecialty );
    
    /** <p>A placebo-controlled trial design.</p> */
    public static final Individual PlaceboControlledTrial = M_MODEL.createIndividual( "http://schema.org/PlaceboControlledTrial", MedicalTrialDesign );
    
    /** <p>A specific branch of medical science that pertains to therapeutic or cosmetic 
     *  repair or re-formation of missing, injured or malformed tissues or body parts 
     *  by manual and instrumental means.</p>
     */
    public static final Individual PlasticSurgery = M_MODEL.createIndividual( "http://schema.org/PlasticSurgery", MedicalSpecialty );
    
    /** <p>Podiatry is the care of the human foot, especially the diagnosis and treatment 
     *  of foot disorders.</p>
     */
    public static final Individual Podiatric = M_MODEL.createIndividual( "http://schema.org/Podiatric", MedicalSpecialty );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/positiveFilm"&gt;positive 
     *  film&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual PositiveFilmDigitalSource = M_MODEL.createIndividual( "http://schema.org/PositiveFilmDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>A description of an action that is supported.</p> */
    public static final Individual PotentialActionStatus = M_MODEL.createIndividual( "http://schema.org/PotentialActionStatus", ActionStatusType );
    
    /** <p>Indicates that the item is available for pre-order.</p> */
    public static final Individual PreOrder = M_MODEL.createIndividual( "http://schema.org/PreOrder", ItemAvailability );
    
    /** <p>Indicates that the item is available for ordering and delivery before general 
     *  availability.</p>
     */
    public static final Individual PreSale = M_MODEL.createIndividual( "http://schema.org/PreSale", ItemAvailability );
    
    /** <p>Content discussing pregnancy-related aspects of a health topic.</p> */
    public static final Individual PregnancyHealthAspect = M_MODEL.createIndividual( "http://schema.org/PregnancyHealthAspect", HealthAspectEnumeration );
    
    /** <p>Available by prescription only.</p> */
    public static final Individual PrescriptionOnly = M_MODEL.createIndividual( "http://schema.org/PrescriptionOnly", DrugPrescriptionStatus );
    
    /** <p>Information about actions or measures that can be taken to avoid getting the 
     *  topic or reaching a critical situation related to the topic.</p>
     */
    public static final Individual PreventionHealthAspect = M_MODEL.createIndividual( "http://schema.org/PreventionHealthAspect", HealthAspectEnumeration );
    
    /** <p>The medical care by a physician, or other health-care professional, who is 
     *  the patient's first contact with the health-care system and who may recommend 
     *  a specialist if necessary.</p>
     */
    public static final Individual PrimaryCare = M_MODEL.createIndividual( "http://schema.org/PrimaryCare", MedicalSpecialty );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/print"&gt;print&lt;/a&gt;' 
     *  using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual PrintDigitalSource = M_MODEL.createIndividual( "http://schema.org/PrintDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>A prion is an infectious agent composed of protein in a misfolded form.</p> */
    public static final Individual Prion = M_MODEL.createIndividual( "http://schema.org/Prion", InfectiousAgentClass );
    
    /** <p>Typical progression and happenings of life course of the topic.</p> */
    public static final Individual PrognosisHealthAspect = M_MODEL.createIndividual( "http://schema.org/PrognosisHealthAspect", HealthAspectEnumeration );
    
    /** <p>Single-celled organism that causes an infection.</p> */
    public static final Individual Protozoa = M_MODEL.createIndividual( "http://schema.org/Protozoa", InfectiousAgentClass );
    
    /** <p>A specific branch of medical science that is concerned with the study, treatment, 
     *  and prevention of mental illness, using both medical and psychological therapies.</p>
     */
    public static final Individual Psychiatric = M_MODEL.createIndividual( "http://schema.org/Psychiatric", MedicalSpecialty );
    
    /** <p>Branch of medicine that pertains to the health services to improve and protect 
     *  community health, especially epidemiology, sanitation, immunization, and preventive 
     *  medicine.</p>
     */
    public static final Individual PublicHealth = M_MODEL.createIndividual( "http://schema.org/PublicHealth", MedicalSpecialty );
    
    /** <p>This stands for any day that is a public holiday; it is a placeholder for 
     *  all official public holidays in some particular location. While not technically 
     *  a "day of the week", it can be used with [[OpeningHoursSpecification]]. In 
     *  the context of an opening hours specification it can be used to indicate opening 
     *  hours on public holidays, overriding general opening hours for the day of 
     *  the week on which a public holiday occurs.</p>
     */
    public static final Individual PublicHolidays = M_MODEL.createIndividual( "http://schema.org/PublicHolidays", DayOfWeek );
    
    /** <p>A specific branch of medical science that pertains to the study of the respiratory 
     *  system and its respective disease states.</p>
     */
    public static final Individual Pulmonary = M_MODEL.createIndividual( "http://schema.org/Pulmonary", MedicalSpecialty );
    
    /** <p>This is a lease of an item.</p> */
    public static final Individual PurchaseTypeLease = M_MODEL.createIndividual( "http://schema.org/PurchaseTypeLease", PurchaseType );
    
    /** <p>This is a purchase of a new item.</p> */
    public static final Individual PurchaseTypeNewPurchase = M_MODEL.createIndividual( "http://schema.org/PurchaseTypeNewPurchase", PurchaseType );
    
    /** <p>This is a trade-in for an item.</p> */
    public static final Individual PurchaseTypeTradeIn = M_MODEL.createIndividual( "http://schema.org/PurchaseTypeTradeIn", PurchaseType );
    
    /** <p>This is a purchase of a used item.</p> */
    public static final Individual PurchaseTypeUsedPurchase = M_MODEL.createIndividual( "http://schema.org/PurchaseTypeUsedPurchase", PurchaseType );
    
    /** <p>Radiography is an imaging technique that uses electromagnetic radiation other 
     *  than visible light, especially X-rays, to view the internal structure of a 
     *  non-uniformly composed and opaque object such as the human body.</p>
     */
    public static final Individual Radiography = M_MODEL.createIndividual( "http://schema.org/Radiography", MedicalSpecialty );
    
    /** <p>A randomized trial design.</p> */
    public static final Individual RandomizedTrial = M_MODEL.createIndividual( "http://schema.org/RandomizedTrial", MedicalTrialDesign );
    
    /** <p>Permission to read or view the document.</p> */
    public static final Individual ReadPermission = M_MODEL.createIndividual( "http://schema.org/ReadPermission", DigitalDocumentPermissionType );
    
    /** <p>Real-wheel drive is a transmission layout where the engine drives the rear 
     *  wheels.</p>
     */
    public static final Individual RearWheelDriveConfiguration = M_MODEL.createIndividual( "http://schema.org/RearWheelDriveConfiguration", DriveWheelConfigurationValue );
    
    /** <p>Recruiting participants.</p> */
    public static final Individual Recruiting = M_MODEL.createIndividual( "http://schema.org/Recruiting", MedicalStudyStatus );
    
    /** <p>A general code for cases where relevance to children is reduced, e.g. adult 
     *  education, mortgages, retirement-related products, etc.</p>
     */
    public static final Individual ReducedRelevanceForChildrenConsideration = M_MODEL.createIndividual( "http://schema.org/ReducedRelevanceForChildrenConsideration", AdultOrientedEnumeration );
    
    /** <p>Indicates that the item is refurbished.</p> */
    public static final Individual RefurbishedCondition = M_MODEL.createIndividual( "http://schema.org/RefurbishedCondition", OfferItemCondition );
    
    /** <p>A registry-based study design.</p> */
    public static final Individual Registry = M_MODEL.createIndividual( "http://schema.org/Registry", MedicalObservationalStudyDesign );
    
    /** <p>Represents the regular price of an offered product. This is usually the advertised 
     *  price before a temporary sale. Once the sale period ends the advertised price 
     *  will go back to the regular price.</p>
     */
    public static final Individual RegularPrice = M_MODEL.createIndividual( "http://schema.org/RegularPrice", PriceTypeEnumeration );
    
    /** <p>The drug's cost represents the maximum reimbursement paid by an insurer for 
     *  the drug.</p>
     */
    public static final Individual ReimbursementCap = M_MODEL.createIndividual( "http://schema.org/ReimbursementCap", DrugCostCategory );
    
    /** <p>Other prominent or relevant topics tied to the main topic.</p> */
    public static final Individual RelatedTopicsHealthAspect = M_MODEL.createIndividual( "http://schema.org/RelatedTopicsHealthAspect", HealthAspectEnumeration );
    
    /** <p>RemixAlbum.</p> */
    public static final Individual RemixAlbum = M_MODEL.createIndividual( "http://schema.org/RemixAlbum", MusicAlbumProductionType );
    
    /** <p>A specific branch of medical science that pertains to the study of the kidneys 
     *  and its respective disease states.</p>
     */
    public static final Individual Renal = M_MODEL.createIndividual( "http://schema.org/Renal", MedicalSpecialty );
    
    /** <p>Indicates the usage of the vehicle as a rental car.</p> */
    public static final Individual RentalVehicleUsage = M_MODEL.createIndividual( "http://schema.org/RentalVehicleUsage", CarUsageType );
    
    /** <p>The status for a previously confirmed reservation that is now cancelled.</p> */
    public static final Individual ReservationCancelled = M_MODEL.createIndividual( "http://schema.org/ReservationCancelled", ReservationStatusType );
    
    /** <p>The status of a confirmed reservation.</p> */
    public static final Individual ReservationConfirmed = M_MODEL.createIndividual( "http://schema.org/ReservationConfirmed", ReservationStatusType );
    
    /** <p>The status of a reservation on hold pending an update like credit card number 
     *  or flight changes.</p>
     */
    public static final Individual ReservationHold = M_MODEL.createIndividual( "http://schema.org/ReservationHold", ReservationStatusType );
    
    /** <p>The status of a reservation when a request has been sent, but not confirmed.</p> */
    public static final Individual ReservationPending = M_MODEL.createIndividual( "http://schema.org/ReservationPending", ReservationStatusType );
    
    /** <p>Indicates that the item is reserved and therefore not available.</p> */
    public static final Individual Reserved = M_MODEL.createIndividual( "http://schema.org/Reserved", ItemAvailability );
    
    /** <p>The therapy that is concerned with the maintenance or improvement of respiratory 
     *  function (as in patients with pulmonary disease).</p>
     */
    public static final Individual RespiratoryTherapy = M_MODEL.createIndividual( "http://schema.org/RespiratoryTherapy", MedicalSpecialty );
    
    /** <p>Specifies that the customer must pay a restocking fee when returning a product.</p> */
    public static final Individual RestockingFees = M_MODEL.createIndividual( "http://schema.org/RestockingFees", ReturnFeesEnumeration );
    
    /** <p>Results are available.</p> */
    public static final Individual ResultsAvailable = M_MODEL.createIndividual( "http://schema.org/ResultsAvailable", MedicalStudyStatus );
    
    /** <p>Results are not available.</p> */
    public static final Individual ResultsNotAvailable = M_MODEL.createIndividual( "http://schema.org/ResultsNotAvailable", MedicalStudyStatus );
    
    /** <p>The drug's cost represents the retail cost of the drug.</p> */
    public static final Individual Retail = M_MODEL.createIndividual( "http://schema.org/Retail", DrugCostCategory );
    
    /** <p>Specifies that product returns must be made at a kiosk.</p> */
    public static final Individual ReturnAtKiosk = M_MODEL.createIndividual( "http://schema.org/ReturnAtKiosk", ReturnMethodEnumeration );
    
    /** <p>Specifies that product returns must be done by mail.</p> */
    public static final Individual ReturnByMail = M_MODEL.createIndividual( "http://schema.org/ReturnByMail", ReturnMethodEnumeration );
    
    /** <p>Specifies that product returns must be paid for, and are the responsibility 
     *  of, the customer.</p>
     */
    public static final Individual ReturnFeesCustomerResponsibility = M_MODEL.createIndividual( "http://schema.org/ReturnFeesCustomerResponsibility", ReturnFeesEnumeration );
    
    /** <p>Specifies that product returns must be made in a store.</p> */
    public static final Individual ReturnInStore = M_MODEL.createIndividual( "http://schema.org/ReturnInStore", ReturnMethodEnumeration );
    
    /** <p>Indicated that creating a return label is the responsibility of the customer.</p> */
    public static final Individual ReturnLabelCustomerResponsibility = M_MODEL.createIndividual( "http://schema.org/ReturnLabelCustomerResponsibility", ReturnLabelSourceEnumeration );
    
    /** <p>Indicated that a return label must be downloaded and printed by the customer.</p> */
    public static final Individual ReturnLabelDownloadAndPrint = M_MODEL.createIndividual( "http://schema.org/ReturnLabelDownloadAndPrint", ReturnLabelSourceEnumeration );
    
    /** <p>Specifies that a return label will be provided by the seller in the shipping 
     *  box.</p>
     */
    public static final Individual ReturnLabelInBox = M_MODEL.createIndividual( "http://schema.org/ReturnLabelInBox", ReturnLabelSourceEnumeration );
    
    /** <p>Specifies that the customer must pay the return shipping costs when returning 
     *  a product.</p>
     */
    public static final Individual ReturnShippingFees = M_MODEL.createIndividual( "http://schema.org/ReturnShippingFees", ReturnFeesEnumeration );
    
    /** <p>A specific branch of medical science that deals with the study and treatment 
     *  of rheumatic, autoimmune or joint diseases.</p>
     */
    public static final Individual Rheumatologic = M_MODEL.createIndividual( "http://schema.org/Rheumatologic", MedicalSpecialty );
    
    /** <p>The steering position is on the right side of the vehicle (viewed from the 
     *  main direction of driving).</p>
     */
    public static final Individual RightHandDriving = M_MODEL.createIndividual( "http://schema.org/RightHandDriving", SteeringPositionValue );
    
    /** <p>Information about the risk factors and possible complications that may follow 
     *  a topic.</p>
     */
    public static final Individual RisksOrComplicationsHealthAspect = M_MODEL.createIndividual( "http://schema.org/RisksOrComplicationsHealthAspect", HealthAspectEnumeration );
    
    /** <p>The invitee may or may not attend.</p> */
    public static final Individual RsvpResponseMaybe = M_MODEL.createIndividual( "http://schema.org/RsvpResponseMaybe", RsvpResponseType );
    
    /** <p>The invitee will not attend.</p> */
    public static final Individual RsvpResponseNo = M_MODEL.createIndividual( "http://schema.org/RsvpResponseNo", RsvpResponseType );
    
    /** <p>The invitee will attend.</p> */
    public static final Individual RsvpResponseYes = M_MODEL.createIndividual( "http://schema.org/RsvpResponseYes", RsvpResponseType );
    
    /** <p>Represents the suggested retail price ("SRP") of an offered product.</p> */
    public static final Individual SRP = M_MODEL.createIndividual( "http://schema.org/SRP", PriceTypeEnumeration );
    
    /** <p>Content about the safety-related aspects of a health topic.</p> */
    public static final Individual SafetyHealthAspect = M_MODEL.createIndividual( "http://schema.org/SafetyHealthAspect", HealthAspectEnumeration );
    
    /** <p>Represents a sale price (usually active for a limited period) of an offered 
     *  product.</p>
     */
    public static final Individual SalePrice = M_MODEL.createIndividual( "http://schema.org/SalePrice", PriceTypeEnumeration );
    
    /** <p>Content coded 'satire or parody content' in a [[MediaReview]], considered 
     *  in the context of how it was published or shared. For a [[VideoObject]] to 
     *  be 'satire or parody content': A video that was created as political or humorous 
     *  commentary and is presented in that context. (Reshares of satire/parody content 
     *  that do not include relevant context are more likely to fall under the “missing 
     *  context” rating.) For an [[ImageObject]] to be 'satire or parody content': 
     *  An image that was created as political or humorous commentary and is presented 
     *  in that context. (Reshares of satire/parody content that do not include relevant 
     *  context are more likely to fall under the “missing context” rating.) For an 
     *  [[ImageObject]] with embedded text to be 'satire or parody content': An image 
     *  that was created as political or humorous commentary and is presented in that 
     *  context. (Reshares of satire/parody content that do not include relevant context 
     *  are more likely to fall under the “missing context” rating.) For an [[AudioObject]] 
     *  to be 'satire or parody content': Audio that was created as political or humorous 
     *  commentary and is presented in that context. (Reshares of satire/parody content 
     *  that do not include relevant context are more likely to fall under the “missing 
     *  context” rating.)</p>
     */
    public static final Individual SatireOrParodyContent = M_MODEL.createIndividual( "http://schema.org/SatireOrParodyContent", MediaManipulationRatingEnumeration );
    
    /** <p>The day of the week between Friday and Sunday.</p> */
    public static final Individual Saturday = M_MODEL.createIndividual( "http://schema.org/Saturday", DayOfWeek );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/algorithmicMedia"&gt;algorithmic 
     *  media&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual ScreenCaptureDigitalSource = M_MODEL.createIndividual( "http://schema.org/ScreenCaptureDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content about how to screen or further filter a topic.</p> */
    public static final Individual ScreeningHealthAspect = M_MODEL.createIndividual( "http://schema.org/ScreeningHealthAspect", HealthAspectEnumeration );
    
    /** <p>A seating map.</p> */
    public static final Individual SeatingMap = M_MODEL.createIndividual( "http://schema.org/SeatingMap", MapCategoryType );
    
    /** <p>Information about questions that may be asked, when to see a professional, 
     *  measures before seeing a doctor or content about the first consultation.</p>
     */
    public static final Individual SeeDoctorHealthAspect = M_MODEL.createIndividual( "http://schema.org/SeeDoctorHealthAspect", HealthAspectEnumeration );
    
    /** <p>Self care actions or measures that can be taken to sooth, health or avoid 
     *  a topic. This may be carried at home and can be carried/managed by the person 
     *  itself.</p>
     */
    public static final Individual SelfCareHealthAspect = M_MODEL.createIndividual( "http://schema.org/SelfCareHealthAspect", HealthAspectEnumeration );
    
    /** <p>The item contains sexually oriented content such as nudity, suggestive or 
     *  explicit material, or related online services, or is intended to enhance sexual 
     *  activity. Examples: Erotic videos or magazine, sexual enhancement devices, 
     *  sex toys.</p>
     */
    public static final Individual SexualContentConsideration = M_MODEL.createIndividual( "http://schema.org/SexualContentConsideration", AdultOrientedEnumeration );
    
    /** <p>Side effects that can be observed from the usage of the topic.</p> */
    public static final Individual SideEffectsHealthAspect = M_MODEL.createIndividual( "http://schema.org/SideEffectsHealthAspect", HealthAspectEnumeration );
    
    /** <p>A trial design in which the researcher knows which treatment the patient was 
     *  randomly assigned to but the patient does not.</p>
     */
    public static final Individual SingleBlindedTrial = M_MODEL.createIndividual( "http://schema.org/SingleBlindedTrial", MedicalTrialDesign );
    
    /** <p>A trial that takes place at a single center.</p> */
    public static final Individual SingleCenterTrial = M_MODEL.createIndividual( "http://schema.org/SingleCenterTrial", MedicalTrialDesign );
    
    /** <p>Play mode: SinglePlayer. Which is played by a lone player.</p> */
    public static final Individual SinglePlayer = M_MODEL.createIndividual( "http://schema.org/SinglePlayer", GamePlayMode );
    
    /** <p>SingleRelease.</p> */
    public static final Individual SingleRelease = M_MODEL.createIndividual( "http://schema.org/SingleRelease", MusicAlbumReleaseType );
    
    /** <p>Imperial size system.</p> */
    public static final Individual SizeSystemImperial = M_MODEL.createIndividual( "http://schema.org/SizeSystemImperial", SizeSystemEnumeration );
    
    /** <p>Metric size system.</p> */
    public static final Individual SizeSystemMetric = M_MODEL.createIndividual( "http://schema.org/SizeSystemMetric", SizeSystemEnumeration );
    
    /** <p>Skin assessment with clinical examination.</p> */
    public static final Individual Skin = M_MODEL.createIndividual( "http://schema.org/Skin", PhysicalExam );
    
    /** <p>Indicates that the item has sold out.</p> */
    public static final Individual SoldOut = M_MODEL.createIndividual( "http://schema.org/SoldOut", ItemAvailability );
    
    /** <p>SoundtrackAlbum.</p> */
    public static final Individual SoundtrackAlbum = M_MODEL.createIndividual( "http://schema.org/SoundtrackAlbum", MusicAlbumProductionType );
    
    /** <p>The scientific study and treatment of defects, disorders, and malfunctions 
     *  of speech and voice, as stuttering, lisping, or lalling, and of language disturbances, 
     *  as aphasia or delayed language acquisition.</p>
     */
    public static final Individual SpeechPathology = M_MODEL.createIndividual( "http://schema.org/SpeechPathology", MedicalSpecialty );
    
    /** <p>SpokenWordAlbum.</p> */
    public static final Individual SpokenWordAlbum = M_MODEL.createIndividual( "http://schema.org/SpokenWordAlbum", MusicAlbumProductionType );
    
    /** <p>Content coded 'staged content' in a [[MediaReview]], considered in the context 
     *  of how it was published or shared. For a [[VideoObject]] to be 'staged content': 
     *  A video that has been created using actors or similarly contrived. For an 
     *  [[ImageObject]] to be 'staged content': An image that was created using actors 
     *  or similarly contrived, such as a screenshot of a fake tweet. For an [[ImageObject]] 
     *  with embedded text to be 'staged content': An image that was created using 
     *  actors or similarly contrived, such as a screenshot of a fake tweet. For an 
     *  [[AudioObject]] to be 'staged content': Audio that has been created using 
     *  actors or similarly contrived.</p>
     */
    public static final Individual StagedContent = M_MODEL.createIndividual( "http://schema.org/StagedContent", MediaManipulationRatingEnumeration );
    
    /** <p>Stages that can be observed from a topic.</p> */
    public static final Individual StagesHealthAspect = M_MODEL.createIndividual( "http://schema.org/StagesHealthAspect", HealthAspectEnumeration );
    
    /** <p>Specifies that the customer receives a store credit as refund when returning 
     *  a product.</p>
     */
    public static final Individual StoreCreditRefund = M_MODEL.createIndividual( "http://schema.org/StoreCreditRefund", RefundTypeEnumeration );
    
    /** <p>Physical activity that is engaged in to improve muscle and bone strength. 
     *  Also referred to as resistance training.</p>
     */
    public static final Individual StrengthTraining = M_MODEL.createIndividual( "http://schema.org/StrengthTraining", PhysicalActivityCategory );
    
    /** <p>Represents the strikethrough price (the previous advertised price) of an offered 
     *  product.</p>
     */
    public static final Individual StrikethroughPrice = M_MODEL.createIndividual( "http://schema.org/StrikethroughPrice", PriceTypeEnumeration );
    
    /** <p>StudioAlbum.</p> */
    public static final Individual StudioAlbum = M_MODEL.createIndividual( "http://schema.org/StudioAlbum", MusicAlbumProductionType );
    
    /** <p>Represents the subscription pricing component of the total price for an offered 
     *  product.</p>
     */
    public static final Individual Subscription = M_MODEL.createIndividual( "http://schema.org/Subscription", PriceComponentTypeEnumeration );
    
    /** <p>The day of the week between Saturday and Monday.</p> */
    public static final Individual Sunday = M_MODEL.createIndividual( "http://schema.org/Sunday", DayOfWeek );
    
    /** <p>A specific branch of medical science that pertains to treating diseases, injuries 
     *  and deformities by manual and instrumental means.</p>
     */
    public static final Individual Surgical = M_MODEL.createIndividual( "http://schema.org/Surgical", MedicalSpecialty );
    
    /** <p>Suspended.</p> */
    public static final Individual Suspended = M_MODEL.createIndividual( "http://schema.org/Suspended", MedicalStudyStatus );
    
    /** <p>Symptoms or related symptoms of a Topic.</p> */
    public static final Individual SymptomsHealthAspect = M_MODEL.createIndividual( "http://schema.org/SymptomsHealthAspect", HealthAspectEnumeration );
    
    /** <p>Indicates the usage of the car as a taxi.</p> */
    public static final Individual TaxiVehicleUsage = M_MODEL.createIndividual( "http://schema.org/TaxiVehicleUsage", CarUsageType );
    
    /** <p>Terminated.</p> */
    public static final Individual Terminated = M_MODEL.createIndividual( "http://schema.org/Terminated", MedicalStudyStatus );
    
    /** <p>A medical device used for therapeutic purposes.</p> */
    public static final Individual Therapeutic = M_MODEL.createIndividual( "http://schema.org/Therapeutic", MedicalDevicePurpose );
    
    /** <p>Throat assessment with clinical examination.</p> */
    public static final Individual Throat = M_MODEL.createIndividual( "http://schema.org/Throat", PhysicalExam );
    
    /** <p>The day of the week between Wednesday and Friday.</p> */
    public static final Individual Thursday = M_MODEL.createIndividual( "http://schema.org/Thursday", DayOfWeek );
    
    /** <p>Benefit of the tier is earning of loyalty points.</p> */
    public static final Individual TierBenefitLoyaltyPoints = M_MODEL.createIndividual( "http://schema.org/TierBenefitLoyaltyPoints", TierBenefitEnumeration );
    
    /** <p>Benefit of the tier is a members-only price.</p> */
    public static final Individual TierBenefitLoyaltyPrice = M_MODEL.createIndividual( "http://schema.org/TierBenefitLoyaltyPrice", TierBenefitEnumeration );
    
    /** <p>Benefit of the tier is members-only returns, for example free unlimited returns.</p> */
    public static final Individual TierBenefitLoyaltyReturns = M_MODEL.createIndividual( "http://schema.org/TierBenefitLoyaltyReturns", TierBenefitEnumeration );
    
    /** <p>Benefit of the tier is a members-only shipping price or speed (for example 
     *  free shipping or 1-day shipping).</p>
     */
    public static final Individual TierBenefitLoyaltyShipping = M_MODEL.createIndividual( "http://schema.org/TierBenefitLoyaltyShipping", TierBenefitEnumeration );
    
    /** <p>Item contains tobacco and/or nicotine, for example cigars, cigarettes, chewing 
     *  tobacco, e-cigarettes, or hookahs.</p>
     */
    public static final Individual TobaccoNicotineConsideration = M_MODEL.createIndividual( "http://schema.org/TobaccoNicotineConsideration", AdultOrientedEnumeration );
    
    /** <p>The associated telephone number is toll free.</p> */
    public static final Individual TollFree = M_MODEL.createIndividual( "http://schema.org/TollFree", ContactPointOption );
    
    /** <p>A specific branch of medical science that is concerned with poisons, their 
     *  nature, effects and detection and involved in the treatment of poisoning.</p>
     */
    public static final Individual Toxicologic = M_MODEL.createIndividual( "http://schema.org/Toxicologic", MedicalSpecialty );
    
    /** <p>A system of medicine based on common theoretical concepts that originated 
     *  in China and evolved over thousands of years, that uses herbs, acupuncture, 
     *  exercise, massage, dietary therapy, and other methods to treat a wide range 
     *  of conditions.</p>
     */
    public static final Individual TraditionalChinese = M_MODEL.createIndividual( "http://schema.org/TraditionalChinese", MedicineSystem );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/trainedAlgorithmicMedia"&gt;trained 
     *  algorithmic media&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual TrainedAlgorithmicMediaDigitalSource = M_MODEL.createIndividual( "http://schema.org/TrainedAlgorithmicMediaDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Content coded 'transformed content' in a [[MediaReview]], considered in the 
     *  context of how it was published or shared. For a [[VideoObject]] to be 'transformed 
     *  content': or all of the video has been manipulated to transform the footage 
     *  itself. This category includes using tools like the Adobe Suite to change 
     *  the speed of the video, add or remove visual elements or dub audio. Deepfakes 
     *  are also a subset of transformation. For an [[ImageObject]] to be 'transformed 
     *  content': Adding or deleting visual elements to give the image a different 
     *  meaning with the intention to mislead. For an [[ImageObject]] with embedded 
     *  text to be 'transformed content': Adding or deleting visual elements to give 
     *  the image a different meaning with the intention to mislead. For an [[AudioObject]] 
     *  to be 'transformed content': Part or all of the audio has been manipulated 
     *  to alter the words or sounds, or the audio has been synthetically generated, 
     *  such as to create a sound-alike voice.</p>
     */
    public static final Individual TransformedContent = M_MODEL.createIndividual( "http://schema.org/TransformedContent", MediaManipulationRatingEnumeration );
    
    /** <p>A transit map.</p> */
    public static final Individual TransitMap = M_MODEL.createIndividual( "http://schema.org/TransitMap", MapCategoryType );
    
    /** <p>Treatments or related therapies for a Topic.</p> */
    public static final Individual TreatmentsHealthAspect = M_MODEL.createIndividual( "http://schema.org/TreatmentsHealthAspect", HealthAspectEnumeration );
    
    /** <p>A trial design in which neither the researcher, the person administering the 
     *  therapy nor the patient knows the details of the treatment the patient was 
     *  randomly assigned to.</p>
     */
    public static final Individual TripleBlindedTrial = M_MODEL.createIndividual( "http://schema.org/TripleBlindedTrial", MedicalTrialDesign );
    
    /** <p>The boolean value true.</p> */
    public static final Individual True = M_MODEL.createIndividual( "http://schema.org/True", Boolean );
    
    /** <p>The day of the week between Monday and Wednesday.</p> */
    public static final Individual Tuesday = M_MODEL.createIndividual( "http://schema.org/Tuesday", DayOfWeek );
    
    /** <p>Categorization and other types related to a topic.</p> */
    public static final Individual TypesHealthAspect = M_MODEL.createIndividual( "http://schema.org/TypesHealthAspect", HealthAspectEnumeration );
    
    /** <p>UKTrust: Non-profit type referring to a UK trust.</p> */
    public static final Individual UKTrust = M_MODEL.createIndividual( "http://schema.org/UKTrust", UKNonprofitType );
    
    /** <p>Ultrasound imaging.</p> */
    public static final Individual Ultrasound = M_MODEL.createIndividual( "http://schema.org/Ultrasound", MedicalImagingTechnique );
    
    /** <p>The item is suitable only for adults, without indicating why. Due to widespread 
     *  use of "adult" as a euphemism for "sexual", many such items are likely suited 
     *  also for the SexualContentConsideration code.</p>
     */
    public static final Individual UnclassifiedAdultConsideration = M_MODEL.createIndividual( "http://schema.org/UnclassifiedAdultConsideration", AdultOrientedEnumeration );
    
    /** <p>UnemploymentSupport: this is a benefit for unemployment support.</p> */
    public static final Individual UnemploymentSupport = M_MODEL.createIndividual( "http://schema.org/UnemploymentSupport", GovernmentBenefitsType );
    
    /** <p>UnincorporatedAssociationCharity: Non-profit type referring to a charitable 
     *  company that is not incorporated (UK).</p>
     */
    public static final Individual UnincorporatedAssociationCharity = M_MODEL.createIndividual( "http://schema.org/UnincorporatedAssociationCharity", UKNonprofitType );
    
    /** <p>Indicates that a document has no particular or special standing (e.g. a republication 
     *  of a law by a private publisher).</p>
     */
    public static final Individual UnofficialLegalValue = M_MODEL.createIndividual( "http://schema.org/UnofficialLegalValue", LegalValueLevel );
    
    /** <p>A specific branch of medical science that is concerned with the diagnosis 
     *  and treatment of diseases pertaining to the urinary tract and the urogenital 
     *  system.</p>
     */
    public static final Individual Urologic = M_MODEL.createIndividual( "http://schema.org/Urologic", MedicalSpecialty );
    
    /** <p>Content about how, when, frequency and dosage of a topic.</p> */
    public static final Individual UsageOrScheduleHealthAspect = M_MODEL.createIndividual( "http://schema.org/UsageOrScheduleHealthAspect", HealthAspectEnumeration );
    
    /** <p>Indicates that the item is used.</p> */
    public static final Individual UsedCondition = M_MODEL.createIndividual( "http://schema.org/UsedCondition", OfferItemCondition );
    
    /** <p>A diet exclusive of all animal products.</p> */
    public static final Individual VeganDiet = M_MODEL.createIndividual( "http://schema.org/VeganDiet", RestrictedDiet );
    
    /** <p>A diet exclusive of animal meat.</p> */
    public static final Individual VegetarianDiet = M_MODEL.createIndividual( "http://schema.org/VegetarianDiet", RestrictedDiet );
    
    /** <p>A venue map (e.g. for malls, auditoriums, museums, etc.).</p> */
    public static final Individual VenueMap = M_MODEL.createIndividual( "http://schema.org/VenueMap", MapCategoryType );
    
    /** <p>VinylFormat.</p> */
    public static final Individual VinylFormat = M_MODEL.createIndividual( "http://schema.org/VinylFormat", MusicReleaseFormatType );
    
    /** <p>Item shows or promotes violence.</p> */
    public static final Individual ViolenceConsideration = M_MODEL.createIndividual( "http://schema.org/ViolenceConsideration", AdultOrientedEnumeration );
    
    /** <p>Content coded as '&lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/virtualRecording"&gt;virtual 
     *  recording&lt;/a&gt;' using the IPTC &lt;a href="https://cv.iptc.org/newscodes/digitalsourcetype/"&gt;digital 
     *  source type&lt;/a&gt; vocabulary.</p>
     */
    public static final Individual VirtualRecordingDigitalSource = M_MODEL.createIndividual( "http://schema.org/VirtualRecordingDigitalSource", IPTCDigitalSourceEnumeration );
    
    /** <p>Pathogenic virus that causes viral infection.</p> */
    public static final Individual Virus = M_MODEL.createIndividual( "http://schema.org/Virus", InfectiousAgentClass );
    
    /** <p>The item is intended to induce bodily harm, for example guns, mace, combat 
     *  knives, brass knuckles, nail or other bombs, and spears.</p>
     */
    public static final Individual WeaponConsideration = M_MODEL.createIndividual( "http://schema.org/WeaponConsideration", AdultOrientedEnumeration );
    
    /** <p>Measurement of the back section, for example of a jacket.</p> */
    public static final Individual WearableMeasurementBack = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementBack", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the chest/bust section, for example of a suit.</p> */
    public static final Individual WearableMeasurementChestOrBust = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementChestOrBust", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the collar, for example of a shirt.</p> */
    public static final Individual WearableMeasurementCollar = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementCollar", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the cup, for example of a bra.</p> */
    public static final Individual WearableMeasurementCup = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementCup", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the height, for example the heel height of a shoe.</p> */
    public static final Individual WearableMeasurementHeight = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementHeight", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the hip section, for example of a skirt.</p> */
    public static final Individual WearableMeasurementHips = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementHips", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the inseam, for example of pants.</p> */
    public static final Individual WearableMeasurementInseam = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementInseam", WearableMeasurementTypeEnumeration );
    
    /** <p>Represents the length, for example of a dress.</p> */
    public static final Individual WearableMeasurementLength = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementLength", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the outside leg, for example of pants.</p> */
    public static final Individual WearableMeasurementOutsideLeg = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementOutsideLeg", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the sleeve length, for example of a shirt.</p> */
    public static final Individual WearableMeasurementSleeve = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementSleeve", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the waist section, for example of pants.</p> */
    public static final Individual WearableMeasurementWaist = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementWaist", WearableMeasurementTypeEnumeration );
    
    /** <p>Measurement of the width, for example of shoes.</p> */
    public static final Individual WearableMeasurementWidth = M_MODEL.createIndividual( "http://schema.org/WearableMeasurementWidth", WearableMeasurementTypeEnumeration );
    
    /** <p>Size group "Big" for wearables.</p> */
    public static final Individual WearableSizeGroupBig = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupBig", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Boys" for wearables.</p> */
    public static final Individual WearableSizeGroupBoys = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupBoys", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Extra Short" for wearables.</p> */
    public static final Individual WearableSizeGroupExtraShort = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupExtraShort", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Extra Tall" for wearables.</p> */
    public static final Individual WearableSizeGroupExtraTall = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupExtraTall", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Girls" for wearables.</p> */
    public static final Individual WearableSizeGroupGirls = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupGirls", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Husky" (or "Stocky") for wearables.</p> */
    public static final Individual WearableSizeGroupHusky = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupHusky", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Infants" for wearables.</p> */
    public static final Individual WearableSizeGroupInfants = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupInfants", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Juniors" for wearables.</p> */
    public static final Individual WearableSizeGroupJuniors = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupJuniors", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Maternity" for wearables.</p> */
    public static final Individual WearableSizeGroupMaternity = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupMaternity", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Mens" for wearables.</p> */
    public static final Individual WearableSizeGroupMens = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupMens", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Misses" (also known as "Missy") for wearables.</p> */
    public static final Individual WearableSizeGroupMisses = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupMisses", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Petite" for wearables.</p> */
    public static final Individual WearableSizeGroupPetite = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupPetite", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Plus" for wearables.</p> */
    public static final Individual WearableSizeGroupPlus = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupPlus", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Regular" for wearables.</p> */
    public static final Individual WearableSizeGroupRegular = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupRegular", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Short" for wearables.</p> */
    public static final Individual WearableSizeGroupShort = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupShort", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Tall" for wearables.</p> */
    public static final Individual WearableSizeGroupTall = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupTall", WearableSizeGroupEnumeration );
    
    /** <p>Size group "Womens" for wearables.</p> */
    public static final Individual WearableSizeGroupWomens = M_MODEL.createIndividual( "http://schema.org/WearableSizeGroupWomens", WearableSizeGroupEnumeration );
    
    /** <p>Australian size system for wearables.</p> */
    public static final Individual WearableSizeSystemAU = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemAU", WearableSizeSystemEnumeration );
    
    /** <p>Brazilian size system for wearables.</p> */
    public static final Individual WearableSizeSystemBR = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemBR", WearableSizeSystemEnumeration );
    
    /** <p>Chinese size system for wearables.</p> */
    public static final Individual WearableSizeSystemCN = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemCN", WearableSizeSystemEnumeration );
    
    /** <p>Continental size system for wearables.</p> */
    public static final Individual WearableSizeSystemContinental = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemContinental", WearableSizeSystemEnumeration );
    
    /** <p>German size system for wearables.</p> */
    public static final Individual WearableSizeSystemDE = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemDE", WearableSizeSystemEnumeration );
    
    /** <p>EN 13402 (joint European standard for size labelling of clothes).</p> */
    public static final Individual WearableSizeSystemEN13402 = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemEN13402", WearableSizeSystemEnumeration );
    
    /** <p>European size system for wearables.</p> */
    public static final Individual WearableSizeSystemEurope = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemEurope", WearableSizeSystemEnumeration );
    
    /** <p>French size system for wearables.</p> */
    public static final Individual WearableSizeSystemFR = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemFR", WearableSizeSystemEnumeration );
    
    /** <p>GS1 (formerly NRF) size system for wearables.</p> */
    public static final Individual WearableSizeSystemGS1 = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemGS1", WearableSizeSystemEnumeration );
    
    /** <p>Italian size system for wearables.</p> */
    public static final Individual WearableSizeSystemIT = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemIT", WearableSizeSystemEnumeration );
    
    /** <p>Japanese size system for wearables.</p> */
    public static final Individual WearableSizeSystemJP = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemJP", WearableSizeSystemEnumeration );
    
    /** <p>Mexican size system for wearables.</p> */
    public static final Individual WearableSizeSystemMX = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemMX", WearableSizeSystemEnumeration );
    
    /** <p>United Kingdom size system for wearables.</p> */
    public static final Individual WearableSizeSystemUK = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemUK", WearableSizeSystemEnumeration );
    
    /** <p>United States size system for wearables.</p> */
    public static final Individual WearableSizeSystemUS = M_MODEL.createIndividual( "http://schema.org/WearableSizeSystemUS", WearableSizeSystemEnumeration );
    
    /** <p>The day of the week between Tuesday and Thursday.</p> */
    public static final Individual Wednesday = M_MODEL.createIndividual( "http://schema.org/Wednesday", DayOfWeek );
    
    /** <p>The conventional Western system of medicine, that aims to apply the best available 
     *  evidence gained from the scientific method to clinical decision making. Also 
     *  known as conventional or Western medicine.</p>
     */
    public static final Individual WesternConventional = M_MODEL.createIndividual( "http://schema.org/WesternConventional", MedicineSystem );
    
    /** <p>The drug's cost represents the wholesale acquisition cost of the drug.</p> */
    public static final Individual Wholesale = M_MODEL.createIndividual( "http://schema.org/Wholesale", DrugCostCategory );
    
    /** <p>Withdrawn.</p> */
    public static final Individual Withdrawn = M_MODEL.createIndividual( "http://schema.org/Withdrawn", MedicalStudyStatus );
    
    /** <p>Permission to write or edit the document.</p> */
    public static final Individual WritePermission = M_MODEL.createIndividual( "http://schema.org/WritePermission", DigitalDocumentPermissionType );
    
    /** <p>X-ray imaging.</p> */
    public static final Individual XRay = M_MODEL.createIndividual( "http://schema.org/XRay", MedicalImagingTechnique );
    
    /** <p>The airline boards by zones of the plane.</p> */
    public static final Individual ZoneBoardingPolicy = M_MODEL.createIndividual( "http://schema.org/ZoneBoardingPolicy", BoardingPolicyType );
    
    public static final Individual Alt = M_MODEL.createIndividual( "http://www.w3.org/1999/02/22-rdf-syntax-ns#Alt", Class_CLASS );
    
    public static final Individual Bag = M_MODEL.createIndividual( "http://www.w3.org/1999/02/22-rdf-syntax-ns#Bag", Class_CLASS );
    
    public static final Individual Seq = M_MODEL.createIndividual( "http://www.w3.org/1999/02/22-rdf-syntax-ns#Seq", Class_CLASS );
    
    public static final Individual XMLLiteral = M_MODEL.createIndividual( "http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral", M_MODEL.createClass( "http://www.w3.org/2000/01/rdf-schema#Datatype" ) );
    
    public static final Individual Container = M_MODEL.createIndividual( "http://www.w3.org/2000/01/rdf-schema#Container", Class_CLASS );
    
    public static final Individual ContainerMembershipProperty = M_MODEL.createIndividual( "http://www.w3.org/2000/01/rdf-schema#ContainerMembershipProperty", Class_CLASS );
    
    public static final Individual Datatype = M_MODEL.createIndividual( "http://www.w3.org/2000/01/rdf-schema#Datatype", Resource );
    
    public static final Individual anyURI = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#anyURI", Datatype );
    
    public static final Individual base64Binary = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#base64Binary", Datatype );
    
    public static final Individual double_ = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#double", Datatype );
    
    public static final Individual gDay = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#gDay", Datatype );
    
    public static final Individual gMonth = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#gMonth", Datatype );
    
    public static final Individual gMonthDay = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#gMonthDay", Datatype );
    
    public static final Individual gYear = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#gYear", Datatype );
    
    public static final Individual gYearMonth = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#gYearMonth", Datatype );
    
    public static final Individual hexBinary = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#hexBinary", Datatype );
    
    public static final Individual negativeInteger = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#negativeInteger", Datatype );
    
    public static final Individual positiveInteger = M_MODEL.createIndividual( "http://www.w3.org/2001/XMLSchema#positiveInteger", Datatype );
    
    public static final Individual AnnotationProperty = M_MODEL.createIndividual( "http://www.w3.org/2002/07/owl#AnnotationProperty", Class_CLASS );
    
    public static final Individual DatatypeProperty = M_MODEL.createIndividual( "http://www.w3.org/2002/07/owl#DatatypeProperty", Class_CLASS );
    
    public static final Individual FunctionalProperty = M_MODEL.createIndividual( "http://www.w3.org/2002/07/owl#FunctionalProperty", Class_CLASS );
    
    public static final Individual InverseFunctionalProperty = M_MODEL.createIndividual( "http://www.w3.org/2002/07/owl#InverseFunctionalProperty", Class_CLASS );
    
    public static final Individual ObjectProperty = M_MODEL.createIndividual( "http://www.w3.org/2002/07/owl#ObjectProperty", Class_CLASS );
    
    public static final Individual OntologyProperty = M_MODEL.createIndividual( "http://www.w3.org/2002/07/owl#OntologyProperty", Class_CLASS );
    
    public static final Individual SymmetricProperty = M_MODEL.createIndividual( "http://www.w3.org/2002/07/owl#SymmetricProperty", Class_CLASS );
    
    public static final Individual TransitiveProperty = M_MODEL.createIndividual( "http://www.w3.org/2002/07/owl#TransitiveProperty", Class_CLASS );
    
}
